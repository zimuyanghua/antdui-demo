<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AntdUI</name>
    </assembly>
    <members>
        <member name="T:AntdUI.Alert">
            <summary>
            Alert 警告提示
            </summary>
            <remarks>警告提示，展现需要关注的信息。</remarks>
        </member>
        <member name="P:AntdUI.Alert.Radius">
            <summary>
            圆角
            </summary>
        </member>
        <member name="P:AntdUI.Alert.BorderWidth">
            <summary>
            边框宽度
            </summary>
        </member>
        <member name="P:AntdUI.Alert.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:AntdUI.Alert.TextTitle">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:AntdUI.Alert.Icon">
            <summary>
            样式
            </summary>
        </member>
        <member name="P:AntdUI.Alert.Loop">
            <summary>
            文本轮播
            </summary>
        </member>
        <member name="P:AntdUI.Alert.LoopSpeed">
            <summary>
            文本轮播速率
            </summary>
        </member>
        <member name="P:AntdUI.Alert.DisplayRectangle">
            <summary>
            显示区域（容器）
            </summary>
        </member>
        <member name="M:AntdUI.Alert.PaintText(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.SizeF,System.Drawing.Color)">
            <summary>
            渲染文字
            </summary>
            <param name="g">GDI</param>
            <param name="rect">区域</param>
            <param name="size">文字大小</param>
            <param name="fore">文字颜色</param>
        </member>
        <member name="M:AntdUI.Alert.PaintText(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.SizeF,System.Drawing.Color,System.Drawing.Color,System.Single)">
            <summary>
            渲染文字（渐变遮罩）
            </summary>
            <param name="g">GDI</param>
            <param name="rect">区域</param>
            <param name="size">文字大小</param>
            <param name="fore">文字颜色</param>
            <param name="back">背景颜色</param>
        </member>
        <member name="T:AntdUI.Avatar">
            <summary>
            Avatar 头像
            </summary>
            <remarks>用来代表用户或事物，支持图片、图标或字符展示。</remarks>
        </member>
        <member name="P:AntdUI.Avatar.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.Avatar.Back">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.Avatar.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:AntdUI.Avatar.Radius">
            <summary>
            圆角
            </summary>
        </member>
        <member name="P:AntdUI.Avatar.Round">
            <summary>
            圆角样式
            </summary>
        </member>
        <member name="P:AntdUI.Avatar.Image">
            <summary>
            图片
            </summary>
        </member>
        <member name="P:AntdUI.Avatar.PlayGIF">
            <summary>
            播放GIF
            </summary>
        </member>
        <member name="P:AntdUI.Avatar.ImageSvg">
            <summary>
            图片SVG
            </summary>
        </member>
        <member name="P:AntdUI.Avatar.ImageFit">
            <summary>
            图片布局
            </summary>
        </member>
        <member name="P:AntdUI.Avatar.Loading">
            <summary>
            加载状态
            </summary>
        </member>
        <member name="P:AntdUI.Avatar.LoadingProgress">
            <summary>
            加载进度
            </summary>
        </member>
        <member name="P:AntdUI.Avatar.BorderWidth">
            <summary>
            边框宽度
            </summary>
        </member>
        <member name="P:AntdUI.Avatar.BorderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="T:AntdUI.Badge">
            <summary>
            Badge 徽标数
            </summary>
            <remarks>图标右上角的圆形徽标数字。</remarks>
        </member>
        <member name="P:AntdUI.Badge.ForeColor">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.Badge.Fore">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.Badge.State">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:AntdUI.Badge.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:AntdUI.Badge.Fill">
            <summary>
            颜色
            </summary>
        </member>
        <member name="T:AntdUI.Battery">
            <summary>
            Battery 电量
            </summary>
            <remarks>展示设备电量。</remarks>
        </member>
        <member name="P:AntdUI.Battery.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.Battery.ForeColor">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.Battery.Radius">
            <summary>
            圆角
            </summary>
        </member>
        <member name="P:AntdUI.Battery.DotSize">
            <summary>
            点大小
            </summary>
        </member>
        <member name="P:AntdUI.Battery.Value">
            <summary>
            进度条
            </summary>
        </member>
        <member name="T:AntdUI.Button">
            <summary>
            Button 按钮
            </summary>
            <remarks>按钮用于开始一个即时操作。</remarks>
        </member>
        <member name="P:AntdUI.Button.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.Button.ForeColor">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.Button.Fore">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.Button.Back">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.Button.BackExtend">
            <summary>
            背景渐变色
            </summary>
        </member>
        <member name="P:AntdUI.Button.BackHover">
            <summary>
            悬停背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.Button.BackActive">
            <summary>
            激活背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.Button.BackgroundImage">
            <summary>
            背景图片
            </summary>
        </member>
        <member name="P:AntdUI.Button.BackgroundImageLayout">
            <summary>
            背景图片布局
            </summary>
        </member>
        <member name="P:AntdUI.Button.DefaultBack">
            <summary>
            Default模式背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.Button.DefaultBorderColor">
            <summary>
            Default模式边框颜色
            </summary>
        </member>
        <member name="P:AntdUI.Button.BorderWidth">
            <summary>
            边框宽度
            </summary>
        </member>
        <member name="P:AntdUI.Button.WaveSize">
            <summary>
            波浪大小
            </summary>
        </member>
        <member name="P:AntdUI.Button.Radius">
            <summary>
            圆角
            </summary>
        </member>
        <member name="P:AntdUI.Button.Shape">
            <summary>
            形状
            </summary>
        </member>
        <member name="P:AntdUI.Button.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:AntdUI.Button.Ghost">
            <summary>
            幽灵属性，使按钮背景透明
            </summary>
        </member>
        <member name="P:AntdUI.Button.RespondRealAreas">
            <summary>
            响应真实区域
            </summary>
        </member>
        <member name="P:AntdUI.Button.ShowArrow">
            <summary>
            显示箭头
            </summary>
        </member>
        <member name="P:AntdUI.Button.IsLink">
            <summary>
            箭头链接样式
            </summary>
        </member>
        <member name="P:AntdUI.Button.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:AntdUI.Button.TextAlign">
            <summary>
            文本位置
            </summary>
        </member>
        <member name="P:AntdUI.Button.AutoEllipsis">
            <summary>
            文本超出自动处理
            </summary>
        </member>
        <member name="P:AntdUI.Button.TextMultiLine">
            <summary>
            是否多行
            </summary>
        </member>
        <member name="P:AntdUI.Button.IconRatio">
            <summary>
            图标比例
            </summary>
        </member>
        <member name="P:AntdUI.Button.Image">
            <summary>
            图像
            </summary>
        </member>
        <member name="P:AntdUI.Button.ImageSvg">
            <summary>
            图像SVG
            </summary>
        </member>
        <member name="P:AntdUI.Button.HasImage">
            <summary>
            是否包含图片
            </summary>
        </member>
        <member name="P:AntdUI.Button.ImageSize">
            <summary>
            图像大小
            </summary>
        </member>
        <member name="P:AntdUI.Button.ImageHover">
            <summary>
            悬停图像
            </summary>
        </member>
        <member name="P:AntdUI.Button.ImageHoverSvg">
            <summary>
            悬停图像SVG
            </summary>
        </member>
        <member name="P:AntdUI.Button.ImageHoverAnimation">
            <summary>
            悬停图像动画时长
            </summary>
        </member>
        <member name="P:AntdUI.Button.Loading">
            <summary>
            加载状态
            </summary>
        </member>
        <member name="P:AntdUI.Button.JoinLeft">
            <summary>
            连接左边
            </summary>
        </member>
        <member name="P:AntdUI.Button.JoinRight">
            <summary>
            连接右边
            </summary>
        </member>
        <member name="M:AntdUI.Button.GetImageRectCenter(System.Drawing.Size,System.Drawing.Rectangle)">
            <summary>
            居中的图片绘制区域
            </summary>
            <param name="font_size">字体大小</param>
            <param name="rect_read">客户区域</param>
        </member>
        <member name="M:AntdUI.Button.PaintImage(System.Drawing.Graphics,System.Nullable{System.Drawing.Color},System.Drawing.Rectangle,System.Boolean,System.Boolean)">
            <summary>
            渲染图片
            </summary>
            <param name="g">GDI</param>
            <param name="color">颜色</param>
            <param name="rect_o">区域</param>
            <param name="hastxt">包含文本</param>
            <param name="enabled">使能</param>
        </member>
        <member name="M:AntdUI.Button.GetImageRect(System.Drawing.Rectangle)">
            <summary>
            图片绘制区域
            </summary>
            <param name="rectl">图标区域</param>
        </member>
        <member name="P:AntdUI.Button.AutoSize">
            <summary>
            自动大小
            </summary>
        </member>
        <member name="P:AntdUI.Button.AutoSizeMode">
            <summary>
            自动大小模式
            </summary>
        </member>
        <member name="M:AntdUI.Button.NotifyDefault(System.Boolean)">
            <summary>
            是否默认按钮
            </summary>
        </member>
        <member name="T:AntdUI.Calendar">
            <summary>
            Calendar 日历
            </summary>
            <remarks>按照日历形式展示数据的容器。</remarks>
        </member>
        <member name="P:AntdUI.Calendar.Radius">
            <summary>
            圆角
            </summary>
        </member>
        <member name="P:AntdUI.Calendar.Full">
            <summary>
            是否撑满
            </summary>
        </member>
        <member name="P:AntdUI.Calendar.ShowChinese">
            <summary>
            显示农历
            </summary>
        </member>
        <member name="F:AntdUI.Calendar.BadgeAction">
            <summary>
            日期徽标回调
            </summary>
        </member>
        <member name="P:AntdUI.Calendar.Value">
            <summary>
            控件当前日期
            </summary>
        </member>
        <member name="M:AntdUI.Calendar.LoadBadge">
            <summary>
            加载徽标
            </summary>
        </member>
        <member name="M:AntdUI.Calendar.PrintYear(System.Drawing.Graphics,System.Drawing.Rectangle,System.Single,System.Collections.Generic.List{AntdUI.Calendari})">
            <summary>
            渲染年模式
            </summary>
            <param name="g">GDI</param>
            <param name="rect_read">真实区域</param>
            <param name="datas">数据</param>
        </member>
        <member name="M:AntdUI.Calendar.PrintMonth(System.Drawing.Graphics,System.Drawing.Rectangle,System.Single,System.Collections.Generic.List{AntdUI.Calendari})">
            <summary>
            渲染月模式
            </summary>
            <param name="g">GDI</param>
            <param name="rect_read">真实区域</param>
            <param name="datas">数据</param>
        </member>
        <member name="M:AntdUI.Calendar.PrintDay(System.Drawing.Graphics,System.Drawing.Rectangle,System.Single,System.Collections.Generic.List{AntdUI.Calendari})">
            <summary>
            渲染天模式
            </summary>
            <param name="g">GDI</param>
            <param name="rect_read">真实区域</param>
            <param name="datas">数据</param>
        </member>
        <member name="T:AntdUI.Carousel">
            <summary>
            Carousel 走马灯
            </summary>
            <remarks>旋转木马，一组轮播的区域。</remarks>
        </member>
        <member name="P:AntdUI.Carousel.Touch">
            <summary>
            手势滑动
            </summary>
        </member>
        <member name="P:AntdUI.Carousel.TouchOut">
            <summary>
            滑动到外面
            </summary>
        </member>
        <member name="P:AntdUI.Carousel.Autoplay">
            <summary>
            自动切换
            </summary>
        </member>
        <member name="P:AntdUI.Carousel.Autodelay">
            <summary>
            自动切换延迟(s)
            </summary>
        </member>
        <member name="P:AntdUI.Carousel.DotSize">
            <summary>
            面板指示点大小
            </summary>
        </member>
        <member name="P:AntdUI.Carousel.DotMargin">
            <summary>
            面板指示点边距
            </summary>
        </member>
        <member name="P:AntdUI.Carousel.DotPosition">
            <summary>
            面板指示点位置
            </summary>
        </member>
        <member name="P:AntdUI.Carousel.Radius">
            <summary>
            圆角
            </summary>
        </member>
        <member name="P:AntdUI.Carousel.Round">
            <summary>
            圆角样式
            </summary>
        </member>
        <member name="P:AntdUI.Carousel.Image">
            <summary>
            图片集合
            </summary>
        </member>
        <member name="P:AntdUI.Carousel.ImageFit">
            <summary>
            图片布局
            </summary>
        </member>
        <member name="P:AntdUI.Carousel.SelectIndex">
            <summary>
            选择序号
            </summary>
        </member>
        <member name="E:AntdUI.Carousel.SelectIndexChanged">
            <summary>
            SelectIndex 属性值更改时发生
            </summary>
        </member>
        <member name="M:AntdUI.Carousel.SelectRange(System.Int32,System.Drawing.Rectangle)">
            <summary>
            选择脏渲染序号
            </summary>
        </member>
        <member name="P:AntdUI.CarouselItem.Img">
            <summary>
            图片
            </summary>
        </member>
        <member name="P:AntdUI.CarouselItem.Tag">
            <summary>
            用户定义数据
            </summary>
        </member>
        <member name="T:AntdUI.Chat.ChatList">
            <summary>
            ChatList 气泡聊天列表
            </summary>
            <remarks>气泡聊天列表。</remarks>
        </member>
        <member name="P:AntdUI.Chat.ChatList.Items">
            <summary>
            数据集合
            </summary>
        </member>
        <member name="T:AntdUI.Chat.ChatList.ClickEventHandler">
            <summary>
            点击事件
            </summary>
            <param name="sender">触发对象</param>
            <param name="args">点击</param>
            <param name="item">消息框</param>
        </member>
        <member name="E:AntdUI.Chat.ChatList.ItemClick">
            <summary>
            单击时发生
            </summary>
        </member>
        <member name="M:AntdUI.Chat.ChatList.GetCaretPostion(AntdUI.Chat.TextChatItem,System.Int32,System.Int32)">
            <summary>
            通过坐标系查找光标位置
            </summary>
        </member>
        <member name="M:AntdUI.Chat.ChatList.FindNearestFont(System.Int32,System.Int32,AntdUI.Chat.CacheFont[])">
            <summary>
            寻找最近的矩形和距离的辅助方法
            </summary>
        </member>
        <member name="P:AntdUI.Chat.TextChatItem.Me">
            <summary>
            本人
            </summary>
        </member>
        <member name="P:AntdUI.Chat.TextChatItem.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:AntdUI.Chat.TextChatItem.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:AntdUI.Chat.TextChatItem.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:AntdUI.Chat.TextChatItem.SelectionStart">
            <summary>
            所选文本的起点
            </summary>
        </member>
        <member name="P:AntdUI.Chat.TextChatItem.SelectionLength">
            <summary>
            所选文本的长度
            </summary>
        </member>
        <member name="P:AntdUI.Chat.IChatItem.Tag">
            <summary>
            用户定义数据
            </summary>
        </member>
        <member name="T:AntdUI.Chat.MsgList">
            <summary>
            MsgList 好友消息列表
            </summary>
            <remarks>好友消息列表。</remarks>
        </member>
        <member name="P:AntdUI.Chat.MsgList.Items">
            <summary>
            数据集合
            </summary>
        </member>
        <member name="P:AntdUI.Chat.MsgItem.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:AntdUI.Chat.MsgItem.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:AntdUI.Chat.MsgItem.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:AntdUI.Chat.MsgItem.Count">
            <summary>
            消息数量
            </summary>
        </member>
        <member name="P:AntdUI.Chat.MsgItem.Time">
            <summary>
            时间
            </summary>
        </member>
        <member name="P:AntdUI.Chat.MsgItem.Visible">
            <summary>
            是否显示
            </summary>
        </member>
        <member name="P:AntdUI.Chat.MsgItem.Tag">
            <summary>
            用户定义数据
            </summary>
        </member>
        <member name="F:AntdUI.Chat.MsgItem.Hover">
            <summary>
            是否移动
            </summary>
        </member>
        <member name="T:AntdUI.Checkbox">
            <summary>
            Checkbox 多选框
            </summary>
            <remarks>多选框。</remarks>
        </member>
        <member name="P:AntdUI.Checkbox.ForeColor">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.Checkbox.Fore">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.Checkbox.Fill">
            <summary>
            填充颜色
            </summary>
        </member>
        <member name="P:AntdUI.Checkbox.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:AntdUI.Checkbox.Checked">
            <summary>
            选中状态
            </summary>
        </member>
        <member name="P:AntdUI.Checkbox.AutoCheck">
            <summary>
            点击时自动改变选中状态
            </summary>
        </member>
        <member name="E:AntdUI.Checkbox.CheckedChanged">
            <summary>
            Checked 属性值更改时发生
            </summary>
        </member>
        <member name="P:AntdUI.Checkbox.AutoSize">
            <summary>
            自动大小
            </summary>
        </member>
        <member name="P:AntdUI.Checkbox.AutoSizeMode">
            <summary>
            自动大小模式
            </summary>
        </member>
        <member name="T:AntdUI.ColorPicker">
            <summary>
            ColorPicker 颜色选择器
            </summary>
            <remarks>提供颜色选取的组件。</remarks>
        </member>
        <member name="P:AntdUI.ColorPicker.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.ColorPicker.ForeColor">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.ColorPicker.Fore">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.ColorPicker.Back">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.ColorPicker.BorderWidth">
            <summary>
            边框宽度
            </summary>
        </member>
        <member name="F:AntdUI.ColorPicker.borderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="P:AntdUI.ColorPicker.BorderHover">
            <summary>
            悬停边框颜色
            </summary>
        </member>
        <member name="P:AntdUI.ColorPicker.BorderActive">
            <summary>
            激活边框颜色
            </summary>
        </member>
        <member name="P:AntdUI.ColorPicker.WaveSize">
            <summary>
            波浪大小
            </summary>
        </member>
        <member name="P:AntdUI.ColorPicker.Radius">
            <summary>
            圆角
            </summary>
        </member>
        <member name="P:AntdUI.ColorPicker.Round">
            <summary>
            圆角样式
            </summary>
        </member>
        <member name="P:AntdUI.ColorPicker.JoinLeft">
            <summary>
            连接左边
            </summary>
        </member>
        <member name="P:AntdUI.ColorPicker.JoinRight">
            <summary>
            连接右边
            </summary>
        </member>
        <member name="E:AntdUI.ColorPicker.ValueChanged">
            <summary>
            Value 属性值更改时发生
            </summary>
        </member>
        <member name="P:AntdUI.ColorPicker.AutoSize">
            <summary>
            自动大小
            </summary>
        </member>
        <member name="P:AntdUI.ColorPicker.AutoSizeMode">
            <summary>
            自动大小模式
            </summary>
        </member>
        <member name="T:AntdUI.ContextMenuStrip">
            <summary>
            右键菜单
            </summary>
        </member>
        <member name="M:AntdUI.ContextMenuStrip.open(System.Windows.Forms.Control,System.Action{AntdUI.ContextMenuStripItem},AntdUI.IContextMenuStripItem[],System.Int32)">
            <summary>
            ContextMenuStrip 右键菜单
            </summary>
            <param name="control">所属控件</param>
            <param name="call">点击回调</param>
            <param name="items">内容</param>
        </member>
        <member name="M:AntdUI.ContextMenuStrip.open(System.Windows.Forms.Control,System.Windows.Forms.NotifyIcon,System.Action{AntdUI.ContextMenuStripItem},AntdUI.IContextMenuStripItem[],System.Int32)">
            <summary>
            ContextMenuStrip 右键菜单
            </summary>
            <param name="control">所属控件</param>
            <param name="notifyIcon">托盘</param>
            <param name="call">点击回调</param>
            <param name="items">内容</param>
        </member>
        <member name="M:AntdUI.ContextMenuStrip.open(AntdUI.ContextMenuStrip.Config)">
            <summary>
            ContextMenuStrip 右键菜单
            </summary>
            <param name="config">配置</param>
        </member>
        <member name="T:AntdUI.ContextMenuStrip.Config">
            <summary>
            配置
            </summary>
        </member>
        <member name="P:AntdUI.ContextMenuStrip.Config.Control">
            <summary>
            所属控件
            </summary>
        </member>
        <member name="P:AntdUI.ContextMenuStrip.Config.Items">
            <summary>
            菜单内容
            </summary>
        </member>
        <member name="P:AntdUI.ContextMenuStrip.Config.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="P:AntdUI.ContextMenuStrip.Config.Radius">
            <summary>
            圆角
            </summary>
        </member>
        <member name="P:AntdUI.ContextMenuStrip.Config.TopMost">
            <summary>
            是否置顶
            </summary>
        </member>
        <member name="P:AntdUI.ContextMenuStrip.Config.CallSleep">
            <summary>
            延迟回调
            </summary>
        </member>
        <member name="P:AntdUI.ContextMenuStrip.Config.UFocus">
            <summary>
            是否抢占焦点
            </summary>
        </member>
        <member name="P:AntdUI.ContextMenuStrip.Config.Location">
            <summary>
            坐标
            </summary>
        </member>
        <member name="P:AntdUI.ContextMenuStrip.Config.Align">
            <summary>
            方向
            </summary>
        </member>
        <member name="P:AntdUI.ContextMenuStrip.Config.Call">
            <summary>
            点击回调
            </summary>
        </member>
        <member name="T:AntdUI.ContextMenuStripItem">
            <summary>
            右键菜单项
            </summary>
        </member>
        <member name="M:AntdUI.ContextMenuStripItem.#ctor(System.String)">
            <summary>
            右键菜单项
            </summary>
            <param name="text">文本</param>
        </member>
        <member name="M:AntdUI.ContextMenuStripItem.#ctor(System.String,System.String)">
            <summary>
            右键菜单项
            </summary>
            <param name="text">文本</param>
            <param name="subtext">子文本</param>
        </member>
        <member name="P:AntdUI.ContextMenuStripItem.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:AntdUI.ContextMenuStripItem.SubText">
            <summary>
            子文本
            </summary>
        </member>
        <member name="P:AntdUI.ContextMenuStripItem.Fore">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.ContextMenuStripItem.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:AntdUI.ContextMenuStripItem.IconSvg">
            <summary>
            图标SVG
            </summary>
        </member>
        <member name="P:AntdUI.ContextMenuStripItem.Enabled">
            <summary>
            使能
            </summary>
        </member>
        <member name="P:AntdUI.ContextMenuStripItem.Checked">
            <summary>
            选中
            </summary>
        </member>
        <member name="P:AntdUI.ContextMenuStripItem.Sub">
            <summary>
            子项
            </summary>
        </member>
        <member name="P:AntdUI.ContextMenuStripItem.Tag">
            <summary>
            用户定义数据
            </summary>
        </member>
        <member name="T:AntdUI.ContextMenuStripItemDivider">
            <summary>
            右键菜单分割项
            </summary>
        </member>
        <member name="T:AntdUI.DatePicker">
            <summary>
            DatePicker 日期选择框
            </summary>
            <remarks>输入或选择日期的控件。</remarks>
        </member>
        <member name="P:AntdUI.DatePicker.Format">
            <summary>
            格式化
            </summary>
        </member>
        <member name="P:AntdUI.DatePicker.Value">
            <summary>
            控件当前日期
            </summary>
        </member>
        <member name="F:AntdUI.DatePicker.BadgeAction">
            <summary>
            日期徽标回调
            </summary>
        </member>
        <member name="P:AntdUI.DatePicker.Presets">
            <summary>
            预置
            </summary>
        </member>
        <member name="P:AntdUI.DatePicker.Placement">
            <summary>
            菜单弹出位置
            </summary>
        </member>
        <member name="P:AntdUI.DatePicker.DropDownArrow">
            <summary>
            下拉箭头是否显示
            </summary>
        </member>
        <member name="P:AntdUI.DatePicker.FocusExpandDropdown">
            <summary>
            焦点时展开下拉
            </summary>
        </member>
        <member name="P:AntdUI.DatePicker.ShowIcon">
            <summary>
            是否显示图标
            </summary>
        </member>
        <member name="E:AntdUI.DatePicker.PresetsClickChanged">
            <summary>
            预置点击时发生
            </summary>
        </member>
        <member name="T:AntdUI.DateBadge">
            <summary>
            日期上徽标
            </summary>
        </member>
        <member name="P:AntdUI.DateBadge.Date">
            <summary>
            日期 yyyy-MM-dd
            </summary>
        </member>
        <member name="P:AntdUI.DateBadge.Count">
            <summary>
            徽标计数 0是点
            </summary>
        </member>
        <member name="P:AntdUI.DateBadge.Fill">
            <summary>
            填充颜色
            </summary>
        </member>
        <member name="T:AntdUI.DatePickerRange">
            <summary>
            DatePickerRange 日期范围选择框
            </summary>
            <remarks>输入或选择日期范围的控件。</remarks>
        </member>
        <member name="P:AntdUI.DatePickerRange.PlaceholderStart">
            <summary>
            显示的水印文本
            </summary>
        </member>
        <member name="P:AntdUI.DatePickerRange.PlaceholderEnd">
            <summary>
            显示的水印文本
            </summary>
        </member>
        <member name="P:AntdUI.DatePickerRange.PlaceholderText">
            <summary>
            水印文本
            </summary>
        </member>
        <member name="P:AntdUI.DatePickerRange.Format">
            <summary>
            格式化
            </summary>
        </member>
        <member name="P:AntdUI.DatePickerRange.SwapSvg">
            <summary>
            交换图标SVG
            </summary>
        </member>
        <member name="F:AntdUI.DatePickerRange.BadgeAction">
            <summary>
            日期徽标回调
            </summary>
        </member>
        <member name="P:AntdUI.DatePickerRange.Presets">
            <summary>
            预置
            </summary>
        </member>
        <member name="P:AntdUI.DatePickerRange.Placement">
            <summary>
            菜单弹出位置
            </summary>
        </member>
        <member name="P:AntdUI.DatePickerRange.DropDownArrow">
            <summary>
            下拉箭头是否显示
            </summary>
        </member>
        <member name="P:AntdUI.DatePickerRange.FocusExpandDropdown">
            <summary>
            焦点时展开下拉
            </summary>
        </member>
        <member name="P:AntdUI.DatePickerRange.ShowIcon">
            <summary>
            是否显示图标
            </summary>
        </member>
        <member name="E:AntdUI.DatePickerRange.PresetsClickChanged">
            <summary>
            预置点击时发生
            </summary>
        </member>
        <member name="T:AntdUI.Divider">
            <summary>
            Divider 分割线
            </summary>
            <remarks>区隔内容的分割线。</remarks>
        </member>
        <member name="P:AntdUI.Divider.Vertical">
            <summary>
            是否竖向
            </summary>
        </member>
        <member name="P:AntdUI.Divider.Orientation">
            <summary>
            方向
            </summary>
        </member>
        <member name="P:AntdUI.Divider.OrientationMargin">
            <summary>
            文本与边缘距离，取值 0 ～ 1
            </summary>
        </member>
        <member name="P:AntdUI.Divider.TextPadding">
            <summary>
            文本与线距离，同等字体大小
            </summary>
        </member>
        <member name="P:AntdUI.Divider.Thickness">
            <summary>
            厚度
            </summary>
        </member>
        <member name="P:AntdUI.Divider.ColorSplit">
            <summary>
            线颜色
            </summary>
        </member>
        <member name="P:AntdUI.Divider.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="T:AntdUI.Drawer">
            <summary>
            Drawer 抽屉
            </summary>
            <remarks>屏幕边缘滑出的浮层面板。</remarks>
        </member>
        <member name="M:AntdUI.Drawer.open(System.Windows.Forms.Form,System.Windows.Forms.Control,AntdUI.TAlignMini)">
            <summary>
            Drawer 抽屉
            </summary>
            <param name="form">所属控件</param>
            <param name="content">控件</param>
            <param name="Align">方向</param>
        </member>
        <member name="M:AntdUI.Drawer.config(System.Windows.Forms.Form,System.Windows.Forms.Control,AntdUI.TAlignMini)">
            <summary>
            Drawer 配置
            </summary>
            <param name="form">所属控件</param>
            <param name="content">控件</param>
            <param name="Align">方向</param>
        </member>
        <member name="M:AntdUI.Drawer.open(AntdUI.Drawer.Config)">
            <summary>
            Drawer 抽屉
            </summary>
            <param name="config">配置</param>
        </member>
        <member name="T:AntdUI.Drawer.Config">
            <summary>
            配置
            </summary>
        </member>
        <member name="M:AntdUI.Drawer.Config.#ctor(System.Windows.Forms.Form,System.Windows.Forms.Control)">
            <summary>
            Drawer 配置
            </summary>
            <param name="form">所属控件</param>
            <param name="content">控件</param>
        </member>
        <member name="P:AntdUI.Drawer.Config.Form">
            <summary>
            所属窗口
            </summary>
        </member>
        <member name="P:AntdUI.Drawer.Config.Content">
            <summary>
            控件
            </summary>
        </member>
        <member name="P:AntdUI.Drawer.Config.Mask">
            <summary>
            是否展示遮罩
            </summary>
        </member>
        <member name="P:AntdUI.Drawer.Config.MaskClosable">
            <summary>
            点击蒙层是否允许关闭
            </summary>
        </member>
        <member name="P:AntdUI.Drawer.Config.Padding">
            <summary>
            边距
            </summary>
        </member>
        <member name="P:AntdUI.Drawer.Config.Align">
            <summary>
            方向
            </summary>
        </member>
        <member name="P:AntdUI.Drawer.Config.Dispose">
            <summary>
            是否释放
            </summary>
        </member>
        <member name="P:AntdUI.Drawer.Config.Tag">
            <summary>
            用户定义数据
            </summary>
        </member>
        <member name="P:AntdUI.Drawer.Config.OnLoad">
            <summary>
            加载回调
            </summary>
        </member>
        <member name="P:AntdUI.Drawer.Config.OnClose">
            <summary>
            关闭回调
            </summary>
        </member>
        <member name="T:AntdUI.Dropdown">
            <summary>
            Dropdown 选择器
            </summary>
            <remarks>向下弹出的列表。</remarks>
        </member>
        <member name="P:AntdUI.Dropdown.ListAutoWidth">
            <summary>
            列表自动宽度
            </summary>
        </member>
        <member name="P:AntdUI.Dropdown.Trigger">
            <summary>
            触发下拉的行为
            </summary>
        </member>
        <member name="P:AntdUI.Dropdown.Placement">
            <summary>
            菜单弹出位置
            </summary>
        </member>
        <member name="P:AntdUI.Dropdown.MaxCount">
            <summary>
            列表最多显示条数
            </summary>
        </member>
        <member name="P:AntdUI.Dropdown.DropDownArrow">
            <summary>
            下拉箭头是否显示
            </summary>
        </member>
        <member name="P:AntdUI.Dropdown.ClickEnd">
            <summary>
            点击到最里层（无节点才能点击）
            </summary>
        </member>
        <member name="P:AntdUI.Dropdown.Items">
            <summary>
            数据
            </summary>
        </member>
        <member name="E:AntdUI.Dropdown.SelectedValueChanged">
            <summary>
            SelectedValue 属性值更改时发生
            </summary>
        </member>
        <member name="T:AntdUI.FloatButton">
            <summary>
            FloatButton 悬浮按钮
            </summary>
            <remarks>悬浮按钮。</remarks>
        </member>
        <member name="M:AntdUI.FloatButton.open(System.Windows.Forms.Form,AntdUI.FloatButton.ConfigBtn[],System.Action{AntdUI.FloatButton.ConfigBtn})">
            <summary>
            FloatButton 悬浮按钮
            </summary>
            <param name="form">所属窗口</param>
            <param name="btns">按钮</param>
            <param name="call">回调</param>
        </member>
        <member name="M:AntdUI.FloatButton.open(System.Windows.Forms.Form,System.Windows.Forms.Control,AntdUI.FloatButton.ConfigBtn[],System.Action{AntdUI.FloatButton.ConfigBtn})">
            <summary>
            FloatButton 悬浮按钮
            </summary>
            <param name="form">所属窗口</param>
            <param name="content">所属控件</param>
            <param name="btns">按钮</param>
            <param name="call">回调</param>
        </member>
        <member name="M:AntdUI.FloatButton.config(System.Windows.Forms.Form,AntdUI.FloatButton.ConfigBtn[],System.Action{AntdUI.FloatButton.ConfigBtn})">
            <summary>
            FloatButton 配置
            </summary>
            <param name="form">所属窗口</param>
            <param name="btns">按钮</param>
            <param name="call">回调</param>
        </member>
        <member name="M:AntdUI.FloatButton.config(System.Windows.Forms.Form,System.Windows.Forms.Control,AntdUI.FloatButton.ConfigBtn[],System.Action{AntdUI.FloatButton.ConfigBtn})">
            <summary>
            FloatButton 配置
            </summary>
            <param name="form">所属窗口</param>
            <param name="content">所属控件</param>
            <param name="btns">按钮</param>
            <param name="call">回调</param>
        </member>
        <member name="M:AntdUI.FloatButton.open(AntdUI.FloatButton.Config)">
            <summary>
            FloatButton 悬浮按钮
            </summary>
            <param name="config">配置</param>
        </member>
        <member name="T:AntdUI.FloatButton.Config">
            <summary>
            配置
            </summary>
        </member>
        <member name="M:AntdUI.FloatButton.Config.#ctor(System.Windows.Forms.Form,AntdUI.FloatButton.ConfigBtn[],System.Action{AntdUI.FloatButton.ConfigBtn})">
            <summary>
            配置
            </summary>
            <param name="form">所属窗口</param>
            <param name="btns">按钮</param>
            <param name="call">回调</param>
        </member>
        <member name="P:AntdUI.FloatButton.Config.Form">
            <summary>
            所属窗口
            </summary>
        </member>
        <member name="P:AntdUI.FloatButton.Config.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="P:AntdUI.FloatButton.Config.Control">
            <summary>
            所属控件
            </summary>
        </member>
        <member name="P:AntdUI.FloatButton.Config.Align">
            <summary>
            方向
            </summary>
        </member>
        <member name="P:AntdUI.FloatButton.Config.Vertical">
            <summary>
            是否垂直方向
            </summary>
        </member>
        <member name="P:AntdUI.FloatButton.Config.TopMost">
            <summary>
            是否置顶
            </summary>
        </member>
        <member name="P:AntdUI.FloatButton.Config.Size">
            <summary>
            大小
            </summary>
        </member>
        <member name="P:AntdUI.FloatButton.Config.MarginX">
            <summary>
            边距X
            </summary>
        </member>
        <member name="P:AntdUI.FloatButton.Config.MarginY">
            <summary>
            边距Y
            </summary>
        </member>
        <member name="P:AntdUI.FloatButton.Config.Btns">
            <summary>
            按钮列表
            </summary>
        </member>
        <member name="P:AntdUI.FloatButton.Config.Call">
            <summary>
            点击回调
            </summary>
        </member>
        <member name="T:AntdUI.FloatButton.ConfigBtn">
            <summary>
            配置 按钮
            </summary>
        </member>
        <member name="M:AntdUI.FloatButton.ConfigBtn.#ctor(System.String,System.Drawing.Bitmap)">
            <summary>
            配置 按钮
            </summary>
            <param name="name">名称</param>
            <param name="icon">图标</param>
        </member>
        <member name="M:AntdUI.FloatButton.ConfigBtn.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            配置 按钮
            </summary>
            <param name="name">名称</param>
            <param name="text">标题/SVG</param>
            <param name="isSVG">是否SVG</param>
        </member>
        <member name="P:AntdUI.FloatButton.ConfigBtn.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:AntdUI.FloatButton.ConfigBtn.Icon">
            <summary>
            自定义图标
            </summary>
        </member>
        <member name="P:AntdUI.FloatButton.ConfigBtn.IconSvg">
            <summary>
            自定义图标SVG
            </summary>
        </member>
        <member name="P:AntdUI.FloatButton.ConfigBtn.Text">
            <summary>
            文字及其它内容
            </summary>
        </member>
        <member name="P:AntdUI.FloatButton.ConfigBtn.Tooltip">
            <summary>
            气泡的内容
            </summary>
        </member>
        <member name="P:AntdUI.FloatButton.ConfigBtn.Type">
            <summary>
            设置按钮类型
            </summary>
        </member>
        <member name="P:AntdUI.FloatButton.ConfigBtn.Radius">
            <summary>
            圆角
            </summary>
        </member>
        <member name="P:AntdUI.FloatButton.ConfigBtn.Shape">
            <summary>
            设置按钮形状
            </summary>
        </member>
        <member name="P:AntdUI.FloatButton.ConfigBtn.Badge">
            <summary>
            徽标文本
            </summary>
        </member>
        <member name="P:AntdUI.FloatButton.ConfigBtn.BadgeSize">
            <summary>
            徽标大小
            </summary>
        </member>
        <member name="P:AntdUI.FloatButton.ConfigBtn.BadgeBack">
            <summary>
            徽标背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.IControl.BadgeOffsetX">
            <summary>
            徽标偏移X
            </summary>
        </member>
        <member name="P:AntdUI.IControl.BadgeOffsetY">
            <summary>
            徽标偏移Y
            </summary>
        </member>
        <member name="M:AntdUI.IControl.Spin(System.Action,System.Action)">
            <summary>
            Spin 加载中
            </summary>
            <param name="action">需要等待的委托</param>
            <param name="end">运行结束后的回调</param>
        </member>
        <member name="M:AntdUI.IControl.Spin(System.String,System.Action,System.Action)">
            <summary>
            Spin 加载中
            </summary>
            <param name="text">加载文本</param>
            <param name="action">需要等待的委托</param>
            <param name="end">运行结束后的回调</param>
        </member>
        <member name="M:AntdUI.IControl.Spin(AntdUI.Spin.Config,System.Action,System.Action)">
            <summary>
            Spin 加载中
            </summary>
            <param name="config">自定义配置</param>
            <param name="action">需要等待的委托</param>
            <param name="end">运行结束后的回调</param>
        </member>
        <member name="P:AntdUI.IControl.ReadRectangle">
            <summary>
            真实区域
            </summary>
        </member>
        <member name="P:AntdUI.BadgeConfig.Badge">
            <summary>
            徽标内容
            </summary>
        </member>
        <member name="P:AntdUI.BadgeConfig.BadgeSize">
            <summary>
            徽标大小
            </summary>
        </member>
        <member name="P:AntdUI.BadgeConfig.BadgeBack">
            <summary>
            徽标背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.ShadowConfig.Shadow">
            <summary>
            阴影大小
            </summary>
        </member>
        <member name="P:AntdUI.ShadowConfig.ShadowColor">
            <summary>
            阴影颜色
            </summary>
        </member>
        <member name="P:AntdUI.ShadowConfig.ShadowOpacity">
            <summary>
            阴影透明度
            </summary>
        </member>
        <member name="P:AntdUI.ShadowConfig.ShadowOffsetX">
            <summary>
            阴影偏移X
            </summary>
        </member>
        <member name="P:AntdUI.ShadowConfig.ShadowOffsetY">
            <summary>
            阴影偏移Y
            </summary>
        </member>
        <member name="T:AntdUI.Icon.IconComplete">
            <summary>
            完成图标
            </summary>
        </member>
        <member name="T:AntdUI.Icon.IconError">
            <summary>
            失败图标
            </summary>
        </member>
        <member name="T:AntdUI.Icon.IconInfo">
            <summary>
            信息图标
            </summary>
        </member>
        <member name="T:AntdUI.Icon.IconWarn">
            <summary>
            警告图标
            </summary>
        </member>
        <member name="P:AntdUI.Image3D.Back">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.Image3D.Radius">
            <summary>
            圆角
            </summary>
        </member>
        <member name="P:AntdUI.Image3D.Round">
            <summary>
            圆角样式
            </summary>
        </member>
        <member name="P:AntdUI.Image3D.Image">
            <summary>
            图片
            </summary>
        </member>
        <member name="P:AntdUI.Image3D.ImageFit">
            <summary>
            图片布局
            </summary>
        </member>
        <member name="P:AntdUI.Image3D.Vertical">
            <summary>
            是否竖向
            </summary>
        </member>
        <member name="P:AntdUI.Image3D.Speed">
            <summary>
            速度
            </summary>
        </member>
        <member name="P:AntdUI.Image3D.Duration">
            <summary>
            速度
            </summary>
        </member>
        <member name="P:AntdUI.Image3D.Shadow">
            <summary>
            阴影大小
            </summary>
        </member>
        <member name="P:AntdUI.Image3D.ShadowColor">
            <summary>
            阴影颜色
            </summary>
        </member>
        <member name="P:AntdUI.Image3D.ShadowOpacity">
            <summary>
            阴影透明度
            </summary>
        </member>
        <member name="P:AntdUI.Image3D.ShadowOffsetX">
            <summary>
            阴影偏移X
            </summary>
        </member>
        <member name="P:AntdUI.Image3D.ShadowOffsetY">
            <summary>
            阴影偏移Y
            </summary>
        </member>
        <member name="T:AntdUI.InputNumber">
            <summary>
            InputNumber 数字输入框
            </summary>
            <remarks>通过鼠标或键盘，输入范围内的数值。</remarks>
        </member>
        <member name="P:AntdUI.InputNumber.AllowClear">
            <summary>
            支持清除
            </summary>
        </member>
        <member name="P:AntdUI.InputNumber.ShowControl">
            <summary>
            显示控制器
            </summary>
        </member>
        <member name="P:AntdUI.InputNumber.DecimalPlaces">
            <summary>
            显示的小数点位数
            </summary>
        </member>
        <member name="P:AntdUI.InputNumber.ThousandsSeparator">
            <summary>
            是否显示千分隔符
            </summary>
        </member>
        <member name="P:AntdUI.InputNumber.Hexadecimal">
            <summary>
            值是否应以十六进制显示
            </summary>
        </member>
        <member name="P:AntdUI.InputNumber.InterceptArrowKeys">
            <summary>
            当按下箭头键时，是否持续增加/减少
            </summary>
        </member>
        <member name="P:AntdUI.InputNumber.Increment">
            <summary>
            每次单击箭头键时增加/减少的数量
            </summary>
        </member>
        <member name="E:AntdUI.InputNumber.ValueChanged">
            <summary>
            Value 属性值更改时发生
            </summary>
        </member>
        <member name="T:AntdUI.Input">
            <summary>
            Input 输入框
            </summary>
            <remarks>通过鼠标或键盘输入内容，是最基础的表单域的包装。</remarks>
            <summary>
            透明文本框
            </summary>
        </member>
        <member name="P:AntdUI.Input.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.Input.ForeColor">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.Input.Fore">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.Input.Back">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.Input.BackgroundImage">
            <summary>
            背景图片
            </summary>
        </member>
        <member name="P:AntdUI.Input.BackgroundImageLayout">
            <summary>
            背景图片布局
            </summary>
        </member>
        <member name="P:AntdUI.Input.SelectionColor">
            <summary>
            选中颜色
            </summary>
        </member>
        <member name="P:AntdUI.Input.BorderWidth">
            <summary>
            边框宽度
            </summary>
        </member>
        <member name="F:AntdUI.Input.borderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="P:AntdUI.Input.BorderHover">
            <summary>
            悬停边框颜色
            </summary>
        </member>
        <member name="P:AntdUI.Input.BorderActive">
            <summary>
            激活边框颜色
            </summary>
        </member>
        <member name="P:AntdUI.Input.WaveSize">
            <summary>
            波浪大小
            </summary>
        </member>
        <member name="P:AntdUI.Input.Radius">
            <summary>
            圆角
            </summary>
        </member>
        <member name="P:AntdUI.Input.Round">
            <summary>
            圆角样式
            </summary>
        </member>
        <member name="P:AntdUI.Input.Status">
            <summary>
            设置校验状态
            </summary>
        </member>
        <member name="P:AntdUI.Input.IconRatio">
            <summary>
            图标比例
            </summary>
        </member>
        <member name="P:AntdUI.Input.Prefix">
            <summary>
            前缀
            </summary>
        </member>
        <member name="P:AntdUI.Input.PrefixSvg">
            <summary>
            前缀SVG
            </summary>
        </member>
        <member name="P:AntdUI.Input.Image">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:AntdUI.Input.HasPrefix">
            <summary>
            是否包含前缀
            </summary>
        </member>
        <member name="P:AntdUI.Input.Suffix">
            <summary>
            后缀
            </summary>
        </member>
        <member name="P:AntdUI.Input.SuffixSvg">
            <summary>
            后缀SVG
            </summary>
        </member>
        <member name="P:AntdUI.Input.HasSuffix">
            <summary>
            是否包含后缀
            </summary>
        </member>
        <member name="P:AntdUI.Input.JoinLeft">
            <summary>
            连接左边
            </summary>
        </member>
        <member name="P:AntdUI.Input.JoinRight">
            <summary>
            连接右边
            </summary>
        </member>
        <member name="P:AntdUI.Input.AllowClear">
            <summary>
            支持清除
            </summary>
        </member>
        <member name="P:AntdUI.Input.SelectionStart">
            <summary>
            所选文本的起点
            </summary>
        </member>
        <member name="P:AntdUI.Input.SelectionLength">
            <summary>
            所选文本的长度
            </summary>
        </member>
        <member name="P:AntdUI.Input.AcceptsTab">
            <summary>
            多行编辑是否允许输入制表符
            </summary>
        </member>
        <member name="P:AntdUI.Input.LostFocusClearSelection">
            <summary>
            焦点离开清空选中
            </summary>
        </member>
        <member name="P:AntdUI.Input.ReadOnly">
            <summary>
            只读
            </summary>
        </member>
        <member name="P:AntdUI.Input.Multiline">
            <summary>
            多行文本
            </summary>
        </member>
        <member name="P:AntdUI.Input.TextAlign">
            <summary>
            文本对齐方向
            </summary>
        </member>
        <member name="P:AntdUI.Input.PlaceholderText">
            <summary>
            水印文本
            </summary>
        </member>
        <member name="P:AntdUI.Input.MaxLength">
            <summary>
            文本最大长度
            </summary>
        </member>
        <member name="P:AntdUI.Input.UseSystemPasswordChar">
            <summary>
            使用密码框
            </summary>
        </member>
        <member name="P:AntdUI.Input.PasswordChar">
            <summary>
            自定义密码字符
            </summary>
        </member>
        <member name="P:AntdUI.Input.PasswordCopy">
            <summary>
            密码可以复制
            </summary>
        </member>
        <member name="M:AntdUI.Input.AppendText(System.String)">
            <summary>
            将文本追加到当前文本中
            </summary>
            <param name="text">追加的文本</param>
        </member>
        <member name="M:AntdUI.Input.Clear">
            <summary>
            清除所有文本
            </summary>
        </member>
        <member name="M:AntdUI.Input.ClearUndo">
            <summary>
            清除撤消缓冲区信息
            </summary>
        </member>
        <member name="M:AntdUI.Input.Copy">
            <summary>
            复制
            </summary>
        </member>
        <member name="M:AntdUI.Input.Cut">
            <summary>
            剪贴
            </summary>
        </member>
        <member name="M:AntdUI.Input.Paste">
            <summary>
            粘贴
            </summary>
        </member>
        <member name="M:AntdUI.Input.DeselectAll">
            <summary>
            取消全部选中
            </summary>
        </member>
        <member name="M:AntdUI.Input.Undo">
            <summary>
            撤消
            </summary>
        </member>
        <member name="M:AntdUI.Input.Redo">
            <summary>
            重做
            </summary>
        </member>
        <member name="M:AntdUI.Input.Select(System.Int32,System.Int32)">
            <summary>
            文本选择范围
            </summary>
            <param name="start">第一个字符的位置</param>
            <param name="length">字符长度</param>
        </member>
        <member name="M:AntdUI.Input.SelectAll">
            <summary>
            选择所有文本
            </summary>
        </member>
        <member name="M:AntdUI.Input.ScrollToCaret">
            <summary>
            内容滚动到当前插入符号位置
            </summary>
        </member>
        <member name="M:AntdUI.Input.ScrollToEnd">
            <summary>
            内容滚动到最下面
            </summary>
        </member>
        <member name="M:AntdUI.Input.GetCaretPostion(System.Int32,System.Int32)">
            <summary>
            通过坐标系查找光标位置
            </summary>
        </member>
        <member name="M:AntdUI.Input.FindNearestFont(System.Int32,System.Int32,AntdUI.Input.CacheFont[],System.Boolean@)">
            <summary>
            寻找最近的矩形和距离的辅助方法
            </summary>
        </member>
        <member name="M:AntdUI.Input.ProcessBackSpaceKey">
            <summary>
            删除文本
            </summary>
        </member>
        <member name="M:AntdUI.Input.ProcessDelete">
            <summary>
            删除文本
            </summary>
        </member>
        <member name="M:AntdUI.Input.FindStart(AntdUI.Input.CacheFont[],System.Int32)">
            <summary>
            查找前面
            </summary>
        </member>
        <member name="M:AntdUI.Input.FindEnd(AntdUI.Input.CacheFont[],System.Int32)">
            <summary>
            查找后面
            </summary>
        </member>
        <member name="T:AntdUI.Label">
            <summary>
            Label 标签
            </summary>
            <remarks>显示一段文本。</remarks>
        </member>
        <member name="P:AntdUI.Label.ForeColor">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.Label.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:AntdUI.Label.TextAlign">
            <summary>
            文本位置
            </summary>
        </member>
        <member name="P:AntdUI.Label.AutoEllipsis">
            <summary>
            文本超出自动处理
            </summary>
        </member>
        <member name="P:AntdUI.Label.TextMultiLine">
            <summary>
            是否多行
            </summary>
        </member>
        <member name="P:AntdUI.Label.IconRatio">
            <summary>
            图标比例
            </summary>
        </member>
        <member name="P:AntdUI.Label.Prefix">
            <summary>
            前缀
            </summary>
        </member>
        <member name="P:AntdUI.Label.PrefixSvg">
            <summary>
            前缀SVG
            </summary>
        </member>
        <member name="P:AntdUI.Label.PrefixColor">
            <summary>
            前缀颜色
            </summary>
        </member>
        <member name="P:AntdUI.Label.HasPrefix">
            <summary>
            是否包含前缀
            </summary>
        </member>
        <member name="P:AntdUI.Label.Suffix">
            <summary>
            后缀
            </summary>
        </member>
        <member name="P:AntdUI.Label.SuffixSvg">
            <summary>
            后缀SVG
            </summary>
        </member>
        <member name="P:AntdUI.Label.SuffixColor">
            <summary>
            后缀颜色
            </summary>
        </member>
        <member name="P:AntdUI.Label.Highlight">
            <summary>
            缀标完全展示
            </summary>
        </member>
        <member name="P:AntdUI.Label.HasSuffix">
            <summary>
            是否包含后缀
            </summary>
        </member>
        <member name="P:AntdUI.Label.AutoSize">
            <summary>
            自动大小
            </summary>
        </member>
        <member name="P:AntdUI.Label.AutoSizeMode">
            <summary>
            自动大小模式
            </summary>
        </member>
        <member name="T:AntdUI.FlowPanel">
            <summary>
            FlowPanel 流动布局
            </summary>
        </member>
        <member name="P:AntdUI.FlowPanel.AutoScroll">
            <summary>
            是否显示滚动条
            </summary>
        </member>
        <member name="P:AntdUI.FlowPanel.Align">
            <summary>
            布局方向
            </summary>
        </member>
        <member name="P:AntdUI.FlowPanel.Gap">
            <summary>
            间距
            </summary>
        </member>
        <member name="P:AntdUI.FlowPanel.FlowLayout.Gap">
            <summary>
            间距
            </summary>
        </member>
        <member name="T:AntdUI.GridPanel">
            <summary>
            GridPanel 格栅布局
            </summary>
        </member>
        <member name="P:AntdUI.GridPanel.Span">
            <summary>
            跨度
            </summary>
        </member>
        <member name="P:AntdUI.GridPanel.Gap">
            <summary>
            间距
            </summary>
        </member>
        <member name="P:AntdUI.GridPanel.GridLayout.Span">
            <summary>
            内容大小
            </summary>
        </member>
        <member name="P:AntdUI.GridPanel.GridLayout.Gap">
            <summary>
            间距
            </summary>
        </member>
        <member name="T:AntdUI.StackPanel">
            <summary>
            StackPanel 堆栈布局
            </summary>
        </member>
        <member name="P:AntdUI.StackPanel.AutoScroll">
            <summary>
            是否显示滚动条
            </summary>
        </member>
        <member name="P:AntdUI.StackPanel.Vertical">
            <summary>
            是否垂直方向
            </summary>
        </member>
        <member name="P:AntdUI.StackPanel.ItemSize">
            <summary>
            内容大小
            </summary>
        </member>
        <member name="P:AntdUI.StackPanel.Gap">
            <summary>
            间距
            </summary>
        </member>
        <member name="P:AntdUI.StackPanel.StackLayout.Vertical">
            <summary>
            是否垂直方向
            </summary>
        </member>
        <member name="P:AntdUI.StackPanel.StackLayout.ItemSize">
            <summary>
            内容大小
            </summary>
        </member>
        <member name="P:AntdUI.StackPanel.StackLayout.Gap">
            <summary>
            间距
            </summary>
        </member>
        <member name="T:AntdUI.Menu">
            <summary>
            Menu 导航菜单
            </summary>
            <remarks>为页面和功能提供导航的菜单列表。</remarks>
        </member>
        <member name="P:AntdUI.Menu.ForeColor">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.Menu.BackHover">
            <summary>
            悬停背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.Menu.BackActive">
            <summary>
            激活背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.Menu.Fore">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.Menu.ForeActive">
            <summary>
            激活字体颜色
            </summary>
        </member>
        <member name="P:AntdUI.Menu.Radius">
            <summary>
            圆角
            </summary>
        </member>
        <member name="P:AntdUI.Menu.Round">
            <summary>
            圆角样式
            </summary>
        </member>
        <member name="P:AntdUI.Menu.Theme">
            <summary>
            色彩模式
            </summary>
        </member>
        <member name="P:AntdUI.Menu.Mode">
            <summary>
            菜单类型
            </summary>
        </member>
        <member name="P:AntdUI.Menu.Indent">
            <summary>
            常规缩进
            </summary>
        </member>
        <member name="P:AntdUI.Menu.Unique">
            <summary>
            只保持一个子菜单的展开
            </summary>
        </member>
        <member name="P:AntdUI.Menu.ShowSubBack">
            <summary>
            显示子菜单背景
            </summary>
        </member>
        <member name="P:AntdUI.Menu.AutoCollapse">
            <summary>
            自动折叠
            </summary>
        </member>
        <member name="P:AntdUI.Menu.Collapsed">
            <summary>
            是否折叠
            </summary>
        </member>
        <member name="E:AntdUI.Menu.SelectChanged">
            <summary>
            Select 属性值更改时发生
            </summary>
        </member>
        <member name="P:AntdUI.Menu.Items">
            <summary>
            菜单集合
            </summary>
        </member>
        <member name="P:AntdUI.MenuItem.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:AntdUI.MenuItem.IconSvg">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:AntdUI.MenuItem.HasIcon">
            <summary>
            是否包含图片
            </summary>
        </member>
        <member name="P:AntdUI.MenuItem.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:AntdUI.MenuItem.Font">
            <summary>
            自定义字体
            </summary>
        </member>
        <member name="P:AntdUI.MenuItem.Visible">
            <summary>
            是否显示
            </summary>
        </member>
        <member name="P:AntdUI.MenuItem.Tag">
            <summary>
            用户定义数据
            </summary>
        </member>
        <member name="P:AntdUI.MenuItem.Sub">
            <summary>
            获取列表中所有列表项的集合
            </summary>
        </member>
        <member name="P:AntdUI.MenuItem.Enabled">
            <summary>
            禁用状态
            </summary>
        </member>
        <member name="P:AntdUI.MenuItem.Expand">
            <summary>
            展开
            </summary>
        </member>
        <member name="P:AntdUI.MenuItem.Rect">
            <summary>
            菜单坐标位置
            </summary>
        </member>
        <member name="P:AntdUI.MenuItem.Hover">
            <summary>
            是否移动
            </summary>
        </member>
        <member name="T:AntdUI.Message">
            <summary>
            Message 全局提示
            </summary>
            <remarks>全局展示操作反馈信息。</remarks>
        </member>
        <member name="M:AntdUI.Message.success(System.Windows.Forms.Form,System.String,System.Drawing.Font,System.Nullable{System.Int32})">
            <summary>
            成功提示
            </summary>
            <param name="form">窗口</param>
            <param name="text">提示内容</param>
            <param name="font">字体</param>
            <param name="autoClose">自动关闭时间（秒）0等于不关闭</param>
        </member>
        <member name="M:AntdUI.Message.info(System.Windows.Forms.Form,System.String,System.Drawing.Font,System.Nullable{System.Int32})">
            <summary>
            信息提示
            </summary>
            <param name="form">窗口</param>
            <param name="text">提示内容</param>
            <param name="font">字体</param>
            <param name="autoClose">自动关闭时间（秒）0等于不关闭</param>
        </member>
        <member name="M:AntdUI.Message.warn(System.Windows.Forms.Form,System.String,System.Drawing.Font,System.Nullable{System.Int32})">
            <summary>
            警告提示
            </summary>
            <param name="form">窗口</param>
            <param name="text">提示内容</param>
            <param name="font">字体</param>
            <param name="autoClose">自动关闭时间（秒）0等于不关闭</param>
        </member>
        <member name="M:AntdUI.Message.error(System.Windows.Forms.Form,System.String,System.Drawing.Font,System.Nullable{System.Int32})">
            <summary>
            失败提示
            </summary>
            <param name="form">窗口</param>
            <param name="text">提示内容</param>
            <param name="font">字体</param>
            <param name="autoClose">自动关闭时间（秒）0等于不关闭</param>
        </member>
        <member name="M:AntdUI.Message.loading(System.Windows.Forms.Form,System.String,System.Action{AntdUI.Message.Config},System.Drawing.Font,System.Nullable{System.Int32})">
            <summary>
            加载提示
            </summary>
            <param name="form">窗口</param>
            <param name="text">提示内容</param>
            <param name="call">耗时任务</param>
            <param name="font">字体</param>
            <param name="autoClose">自动关闭时间（秒）0等于不关闭</param>
        </member>
        <member name="M:AntdUI.Message.open(AntdUI.Message.Config)">
            <summary>
            Message 全局提示
            </summary>
            <param name="config">配置</param>
        </member>
        <member name="M:AntdUI.Message.close_all">
            <summary>
            关闭全部
            </summary>
        </member>
        <member name="T:AntdUI.Message.Config">
            <summary>
            配置
            </summary>
        </member>
        <member name="P:AntdUI.Message.Config.Form">
            <summary>
            所属窗口
            </summary>
        </member>
        <member name="P:AntdUI.Message.Config.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:AntdUI.Message.Config.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:AntdUI.Message.Config.Call">
            <summary>
            加载回调
            </summary>
        </member>
        <member name="P:AntdUI.Message.Config.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="P:AntdUI.Message.Config.Radius">
            <summary>
            圆角
            </summary>
        </member>
        <member name="P:AntdUI.Message.Config.AutoClose">
            <summary>
            自动关闭时间（秒）0等于不关闭
            </summary>
        </member>
        <member name="P:AntdUI.Message.Config.Align">
            <summary>
            方向
            </summary>
        </member>
        <member name="M:AntdUI.MessageFrm.DrawShadow(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.RectangleF)">
            <summary>
            绘制阴影
            </summary>
            <param name="g">GDI</param>
            <param name="rect_client">客户区域</param>
            <param name="rect_read">真实区域</param>
        </member>
        <member name="T:AntdUI.Modal">
            <summary>
            Modal 对话框
            </summary>
            <remarks>模态对话框。</remarks>
        </member>
        <member name="M:AntdUI.Modal.open(System.Windows.Forms.Form,System.String,System.String)">
            <summary>
            Model 对话框
            </summary>
            <param name="form">所属窗口</param>
            <param name="title">标题</param>
            <param name="content">内容</param>
        </member>
        <member name="M:AntdUI.Modal.open(System.Windows.Forms.Form,System.String,System.Object)">
            <summary>
            Model 对话框
            </summary>
            <param name="form">所属窗口</param>
            <param name="title">标题</param>
            <param name="content">内容</param>
        </member>
        <member name="M:AntdUI.Modal.open(System.Windows.Forms.Form,System.String,System.String,AntdUI.TType)">
            <summary>
            Model 对话框
            </summary>
            <param name="form">所属窗口</param>
            <param name="title">标题</param>
            <param name="content">内容</param>
            <param name="icon">图标</param>
        </member>
        <member name="M:AntdUI.Modal.open(AntdUI.Modal.Config)">
            <summary>
            Model 对话框
            </summary>
            <param name="config">配置</param>
        </member>
        <member name="M:AntdUI.Modal.config(System.Windows.Forms.Form,System.String,System.String)">
            <summary>
            Model 配置
            </summary>
            <param name="form">所属窗口</param>
            <param name="title">标题</param>
            <param name="content">内容</param>
        </member>
        <member name="M:AntdUI.Modal.config(System.String,System.String)">
            <summary>
            Model 配置
            </summary>
            <param name="title">标题</param>
            <param name="content">内容</param>
        </member>
        <member name="M:AntdUI.Modal.config(System.Windows.Forms.Form,System.String,System.Object)">
            <summary>
            Model 配置
            </summary>
            <param name="form">所属窗口</param>
            <param name="title">标题</param>
            <param name="content">控件/Obj</param>
        </member>
        <member name="M:AntdUI.Modal.config(System.String,System.Object)">
            <summary>
            Model 配置
            </summary>
            <param name="title">标题</param>
            <param name="content">控件/Obj</param>
        </member>
        <member name="M:AntdUI.Modal.config(System.Windows.Forms.Form,System.String,System.String,AntdUI.TType)">
            <summary>
            Model 配置
            </summary>
            <param name="form">所属窗口</param>
            <param name="title">标题</param>
            <param name="content">内容</param>
            <param name="icon">图标</param>
        </member>
        <member name="M:AntdUI.Modal.config(System.String,System.String,AntdUI.TType)">
            <summary>
            Model 配置
            </summary>
            <param name="title">标题</param>
            <param name="content">内容</param>
            <param name="icon">图标</param>
        </member>
        <member name="M:AntdUI.Modal.config(System.Windows.Forms.Form,System.String,System.Object,AntdUI.TType)">
            <summary>
            Model 配置
            </summary>
            <param name="form">所属窗口</param>
            <param name="title">标题</param>
            <param name="content">控件/Obj</param>
            <param name="icon">图标</param>
        </member>
        <member name="M:AntdUI.Modal.config(System.String,System.Object,AntdUI.TType)">
            <summary>
            Model 配置
            </summary>
            <param name="title">标题</param>
            <param name="content">控件/Obj</param>
            <param name="icon">图标</param>
        </member>
        <member name="T:AntdUI.Modal.Config">
            <summary>
            配置
            </summary>
        </member>
        <member name="M:AntdUI.Modal.Config.#ctor(System.Windows.Forms.Form,System.String,System.String)">
            <summary>
            Model 配置
            </summary>
            <param name="form">所属窗口</param>
            <param name="title">标题</param>
            <param name="content">内容</param>
        </member>
        <member name="M:AntdUI.Modal.Config.#ctor(System.String,System.String)">
            <summary>
            Model 配置
            </summary>
            <param name="title">标题</param>
            <param name="content">内容</param>
        </member>
        <member name="M:AntdUI.Modal.Config.#ctor(System.Windows.Forms.Form,System.String,System.Object)">
            <summary>
            Model 配置
            </summary>
            <param name="form">所属窗口</param>
            <param name="title">标题</param>
            <param name="content">控件/内容</param>
        </member>
        <member name="M:AntdUI.Modal.Config.#ctor(System.String,System.Object)">
            <summary>
            Model 配置
            </summary>
            <param name="title">标题</param>
            <param name="content">控件/内容</param>
        </member>
        <member name="M:AntdUI.Modal.Config.#ctor(System.Windows.Forms.Form,System.String,System.String,AntdUI.TType)">
            <summary>
            Model 配置
            </summary>
            <param name="form">所属窗口</param>
            <param name="title">标题</param>
            <param name="content">内容</param>
            <param name="icon">图标</param>
        </member>
        <member name="M:AntdUI.Modal.Config.#ctor(System.String,System.String,AntdUI.TType)">
            <summary>
            Model 配置
            </summary>
            <param name="title">标题</param>
            <param name="content">内容</param>
            <param name="icon">图标</param>
        </member>
        <member name="M:AntdUI.Modal.Config.#ctor(System.Windows.Forms.Form,System.String,System.Object,AntdUI.TType)">
            <summary>
            Model 配置
            </summary>
            <param name="form">所属窗口</param>
            <param name="title">标题</param>
            <param name="content">控件/内容</param>
            <param name="icon">图标</param>
        </member>
        <member name="M:AntdUI.Modal.Config.#ctor(System.String,System.Object,AntdUI.TType)">
            <summary>
            Model 配置
            </summary>
            <param name="title">标题</param>
            <param name="content">控件/内容</param>
            <param name="icon">图标</param>
        </member>
        <member name="P:AntdUI.Modal.Config.Form">
            <summary>
            所属窗口
            </summary>
        </member>
        <member name="P:AntdUI.Modal.Config.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:AntdUI.Modal.Config.Content">
            <summary>
            控件/内容
            </summary>
        </member>
        <member name="P:AntdUI.Modal.Config.Width">
            <summary>
            消息框宽度
            </summary>
        </member>
        <member name="P:AntdUI.Modal.Config.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="P:AntdUI.Modal.Config.Keyboard">
            <summary>
            是否支持键盘 esc 关闭
            </summary>
        </member>
        <member name="P:AntdUI.Modal.Config.Mask">
            <summary>
            是否展示遮罩
            </summary>
        </member>
        <member name="P:AntdUI.Modal.Config.MaskClosable">
            <summary>
            点击蒙层是否允许关闭
            </summary>
        </member>
        <member name="P:AntdUI.Modal.Config.CloseIcon">
            <summary>
            是否显示关闭图标
            </summary>
        </member>
        <member name="P:AntdUI.Modal.Config.CancelFont">
            <summary>
            取消按钮字体
            </summary>
        </member>
        <member name="P:AntdUI.Modal.Config.OkFont">
            <summary>
            确认按钮字体
            </summary>
        </member>
        <member name="P:AntdUI.Modal.Config.BtnHeight">
            <summary>
            按钮栏高度
            </summary>
        </member>
        <member name="P:AntdUI.Modal.Config.CancelText">
            <summary>
            取消按钮文字
            </summary>
        </member>
        <member name="P:AntdUI.Modal.Config.OkText">
            <summary>
            确认按钮文字
            </summary>
        </member>
        <member name="P:AntdUI.Modal.Config.OkType">
            <summary>
            确认按钮类型
            </summary>
        </member>
        <member name="P:AntdUI.Modal.Config.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:AntdUI.Modal.Config.OnOk">
            <summary>
            确定回调
            </summary>
        </member>
        <member name="P:AntdUI.Modal.Config.Tag">
            <summary>
            用户定义数据
            </summary>
        </member>
        <member name="P:AntdUI.Modal.Config.LoadingDisableCancel">
            <summary>
            加载时禁用取消按钮
            </summary>
        </member>
        <member name="P:AntdUI.Modal.Config.Btns">
            <summary>
            自定义按钮
            </summary>
        </member>
        <member name="P:AntdUI.Modal.Config.OnBtns">
            <summary>
            自定义按钮回调
            </summary>
        </member>
        <member name="T:AntdUI.Modal.Btn">
            <summary>
            按钮
            </summary>
        </member>
        <member name="M:AntdUI.Modal.Btn.#ctor(System.String,System.String,AntdUI.TTypeMini)">
            <summary>
            自定义按钮
            </summary>
            <param name="name">按钮名称</param>
            <param name="text">按钮文字</param>
            <param name="type">按钮类型</param>
        </member>
        <member name="M:AntdUI.Modal.Btn.#ctor(System.String,System.String,System.Drawing.Color,System.Drawing.Color,AntdUI.TTypeMini)">
            <summary>
            自定义按钮
            </summary>
            <param name="name">按钮名称</param>
            <param name="text">按钮文字</param>
            <param name="fore">字体颜色</param>
            <param name="back">背景颜色</param>
            <param name="type">按钮类型</param>
        </member>
        <member name="P:AntdUI.Modal.Btn.Name">
            <summary>
            按钮名称
            </summary>
        </member>
        <member name="P:AntdUI.Modal.Btn.Text">
            <summary>
            按钮文字
            </summary>
        </member>
        <member name="P:AntdUI.Modal.Btn.Type">
            <summary>
            按钮类型
            </summary>
        </member>
        <member name="P:AntdUI.Modal.Btn.Fore">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.Modal.Btn.Back">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.Modal.Btn.Tag">
            <summary>
            用户定义数据
            </summary>
        </member>
        <member name="T:AntdUI.Modal.TextLine">
            <summary>
            多行文本
            </summary>
        </member>
        <member name="P:AntdUI.Modal.TextLine.Text">
            <summary>
            文字
            </summary>
        </member>
        <member name="P:AntdUI.Modal.TextLine.Gap">
            <summary>
            间距
            </summary>
        </member>
        <member name="P:AntdUI.Modal.TextLine.Fore">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.Modal.TextLine.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="T:AntdUI.Notification">
            <summary>
            Notification 通知提醒框
            </summary>
            <remarks>全局展示通知提醒信息。</remarks>
        </member>
        <member name="M:AntdUI.Notification.success(System.Windows.Forms.Form,System.String,System.String,AntdUI.TAlignFrom,System.Drawing.Font,System.Nullable{System.Int32})">
            <summary>
            成功通知
            </summary>
            <param name="form">窗口</param>
            <param name="title">标题</param>
            <param name="text">内容</param>
            <param name="align">位置</param>
            <param name="font">字体</param>
            <param name="autoClose">自动关闭时间（秒）0等于不关闭</param>
        </member>
        <member name="M:AntdUI.Notification.info(System.Windows.Forms.Form,System.String,System.String,AntdUI.TAlignFrom,System.Drawing.Font,System.Nullable{System.Int32})">
            <summary>
            信息通知
            </summary>
            <param name="form">窗口</param>
            <param name="title">标题</param>
            <param name="text">内容</param>
            <param name="align">位置</param>
            <param name="font">字体</param>
            <param name="autoClose">自动关闭时间（秒）0等于不关闭</param>
        </member>
        <member name="M:AntdUI.Notification.warn(System.Windows.Forms.Form,System.String,System.String,AntdUI.TAlignFrom,System.Drawing.Font,System.Nullable{System.Int32})">
            <summary>
            警告通知
            </summary>
            <param name="form">窗口</param>
            <param name="title">标题</param>
            <param name="text">内容</param>
            <param name="align">位置</param>
            <param name="font">字体</param>
            <param name="autoClose">自动关闭时间（秒）0等于不关闭</param>
        </member>
        <member name="M:AntdUI.Notification.error(System.Windows.Forms.Form,System.String,System.String,AntdUI.TAlignFrom,System.Drawing.Font,System.Nullable{System.Int32})">
            <summary>
            失败通知
            </summary>
            <param name="form">窗口</param>
            <param name="title">标题</param>
            <param name="text">内容</param>
            <param name="align">位置</param>
            <param name="font">字体</param>
            <param name="autoClose">自动关闭时间（秒）0等于不关闭</param>
        </member>
        <member name="M:AntdUI.Notification.open(System.Windows.Forms.Form,System.String,System.String,AntdUI.TAlignFrom,System.Drawing.Font,System.Nullable{System.Int32})">
            <summary>
            普通通知
            </summary>
            <param name="form">窗口</param>
            <param name="title">标题</param>
            <param name="text">内容</param>
            <param name="align">位置</param>
            <param name="font">字体</param>
            <param name="autoClose">自动关闭时间（秒）0等于不关闭</param>
        </member>
        <member name="M:AntdUI.Notification.open(AntdUI.Notification.Config)">
            <summary>
            Notification 通知提醒框
            </summary>
            <param name="config">配置</param>
        </member>
        <member name="M:AntdUI.Notification.close_all">
            <summary>
            关闭全部
            </summary>
        </member>
        <member name="T:AntdUI.Notification.Config">
            <summary>
            配置
            </summary>
        </member>
        <member name="P:AntdUI.Notification.Config.Form">
            <summary>
            所属窗口
            </summary>
        </member>
        <member name="P:AntdUI.Notification.Config.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:AntdUI.Notification.Config.FontTitle">
            <summary>
            标题字体
            </summary>
        </member>
        <member name="P:AntdUI.Notification.Config.FontStyleTitle">
            <summary>
            标题字体样式
            </summary>
        </member>
        <member name="P:AntdUI.Notification.Config.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:AntdUI.Notification.Config.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:AntdUI.Notification.Config.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="P:AntdUI.Notification.Config.Align">
            <summary>
            方向
            </summary>
        </member>
        <member name="P:AntdUI.Notification.Config.Radius">
            <summary>
            圆角
            </summary>
        </member>
        <member name="P:AntdUI.Notification.Config.AutoClose">
            <summary>
            自动关闭时间（秒）0等于不关闭
            </summary>
        </member>
        <member name="P:AntdUI.Notification.Config.CloseIcon">
            <summary>
            是否显示关闭图标
            </summary>
        </member>
        <member name="P:AntdUI.Notification.Config.TopMost">
            <summary>
            是否置顶
            </summary>
        </member>
        <member name="P:AntdUI.Notification.Config.Link">
            <summary>
            超链接回调
            </summary>
        </member>
        <member name="P:AntdUI.Notification.Config.OnClose">
            <summary>
            关闭回调
            </summary>
        </member>
        <member name="P:AntdUI.Notification.ConfigLink.Text">
            <summary>
            连接文本
            </summary>
        </member>
        <member name="P:AntdUI.Notification.ConfigLink.Call">
            <summary>
            点击回调
            </summary>
        </member>
        <member name="M:AntdUI.NotificationFrm.DrawShadow(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.RectangleF)">
            <summary>
            绘制阴影
            </summary>
            <param name="g">GDI</param>
            <param name="rect_client">客户区域</param>
            <param name="rect_read">真实区域</param>
        </member>
        <member name="T:AntdUI.Pagination">
            <summary>
            Pagination 分页
            </summary>
            <remarks>采用分页的形式分隔长列表，每次只加载一个页面。</remarks>
        </member>
        <member name="P:AntdUI.Pagination.Current">
            <summary>
            当前页数
            </summary>
        </member>
        <member name="P:AntdUI.Pagination.Total">
            <summary>
            数据总数
            </summary>
        </member>
        <member name="P:AntdUI.Pagination.PageSize">
            <summary>
            每页条数
            </summary>
        </member>
        <member name="P:AntdUI.Pagination.MaxPageTotal">
            <summary>
            最大显示总页数
            </summary>
        </member>
        <member name="P:AntdUI.Pagination.PageTotal">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:AntdUI.Pagination.Gap">
            <summary>
            间距
            </summary>
        </member>
        <member name="E:AntdUI.Pagination.ValueChanged">
            <summary>
            Value 属性值更改时发生
            </summary>
        </member>
        <member name="T:AntdUI.Pagination.ValueEventHandler">
            <summary>
            显示数据总量
            </summary>
            <param name="current">当前页数</param>
            <param name="total">数据总数</param>
            <param name="pageSize">每页条数</param>
            <param name="pageTotal">总页数</param>
            <returns></returns>
        </member>
        <member name="T:AntdUI.Pagination.RtValueEventHandler">
            <summary>
            显示数据总量
            </summary>
            <param name="current">当前页数</param>
            <param name="total">数据总数</param>
            <param name="pageSize">每页条数</param>
            <param name="pageTotal">总页数</param>
            <returns></returns>
        </member>
        <member name="E:AntdUI.Pagination.ShowTotalChanged">
            <summary>
            显示数据总量
            </summary>
        </member>
        <member name="P:AntdUI.Pagination.ShowSizeChanger">
            <summary>
            是否展示 PageSize 切换器
            </summary>
        </member>
        <member name="P:AntdUI.Pagination.PageSizeOptions">
            <summary>
            指定每页可以显示多少条
            </summary>
        </member>
        <member name="P:AntdUI.Pagination.Fill">
            <summary>
            颜色
            </summary>
        </member>
        <member name="P:AntdUI.Pagination.Radius">
            <summary>
            圆角
            </summary>
        </member>
        <member name="P:AntdUI.Pagination.BorderWidth">
            <summary>
            边框宽度
            </summary>
        </member>
        <member name="T:AntdUI.Panel">
            <summary>
            Panel 面板
            </summary>
            <remarks>内容区域。</remarks>
        </member>
        <member name="P:AntdUI.Panel.Radius">
            <summary>
            圆角
            </summary>
        </member>
        <member name="P:AntdUI.Panel.Shadow">
            <summary>
            阴影大小
            </summary>
        </member>
        <member name="P:AntdUI.Panel.ShadowColor">
            <summary>
            阴影颜色
            </summary>
        </member>
        <member name="P:AntdUI.Panel.ShadowOffsetX">
            <summary>
            阴影偏移X
            </summary>
        </member>
        <member name="P:AntdUI.Panel.ShadowOffsetY">
            <summary>
            阴影偏移Y
            </summary>
        </member>
        <member name="P:AntdUI.Panel.ShadowOpacity">
            <summary>
            阴影透明度
            </summary>
        </member>
        <member name="P:AntdUI.Panel.ShadowOpacityAnimation">
            <summary>
            阴影透明度动画使能
            </summary>
        </member>
        <member name="P:AntdUI.Panel.ShadowOpacityHover">
            <summary>
            悬停阴影后透明度
            </summary>
        </member>
        <member name="P:AntdUI.Panel.Back">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.Panel.BackgroundImage">
            <summary>
            背景图片
            </summary>
        </member>
        <member name="P:AntdUI.Panel.BackgroundImageLayout">
            <summary>
            背景图片布局
            </summary>
        </member>
        <member name="P:AntdUI.Panel.ArrowSize">
            <summary>
            箭头大小
            </summary>
        </member>
        <member name="P:AntdUI.Panel.ArrowAlign">
            <summary>
            箭头方向
            </summary>
        </member>
        <member name="P:AntdUI.Panel.BorderWidth">
            <summary>
            边框宽度
            </summary>
        </member>
        <member name="P:AntdUI.Panel.BorderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="M:AntdUI.Panel.DrawShadow(System.Drawing.Graphics,System.Single,System.Drawing.Rectangle,System.Drawing.RectangleF)">
            <summary>
            绘制阴影
            </summary>
            <param name="g">GDI</param>
            <param name="rect_client">客户区域</param>
            <param name="rect_read">真实区域</param>
        </member>
        <member name="T:AntdUI.Popover">
            <summary>
            Popover 气泡卡片
            </summary>
            <remarks>弹出气泡式的卡片浮层。</remarks>
        </member>
        <member name="M:AntdUI.Popover.open(System.Windows.Forms.Control,System.String,System.String,AntdUI.TAlign)">
            <summary>
            Popover 气泡卡片
            </summary>
            <param name="control">所属控件</param>
            <param name="title">标题</param>
            <param name="content">内容</param>
            <param name="ArrowAlign">箭头方向</param>
        </member>
        <member name="M:AntdUI.Popover.open(System.Windows.Forms.Control,System.String,AntdUI.TAlign)">
            <summary>
            Popover 气泡卡片
            </summary>
            <param name="control">所属控件</param>
            <param name="content">内容</param>
            <param name="ArrowAlign">箭头方向</param>
        </member>
        <member name="M:AntdUI.Popover.open(System.Windows.Forms.Control,System.String,System.Object,AntdUI.TAlign)">
            <summary>
            Popover 气泡卡片
            </summary>
            <param name="control">所属控件</param>
            <param name="title">标题</param>
            <param name="content">控件/内容</param>
            <param name="ArrowAlign">箭头方向</param>
        </member>
        <member name="M:AntdUI.Popover.open(System.Windows.Forms.Control,System.Object,AntdUI.TAlign)">
            <summary>
            Popover 气泡卡片
            </summary>
            <param name="control">所属控件</param>
            <param name="content">控件/内容</param>
            <param name="ArrowAlign">箭头方向</param>
        </member>
        <member name="M:AntdUI.Popover.open(AntdUI.Popover.Config)">
            <summary>
            Popover 气泡卡片
            </summary>
            <param name="config">配置</param>
        </member>
        <member name="T:AntdUI.Popover.Config">
            <summary>
            配置
            </summary>
        </member>
        <member name="M:AntdUI.Popover.Config.#ctor(System.Windows.Forms.Control,System.String,System.String)">
            <summary>
            Popover 配置
            </summary>
            <param name="control">所属控件</param>
            <param name="title">标题</param>
            <param name="content">内容</param>
        </member>
        <member name="M:AntdUI.Popover.Config.#ctor(System.Windows.Forms.Control,System.String)">
            <summary>
            Popover 配置
            </summary>
            <param name="control">所属控件</param>
            <param name="content">内容</param>
        </member>
        <member name="M:AntdUI.Popover.Config.#ctor(System.Windows.Forms.Control,System.String,System.Object)">
            <summary>
            Popover 配置
            </summary>
            <param name="control">所属控件</param>
            <param name="content">控件/内容</param>
        </member>
        <member name="M:AntdUI.Popover.Config.#ctor(System.Windows.Forms.Control,System.Object)">
            <summary>
            Popover 配置
            </summary>
            <param name="control">所属控件</param>
            <param name="content">控件/内容</param>
        </member>
        <member name="P:AntdUI.Popover.Config.Control">
            <summary>
            所属控件
            </summary>
        </member>
        <member name="P:AntdUI.Popover.Config.Offset">
            <summary>
            偏移量
            </summary>
        </member>
        <member name="P:AntdUI.Popover.Config.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:AntdUI.Popover.Config.Content">
            <summary>
            控件/内容
            </summary>
        </member>
        <member name="P:AntdUI.Popover.Config.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="P:AntdUI.Popover.Config.OnControlLoad">
            <summary>
            控件显示后回调
            </summary>
        </member>
        <member name="P:AntdUI.Popover.Config.AutoClose">
            <summary>
            自动关闭时间（秒）0等于不关闭
            </summary>
        </member>
        <member name="P:AntdUI.Popover.Config.Radius">
            <summary>
            圆角
            </summary>
        </member>
        <member name="P:AntdUI.Popover.Config.ArrowSize">
            <summary>
            箭头大小
            </summary>
        </member>
        <member name="P:AntdUI.Popover.Config.ArrowAlign">
            <summary>
            箭头方向
            </summary>
        </member>
        <member name="P:AntdUI.Popover.Config.Tag">
            <summary>
            用户定义数据
            </summary>
        </member>
        <member name="T:AntdUI.Popover.TextRow">
            <summary>
            多列文本
            </summary>
        </member>
        <member name="P:AntdUI.Popover.TextRow.Text">
            <summary>
            文字
            </summary>
        </member>
        <member name="P:AntdUI.Popover.TextRow.Gap">
            <summary>
            间距
            </summary>
        </member>
        <member name="P:AntdUI.Popover.TextRow.Fore">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.Popover.TextRow.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="P:AntdUI.Popover.TextRow.Call">
            <summary>
            点击回调
            </summary>
        </member>
        <member name="T:AntdUI.Preview">
            <summary>
            Preview 图片预览
            </summary>
            <remarks>图片预览框。</remarks>
        </member>
        <member name="M:AntdUI.Preview.open(AntdUI.Preview.Config)">
            <summary>
            Preview 图片预览
            </summary>
            <param name="config">配置</param>
        </member>
        <member name="T:AntdUI.Preview.Config">
            <summary>
            配置
            </summary>
        </member>
        <member name="M:AntdUI.Preview.Config.#ctor(System.Windows.Forms.Form,System.Drawing.Image)">
            <summary>
            Preview 配置
            </summary>
            <param name="form">所属窗口</param>
            <param name="bmp">图片</param>
        </member>
        <member name="M:AntdUI.Preview.Config.#ctor(System.Windows.Forms.Form,System.Collections.Generic.IList{System.Drawing.Image})">
            <summary>
            Preview 配置
            </summary>
            <param name="form">所属窗口</param>
            <param name="bmps">多个图片</param>
        </member>
        <member name="P:AntdUI.Preview.Config.Form">
            <summary>
            所属窗口
            </summary>
        </member>
        <member name="P:AntdUI.Preview.Config.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:AntdUI.Preview.Config.Tag">
            <summary>
            用户定义数据
            </summary>
        </member>
        <member name="P:AntdUI.Preview.Config.Btns">
            <summary>
            自定义按钮
            </summary>
        </member>
        <member name="P:AntdUI.Preview.Config.OnBtns">
            <summary>
            自定义按钮回调
            </summary>
        </member>
        <member name="T:AntdUI.Preview.Btn">
            <summary>
            按钮
            </summary>
        </member>
        <member name="M:AntdUI.Preview.Btn.#ctor(System.String,System.String)">
            <summary>
            自定义按钮
            </summary>
            <param name="name">按钮名称</param>
            <param name="svg">图标SVG</param>
        </member>
        <member name="P:AntdUI.Preview.Btn.Name">
            <summary>
            按钮名称
            </summary>
        </member>
        <member name="P:AntdUI.Preview.Btn.IconSvg">
            <summary>
            图标SVG
            </summary>
        </member>
        <member name="P:AntdUI.Preview.Btn.Tag">
            <summary>
            用户定义数据
            </summary>
        </member>
        <member name="T:AntdUI.Progress">
            <summary>
            Progress 进度条
            </summary>
            <remarks>展示操作的当前进度。</remarks>
        </member>
        <member name="P:AntdUI.Progress.ForeColor">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.Progress.Back">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.Progress.Fill">
            <summary>
            进度条颜色
            </summary>
        </member>
        <member name="P:AntdUI.Progress.Radius">
            <summary>
            圆角
            </summary>
        </member>
        <member name="P:AntdUI.Progress.Mini">
            <summary>
            MINI模式
            </summary>
        </member>
        <member name="P:AntdUI.Progress.Shape">
            <summary>
            形状
            </summary>
        </member>
        <member name="P:AntdUI.Progress.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:AntdUI.Progress.ShowText">
            <summary>
            显示进度文本
            </summary>
        </member>
        <member name="P:AntdUI.Progress.ShowInfo">
            <summary>
            显示信息
            </summary>
        </member>
        <member name="P:AntdUI.Progress.ShowTextDot">
            <summary>
            显示进度文本小数点位数
            </summary>
        </member>
        <member name="P:AntdUI.Progress.State">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:AntdUI.Progress.IconRatio">
            <summary>
            图标比例
            </summary>
        </member>
        <member name="P:AntdUI.Progress.Value">
            <summary>
            进度条
            </summary>
        </member>
        <member name="P:AntdUI.Progress.Loading">
            <summary>
            加载状态
            </summary>
        </member>
        <member name="P:AntdUI.Progress.Animation">
            <summary>
            动画时长
            </summary>
        </member>
        <member name="P:AntdUI.Progress.ShowInTaskbar">
            <summary>
            任务栏中显示进度
            </summary>
        </member>
        <member name="M:AntdUI.Windows7Taskbar.SetProgressState(System.IntPtr,AntdUI.ThumbnailProgressState)">
            <summary>
            Sets the progress state of the specified window's
            taskbar button.
            </summary>
            <param name="hwnd">The window handle.</param>
            <param name="state">The progress state.</param>
        </member>
        <member name="M:AntdUI.Windows7Taskbar.SetProgressValue(System.IntPtr,System.UInt64,System.UInt64)">
            <summary>
            Sets the progress value of the specified window's
            taskbar button.
            </summary>
            <param name="hwnd">The window handle.</param>
            <param name="current">The current value.</param>
            <param name="maximum">The maximum value.</param>
        </member>
        <member name="T:AntdUI.ThumbnailProgressState">
            <summary>
            表示缩略图进度条状态。
            </summary>
        </member>
        <member name="F:AntdUI.ThumbnailProgressState.NoProgress">
            <summary>
            没有进度。
            </summary>
        </member>
        <member name="F:AntdUI.ThumbnailProgressState.Indeterminate">
            <summary>
            不确定的进度 (marquee)。
            </summary>
        </member>
        <member name="F:AntdUI.ThumbnailProgressState.Normal">
            <summary>
            正常进度
            </summary>
        </member>
        <member name="F:AntdUI.ThumbnailProgressState.Error">
            <summary>
            错误进度 (red).
            </summary>
        </member>
        <member name="F:AntdUI.ThumbnailProgressState.Paused">
            <summary>
            暂停进度 (yellow).
            </summary>
        </member>
        <member name="T:AntdUI.Radio">
            <summary>
            Radio 单选框
            </summary>
            <remarks>单选框。</remarks>
        </member>
        <member name="P:AntdUI.Radio.ForeColor">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.Radio.Fore">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.Radio.Fill">
            <summary>
            颜色
            </summary>
        </member>
        <member name="P:AntdUI.Radio.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:AntdUI.Radio.Checked">
            <summary>
            选中状态
            </summary>
        </member>
        <member name="P:AntdUI.Radio.AutoCheck">
            <summary>
            点击时自动改变选中状态
            </summary>
        </member>
        <member name="E:AntdUI.Radio.CheckedChanged">
            <summary>
            Checked 属性值更改时发生
            </summary>
        </member>
        <member name="P:AntdUI.Radio.AutoSize">
            <summary>
            自动大小
            </summary>
        </member>
        <member name="P:AntdUI.Radio.AutoSizeMode">
            <summary>
            自动大小模式
            </summary>
        </member>
        <member name="T:AntdUI.Rate">
            <summary>
            Rate 评分
            </summary>
            <remarks>评分组件。</remarks>
        </member>
        <member name="P:AntdUI.Rate.AllowHalf">
            <summary>
            是否允许半选
            </summary>
        </member>
        <member name="P:AntdUI.Rate.Count">
            <summary>
            Star 总数
            </summary>
        </member>
        <member name="P:AntdUI.Rate.Value">
            <summary>
            当前值
            </summary>
        </member>
        <member name="E:AntdUI.Rate.ValueChanged">
            <summary>
            Value 属性值更改时发生
            </summary>
        </member>
        <member name="P:AntdUI.Rate.Tooltips">
            <summary>
            自定义每项的提示信息
            </summary>
        </member>
        <member name="P:AntdUI.Rate.Character">
            <summary>
            自定义字符
            </summary>
        </member>
        <member name="F:AntdUI.Rate.RectStar.hover">
            <summary>
            是否移动
            </summary>
        </member>
        <member name="F:AntdUI.Rate.RectStar.active">
            <summary>
            是否激活
            </summary>
        </member>
        <member name="P:AntdUI.ScrollBar.Back">
            <summary>
            是否显示背景
            </summary>
        </member>
        <member name="P:AntdUI.ScrollBar.SIZE">
            <summary>
            滚动条大小
            </summary>
        </member>
        <member name="P:AntdUI.ScrollBar.SIZE_BAR">
            <summary>
            常态下滚动条大小
            </summary>
        </member>
        <member name="P:AntdUI.ScrollBar.EnabledY">
            <summary>
            是否启用纵向滚动条
            </summary>
        </member>
        <member name="P:AntdUI.ScrollBar.ShowY">
            <summary>
            是否显示纵向滚动条
            </summary>
        </member>
        <member name="P:AntdUI.ScrollBar.ValueY">
            <summary>
            当前值纵向滚动条
            </summary>
        </member>
        <member name="P:AntdUI.ScrollBar.MaxY">
            <summary>
            当前值纵向滚动条
            </summary>
        </member>
        <member name="P:AntdUI.ScrollBar.HoverY">
            <summary>
            滑动态纵向滚动条y
            </summary>
        </member>
        <member name="P:AntdUI.ScrollBar.EnabledX">
            <summary>
            是否启用横向滚动条
            </summary>
        </member>
        <member name="P:AntdUI.ScrollBar.ShowX">
            <summary>
            是否显示横向滚动条
            </summary>
        </member>
        <member name="P:AntdUI.ScrollBar.ValueX">
            <summary>
            当前值横向滚动条
            </summary>
        </member>
        <member name="P:AntdUI.ScrollBar.MaxX">
            <summary>
            当前值横向滚动条
            </summary>
        </member>
        <member name="P:AntdUI.ScrollBar.HoverX">
            <summary>
            滑动态横向滚动条
            </summary>
        </member>
        <member name="M:AntdUI.ScrollBar.SetVrSize(System.Int32,System.Int32)">
            <summary>
            设置容器虚拟宽度
            </summary>
        </member>
        <member name="M:AntdUI.ScrollBar.SetVrSize(System.Int32)">
            <summary>
            设置容器虚拟宽度
            </summary>
        </member>
        <member name="P:AntdUI.ScrollY.Value">
            <summary>
            滚动条进度
            </summary>
        </member>
        <member name="P:AntdUI.ScrollY.VrValue">
            <summary>
            虚拟高度
            </summary>
        </member>
        <member name="M:AntdUI.ScrollY.SetVrSize(System.Single,System.Int32)">
            <summary>
            设置容器虚拟高度
            </summary>
            <param name="len">总Y</param>
            <param name="height">容器高度</param>
        </member>
        <member name="M:AntdUI.ScrollY.SetVrSize(System.Single)">
            <summary>
            设置容器虚拟高度
            </summary>
            <param name="len">总Y</param>
        </member>
        <member name="M:AntdUI.ScrollY.Paint(System.Drawing.Graphics)">
            <summary>
            渲染滚动条竖
            </summary>
            <param name="g"></param>
        </member>
        <member name="T:AntdUI.Segmented">
            <summary>
            Segmented 分段控制器
            </summary>
            <remarks>分段控制器。</remarks>
        </member>
        <member name="P:AntdUI.Segmented.BarSize">
            <summary>
            条大小
            </summary>
        </member>
        <member name="P:AntdUI.Segmented.BarPadding">
            <summary>
            条边距
            </summary>
        </member>
        <member name="P:AntdUI.Segmented.BarRadius">
            <summary>
            条圆角
            </summary>
        </member>
        <member name="P:AntdUI.Segmented.Vertical">
            <summary>
            是否竖向
            </summary>
        </member>
        <member name="P:AntdUI.Segmented.Full">
            <summary>
            是否铺满
            </summary>
        </member>
        <member name="P:AntdUI.Segmented.Radius">
            <summary>
            圆角
            </summary>
        </member>
        <member name="P:AntdUI.Segmented.Round">
            <summary>
            圆角样式
            </summary>
        </member>
        <member name="P:AntdUI.Segmented.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.Segmented.BackHover">
            <summary>
            悬停背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.Segmented.BackActive">
            <summary>
            激活背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.Segmented.ForeColor">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.Segmented.ForeHover">
            <summary>
            悬停文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.Segmented.ForeActive">
            <summary>
            激活文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.Segmented.Items">
            <summary>
            获取列表中所有列表项的集合
            </summary>
        </member>
        <member name="P:AntdUI.Segmented.SelectIndex">
            <summary>
            选择序号
            </summary>
        </member>
        <member name="E:AntdUI.Segmented.SelectIndexChanged">
            <summary>
            SelectIndex 属性值更改时发生
            </summary>
        </member>
        <member name="E:AntdUI.Segmented.ItemClick">
            <summary>
            点击项时发生
            </summary>
        </member>
        <member name="T:AntdUI.Segmented.ItemClickEventHandler">
            <summary>
            点击项时发生
            </summary>
            <param name="sender">触发对象</param>
            <param name="value">数值</param>
        </member>
        <member name="P:AntdUI.SegmentedItem.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:AntdUI.SegmentedItem.IconSvg">
            <summary>
            图标SVG
            </summary>
        </member>
        <member name="P:AntdUI.SegmentedItem.HasIcon">
            <summary>
            是否包含图标
            </summary>
        </member>
        <member name="P:AntdUI.SegmentedItem.IconActive">
            <summary>
            图标激活
            </summary>
        </member>
        <member name="P:AntdUI.SegmentedItem.IconActiveSvg">
            <summary>
            图标激活SVG
            </summary>
        </member>
        <member name="P:AntdUI.SegmentedItem.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:AntdUI.SegmentedItem.Tag">
            <summary>
            用户定义数据
            </summary>
        </member>
        <member name="T:AntdUI.Select">
            <summary>
            Select 选择器
            </summary>
            <remarks>下拉选择器。</remarks>
        </member>
        <member name="P:AntdUI.Select.List">
            <summary>
            是否列表样式
            </summary>
        </member>
        <member name="P:AntdUI.Select.Placement">
            <summary>
            菜单弹出位置
            </summary>
        </member>
        <member name="P:AntdUI.Select.ListAutoWidth">
            <summary>
            是否列表自动宽度
            </summary>
        </member>
        <member name="P:AntdUI.Select.MaxCount">
            <summary>
            列表最多显示条数
            </summary>
        </member>
        <member name="P:AntdUI.Select.DropDownArrow">
            <summary>
            下拉箭头是否显示
            </summary>
        </member>
        <member name="P:AntdUI.Select.ClickEnd">
            <summary>
            点击到最里层（无节点才能点击）
            </summary>
        </member>
        <member name="P:AntdUI.Select.FocusExpandDropdown">
            <summary>
            焦点时展开下拉
            </summary>
        </member>
        <member name="P:AntdUI.Select.Items">
            <summary>
            数据
            </summary>
        </member>
        <member name="P:AntdUI.Select.SelectedIndex">
            <summary>
            选中序号
            </summary>
        </member>
        <member name="P:AntdUI.Select.SelectedValue">
            <summary>
            选中值
            </summary>
        </member>
        <member name="E:AntdUI.Select.SelectedIndexChanged">
            <summary>
            SelectedIndex 属性值更改时发生
            </summary>
        </member>
        <member name="E:AntdUI.Select.SelectedIndexsChanged">
            <summary>
            多层树结构更改时发生
            </summary>
        </member>
        <member name="E:AntdUI.Select.SelectedValueChanged">
            <summary>
            SelectedValue 属性值更改时发生
            </summary>
        </member>
        <member name="E:AntdUI.Select.FilterChanged">
            <summary>
            控制筛选 Text更改时发生
            </summary>
        </member>
        <member name="P:AntdUI.Select.ShowIcon">
            <summary>
            是否显示图标
            </summary>
        </member>
        <member name="P:AntdUI.SelectItem.Online">
            <summary>
            在线状态
            </summary>
        </member>
        <member name="P:AntdUI.SelectItem.OnlineCustom">
            <summary>
            在线自定义颜色
            </summary>
        </member>
        <member name="P:AntdUI.SelectItem.SubText">
            <summary>
            子文本
            </summary>
        </member>
        <member name="P:AntdUI.SelectItem.Sub">
            <summary>
            子选项
            </summary>
        </member>
        <member name="P:AntdUI.GroupSelectItem.Sub">
            <summary>
            子选项
            </summary>
        </member>
        <member name="P:AntdUI.ObjectItem.Sub">
            <summary>
            子选项
            </summary>
        </member>
        <member name="P:AntdUI.ObjectItem.Online">
            <summary>
            在线状态
            </summary>
        </member>
        <member name="P:AntdUI.ObjectItem.OnlineCustom">
            <summary>
            在线自定义颜色
            </summary>
        </member>
        <member name="T:AntdUI.SelectMultiple">
            <summary>
            Select 多选器
            </summary>
            <remarks>下拉多选器。</remarks>
        </member>
        <member name="P:AntdUI.SelectMultiple.List">
            <summary>
            是否列表样式
            </summary>
        </member>
        <member name="P:AntdUI.SelectMultiple.Placement">
            <summary>
            菜单弹出位置
            </summary>
        </member>
        <member name="P:AntdUI.SelectMultiple.ListAutoWidth">
            <summary>
            是否列表自动宽度
            </summary>
        </member>
        <member name="P:AntdUI.SelectMultiple.MaxCount">
            <summary>
            列表最多显示条数
            </summary>
        </member>
        <member name="P:AntdUI.SelectMultiple.MaxChoiceCount">
            <summary>
            最大选中数量
            </summary>
        </member>
        <member name="P:AntdUI.SelectMultiple.DropDownArrow">
            <summary>
            下拉箭头是否显示
            </summary>
        </member>
        <member name="P:AntdUI.SelectMultiple.FocusExpandDropdown">
            <summary>
            焦点时展开下拉
            </summary>
        </member>
        <member name="P:AntdUI.SelectMultiple.Items">
            <summary>
            数据
            </summary>
        </member>
        <member name="P:AntdUI.SelectMultiple.SelectedValue">
            <summary>
            选中值
            </summary>
        </member>
        <member name="M:AntdUI.SelectMultiple.SelectAllItems">
            <summary>
            全选项目
            </summary>
        </member>
        <member name="E:AntdUI.SelectMultiple.SelectedValueChanged">
            <summary>
            SelectedValue 属性值更改时发生
            </summary>
        </member>
        <member name="M:AntdUI.SelectMultiple.ClearSelect">
            <summary>
            清空选中
            </summary>
        </member>
        <member name="P:AntdUI.SelectMultiple.ShowIcon">
            <summary>
            是否显示图标
            </summary>
        </member>
        <member name="T:AntdUI.Slider">
            <summary>
            Slider 滑动输入条
            </summary>
            <remarks>滑动型输入器，展示当前值和可选范围。</remarks>
        </member>
        <member name="P:AntdUI.Slider.Dots">
            <summary>
            固定点
            </summary>
        </member>
        <member name="P:AntdUI.Slider.Fill">
            <summary>
            颜色
            </summary>
        </member>
        <member name="P:AntdUI.Slider.FillHover">
            <summary>
            悬停颜色
            </summary>
        </member>
        <member name="P:AntdUI.Slider.FillActive">
            <summary>
            激活颜色
            </summary>
        </member>
        <member name="P:AntdUI.Slider.MinValue">
            <summary>
            最小值
            </summary>
        </member>
        <member name="P:AntdUI.Slider.MaxValue">
            <summary>
            最大值
            </summary>
        </member>
        <member name="P:AntdUI.Slider.Value">
            <summary>
            当前值
            </summary>
        </member>
        <member name="E:AntdUI.Slider.ValueFormatChanged">
            <summary>
            Value格式化时发生
            </summary>
        </member>
        <member name="P:AntdUI.Slider.Align">
            <summary>
            方向
            </summary>
        </member>
        <member name="E:AntdUI.Slider.ValueChanged">
            <summary>
            Value 属性值更改时发生
            </summary>
        </member>
        <member name="P:AntdUI.Slider.ShowValue">
            <summary>
            是否显示数值
            </summary>
        </member>
        <member name="P:AntdUI.Slider.LineSize">
            <summary>
            线条粗细
            </summary>
        </member>
        <member name="P:AntdUI.Slider.DotSize">
            <summary>
            点大小
            </summary>
        </member>
        <member name="P:AntdUI.Slider.DotSizeActive">
            <summary>
            点激活大小
            </summary>
        </member>
        <member name="T:AntdUI.Spin">
            <summary>
            Spin 加载中
            </summary>
            <remarks>用于页面和区块的加载中状态。</remarks>
        </member>
        <member name="P:AntdUI.Spin.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="T:AntdUI.Spin.Config">
            <summary>
            配置
            </summary>
        </member>
        <member name="P:AntdUI.Spin.Config.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:AntdUI.Spin.Config.Back">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.Spin.Config.Color">
            <summary>
            颜色
            </summary>
        </member>
        <member name="P:AntdUI.Spin.Config.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="P:AntdUI.Spin.Config.Radius">
            <summary>
            圆角
            </summary>
        </member>
        <member name="M:AntdUI.Spin.open(System.Windows.Forms.Control,System.Action,System.Action)">
            <summary>
            Spin 加载中
            </summary>
            <param name="control">控件主体</param>
            <param name="action">需要等待的委托</param>
            <param name="end">运行结束后的回调</param>
        </member>
        <member name="M:AntdUI.Spin.open(System.Windows.Forms.Control,System.String,System.Action,System.Action)">
            <summary>
            Spin 加载中
            </summary>
            <param name="control">控件主体</param>
            <param name="text">加载文本</param>
            <param name="action">需要等待的委托</param>
            <param name="end">运行结束后的回调</param>
        </member>
        <member name="M:AntdUI.Spin.open(System.Windows.Forms.Control,AntdUI.Spin.Config,System.Action,System.Action)">
            <summary>
            Spin 加载中
            </summary>
            <param name="control">控件主体</param>
            <param name="config">自定义配置</param>
            <param name="action">需要等待的委托</param>
            <param name="end">运行结束后的回调</param>
        </member>
        <member name="T:AntdUI.Steps">
            <summary>
            Steps 步骤条
            </summary>
            <remarks>引导用户按照流程完成任务的导航条。</remarks>
        </member>
        <member name="P:AntdUI.Steps.ForeColor">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.Steps.Fore">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.Steps.Current">
            <summary>
            指定当前步骤，从 0 开始记数。在子 Step 元素中，可以通过 status 属性覆盖状态
            </summary>
        </member>
        <member name="P:AntdUI.Steps.Status">
            <summary>
            指定当前步骤的状态
            </summary>
        </member>
        <member name="P:AntdUI.Steps.Vertical">
            <summary>
            垂直方向
            </summary>
        </member>
        <member name="P:AntdUI.Steps.Items">
            <summary>
            集合
            </summary>
        </member>
        <member name="E:AntdUI.Steps.ItemClick">
            <summary>
            点击项时发生
            </summary>
        </member>
        <member name="T:AntdUI.Steps.ItemClickEventHandler">
            <summary>
            点击项时发生
            </summary>
            <param name="sender">触发对象</param>
            <param name="value">数值</param>
        </member>
        <member name="P:AntdUI.StepsItem.Icon">
            <summary>
            步骤图标的类型，可选
            </summary>
        </member>
        <member name="P:AntdUI.StepsItem.IconSize">
            <summary>
            步骤图标的大小，可选
            </summary>
        </member>
        <member name="P:AntdUI.StepsItem.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:AntdUI.StepsItem.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:AntdUI.StepsItem.SubTitle">
            <summary>
            子标题
            </summary>
        </member>
        <member name="P:AntdUI.StepsItem.Description">
            <summary>
            步骤的详情描述，可选
            </summary>
        </member>
        <member name="P:AntdUI.StepsItem.Visible">
            <summary>
            是否显示
            </summary>
        </member>
        <member name="P:AntdUI.StepsItem.Tag">
            <summary>
            用户定义数据
            </summary>
        </member>
        <member name="T:AntdUI.Switch">
            <summary>
            Switch 开关
            </summary>
            <remarks>开关选择器。</remarks>
        </member>
        <member name="P:AntdUI.Switch.ForeColor">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.Switch.Fore">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.Switch.Fill">
            <summary>
            颜色
            </summary>
        </member>
        <member name="P:AntdUI.Switch.FillHover">
            <summary>
            悬停颜色
            </summary>
        </member>
        <member name="P:AntdUI.Switch.Checked">
            <summary>
            选中状态
            </summary>
        </member>
        <member name="P:AntdUI.Switch.AutoCheck">
            <summary>
            点击时自动改变选中状态
            </summary>
        </member>
        <member name="P:AntdUI.Switch.WaveSize">
            <summary>
            波浪大小
            </summary>
        </member>
        <member name="E:AntdUI.Switch.CheckedChanged">
            <summary>
            Checked 属性值更改时发生
            </summary>
        </member>
        <member name="T:AntdUI.CellBadge">
            <summary>
            徽标
            </summary>
        </member>
        <member name="M:AntdUI.CellBadge.#ctor(System.String)">
            <summary>
            徽标
            </summary>
            <param name="text">文本</param>
        </member>
        <member name="M:AntdUI.CellBadge.#ctor(AntdUI.TState)">
            <summary>
            徽标
            </summary>
            <param name="state">状态</param>
        </member>
        <member name="M:AntdUI.CellBadge.#ctor(AntdUI.TState,System.String)">
            <summary>
            徽标
            </summary>
            <param name="state">状态</param>
            <param name="text">文本</param>
        </member>
        <member name="P:AntdUI.CellBadge.Fore">
            <summary>
            字体颜色
            </summary>
        </member>
        <member name="P:AntdUI.CellBadge.Fill">
            <summary>
            颜色
            </summary>
        </member>
        <member name="P:AntdUI.CellBadge.State">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:AntdUI.CellBadge.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="T:AntdUI.CellButton">
            <summary>
            按钮
            </summary>
        </member>
        <member name="M:AntdUI.CellButton.#ctor(System.String,System.String)">
            <summary>
            按钮
            </summary>
            <param name="id">id</param>
            <param name="text">文本</param>
        </member>
        <member name="M:AntdUI.CellButton.#ctor(System.String,System.String,AntdUI.TTypeMini)">
            <summary>
            按钮
            </summary>
            <param name="id">id</param>
            <param name="text">文本</param>
            <param name="_type">类型</param>
        </member>
        <member name="P:AntdUI.CellButton.Fore">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.CellButton.Back">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.CellButton.BackHover">
            <summary>
            悬停背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.CellButton.BackActive">
            <summary>
            激活背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.CellButton.BackExtend">
            <summary>
            背景渐变色
            </summary>
        </member>
        <member name="P:AntdUI.CellButton.DefaultBack">
            <summary>
            Default模式背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.CellButton.DefaultBorderColor">
            <summary>
            Default模式边框颜色
            </summary>
        </member>
        <member name="P:AntdUI.CellButton.BorderWidth">
            <summary>
            边框宽度
            </summary>
        </member>
        <member name="P:AntdUI.CellButton.IconRatio">
            <summary>
            图标比例
            </summary>
        </member>
        <member name="P:AntdUI.CellButton.Image">
            <summary>
            图像
            </summary>
        </member>
        <member name="P:AntdUI.CellButton.HasImage">
            <summary>
            是否包含图片
            </summary>
        </member>
        <member name="P:AntdUI.CellButton.ImageHover">
            <summary>
            悬停图像
            </summary>
        </member>
        <member name="P:AntdUI.CellButton.ImageHoverSvg">
            <summary>
            悬停图像SVG
            </summary>
        </member>
        <member name="P:AntdUI.CellButton.ImageHoverAnimation">
            <summary>
            悬停图像动画时长
            </summary>
        </member>
        <member name="P:AntdUI.CellButton.Radius">
            <summary>
            圆角
            </summary>
        </member>
        <member name="P:AntdUI.CellButton.Shape">
            <summary>
            形状
            </summary>
        </member>
        <member name="P:AntdUI.CellButton.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:AntdUI.CellButton.Ghost">
            <summary>
            幽灵属性，使按钮背景透明
            </summary>
        </member>
        <member name="P:AntdUI.CellButton.ShowArrow">
            <summary>
            下拉框箭头是否显示
            </summary>
        </member>
        <member name="P:AntdUI.CellButton.IsLink">
            <summary>
            下拉框箭头是否链接样式
            </summary>
        </member>
        <member name="T:AntdUI.CellDivider">
            <summary>
            分割线
            </summary>
        </member>
        <member name="T:AntdUI.ICell">
            <summary>
            容器
            </summary>
        </member>
        <member name="M:AntdUI.ICell.GetSize(System.Drawing.Graphics,System.Drawing.Font,System.Int32,System.Int32)">
            <summary>
            获取大小
            </summary>
            <param name="g">GDI</param>
            <param name="font">字体</param>
            <param name="gap">边距</param>
            <param name="gap2">边距2</param>
        </member>
        <member name="M:AntdUI.ICell.SetRect(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Size,System.Int32,System.Int32)">
            <summary>
            设置渲染位置坐标
            </summary>
            <param name="g"></param>
            <param name="font">字体</param>
            <param name="rect">区域</param>
            <param name="size">真实区域</param>
            <param name="gap">边距</param>
            <param name="gap2">边距2</param>
        </member>
        <member name="P:AntdUI.ICell.PARENT">
            <summary>
            模板父级
            </summary>
        </member>
        <member name="T:AntdUI.CellImage">
            <summary>
            图片
            </summary>
        </member>
        <member name="M:AntdUI.CellImage.#ctor(System.Drawing.Bitmap)">
            <summary>
            图片
            </summary>
            <param name="img">图片</param>
        </member>
        <member name="M:AntdUI.CellImage.#ctor(System.String)">
            <summary>
            图片
            </summary>
            <param name="svg">SVG</param>
        </member>
        <member name="M:AntdUI.CellImage.#ctor(System.String,System.Drawing.Color)">
            <summary>
            图片
            </summary>
            <param name="svg">SVG</param>
            <param name="svgcolor">填充颜色</param>
        </member>
        <member name="M:AntdUI.CellImage.#ctor(System.Drawing.Bitmap,System.Int32)">
            <summary>
            图片
            </summary>
            <param name="img">图片</param>
            <param name="_radius">圆角</param>
        </member>
        <member name="P:AntdUI.CellImage.BorderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="P:AntdUI.CellImage.BorderWidth">
            <summary>
            边框宽度
            </summary>
        </member>
        <member name="P:AntdUI.CellImage.Radius">
            <summary>
            圆角
            </summary>
        </member>
        <member name="P:AntdUI.CellImage.Round">
            <summary>
            圆角样式
            </summary>
        </member>
        <member name="P:AntdUI.CellImage.Size">
            <summary>
            自定义大小
            </summary>
        </member>
        <member name="P:AntdUI.CellImage.ImageFit">
            <summary>
            图片布局
            </summary>
        </member>
        <member name="P:AntdUI.CellImage.Image">
            <summary>
            图片
            </summary>
        </member>
        <member name="P:AntdUI.CellImage.ImageSvg">
            <summary>
            图片SVG
            </summary>
        </member>
        <member name="P:AntdUI.CellImage.FillSvg">
            <summary>
            SVG填充颜色
            </summary>
        </member>
        <member name="P:AntdUI.CellImage.Tooltip">
            <summary>
            文本提示
            </summary>
        </member>
        <member name="T:AntdUI.CellLink">
            <summary>
            超链接
            </summary>
        </member>
        <member name="M:AntdUI.CellLink.#ctor(System.String,System.String)">
            <summary>
            超链接
            </summary>
            <param name="id">id</param>
            <param name="text">文本</param>
        </member>
        <member name="P:AntdUI.CellLink.Id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:AntdUI.CellLink.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:AntdUI.CellLink.TextAlign">
            <summary>
            文本位置
            </summary>
        </member>
        <member name="P:AntdUI.CellLink.Tooltip">
            <summary>
            文本提示
            </summary>
        </member>
        <member name="T:AntdUI.CellProgress">
            <summary>
            进度条
            </summary>
        </member>
        <member name="M:AntdUI.CellProgress.#ctor(System.Single)">
            <summary>
            进度条
            </summary>
            <param name="value">进度</param>
        </member>
        <member name="P:AntdUI.CellProgress.Back">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.CellProgress.Fill">
            <summary>
            进度条颜色
            </summary>
        </member>
        <member name="P:AntdUI.CellProgress.Radius">
            <summary>
            圆角
            </summary>
        </member>
        <member name="P:AntdUI.CellProgress.Shape">
            <summary>
            形状
            </summary>
        </member>
        <member name="P:AntdUI.CellProgress.Value">
            <summary>
            进度条
            </summary>
        </member>
        <member name="T:AntdUI.CellTag">
            <summary>
            标签
            </summary>
        </member>
        <member name="M:AntdUI.CellTag.#ctor(System.String)">
            <summary>
            标签
            </summary>
            <param name="text">文本</param>
        </member>
        <member name="M:AntdUI.CellTag.#ctor(System.String,AntdUI.TTypeMini)">
            <summary>
            标签
            </summary>
            <param name="text">文本</param>
            <param name="type">类型</param>
        </member>
        <member name="P:AntdUI.CellTag.Fore">
            <summary>
            字体颜色
            </summary>
        </member>
        <member name="P:AntdUI.CellTag.Back">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.CellTag.BorderWidth">
            <summary>
            边框宽度
            </summary>
        </member>
        <member name="P:AntdUI.CellTag.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:AntdUI.CellTag.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="T:AntdUI.CellText">
            <summary>
            文字
            </summary>
        </member>
        <member name="M:AntdUI.CellText.#ctor(System.String)">
            <summary>
            文字
            </summary>
            <param name="text">文本</param>
        </member>
        <member name="M:AntdUI.CellText.#ctor(System.String,System.Drawing.Color)">
            <summary>
            文字
            </summary>
            <param name="text">文本</param>
            <param name="fore">文字颜色</param>
        </member>
        <member name="P:AntdUI.CellText.Back">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.CellText.Fore">
            <summary>
            字体颜色
            </summary>
        </member>
        <member name="P:AntdUI.CellText.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="P:AntdUI.CellText.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:AntdUI.CellText.IconRatio">
            <summary>
            图标比例
            </summary>
        </member>
        <member name="P:AntdUI.CellText.Prefix">
            <summary>
            前缀
            </summary>
        </member>
        <member name="P:AntdUI.CellText.PrefixSvg">
            <summary>
            前缀SVG
            </summary>
        </member>
        <member name="P:AntdUI.CellText.HasPrefix">
            <summary>
            是否包含前缀
            </summary>
        </member>
        <member name="P:AntdUI.CellText.Suffix">
            <summary>
            后缀
            </summary>
        </member>
        <member name="P:AntdUI.CellText.SuffixSvg">
            <summary>
            后缀SVG
            </summary>
        </member>
        <member name="P:AntdUI.CellText.HasSuffix">
            <summary>
            是否包含后缀
            </summary>
        </member>
        <member name="T:AntdUI.FilesNameComparerClass">
            <summary>
            主要用于文件名的比较。
            </summary>
        </member>
        <member name="T:AntdUI.Table">
            <summary>
            Table 表格
            </summary>
            <remarks>展示行列数据。</remarks>
        </member>
        <member name="P:AntdUI.Table.Columns">
            <summary>
            表格列的配置
            </summary>
        </member>
        <member name="P:AntdUI.Table.DataSource">
            <summary>
            数据数组
            </summary>
        </member>
        <member name="P:AntdUI.Table.Item(System.Int32)">
            <summary>
            获取指定行的数据
            </summary>
            <param name="index">序号</param>
            <returns>行</returns>
        </member>
        <member name="P:AntdUI.Table.Gap">
            <summary>
            间距
            </summary>
        </member>
        <member name="P:AntdUI.Table.CheckSize">
            <summary>
            复选框大小
            </summary>
        </member>
        <member name="P:AntdUI.Table.FixedHeader">
            <summary>
            固定表头
            </summary>
        </member>
        <member name="P:AntdUI.Table.VisibleHeader">
            <summary>
            显示表头
            </summary>
        </member>
        <member name="P:AntdUI.Table.EnableHeaderResizing">
            <summary>
            手动调整列头宽度
            </summary>
        </member>
        <member name="P:AntdUI.Table.ColumnDragSort">
            <summary>
            列拖拽排序
            </summary>
        </member>
        <member name="P:AntdUI.Table.LostFocusClearSelection">
            <summary>
            焦点离开清空选中
            </summary>
        </member>
        <member name="P:AntdUI.Table.Bordered">
            <summary>
            显示列边框
            </summary>
        </member>
        <member name="P:AntdUI.Table.Radius">
            <summary>
            圆角
            </summary>
        </member>
        <member name="P:AntdUI.Table.ClipboardCopy">
            <summary>
            行复制
            </summary>
        </member>
        <member name="P:AntdUI.Table.AutoSizeColumnsMode">
            <summary>
            列宽自动调整模式
            </summary>
        </member>
        <member name="P:AntdUI.Table.EmptyHeader">
            <summary>
            空是否显示表头
            </summary>
        </member>
        <member name="P:AntdUI.Table.DefaultExpand">
            <summary>
            默认是否展开
            </summary>
        </member>
        <member name="P:AntdUI.Table.RowSelectedBg">
            <summary>
            表格行选中背景色
            </summary>
        </member>
        <member name="P:AntdUI.Table.RowSelectedFore">
            <summary>
            表格行选中字色
            </summary>
        </member>
        <member name="P:AntdUI.Table.BorderColor">
            <summary>
            表格边框颜色
            </summary>
        </member>
        <member name="P:AntdUI.Table.ColumnFont">
            <summary>
            表头字体
            </summary>
        </member>
        <member name="P:AntdUI.Table.ColumnBack">
            <summary>
            表头背景色
            </summary>
        </member>
        <member name="P:AntdUI.Table.ColumnFore">
            <summary>
            表头文本色
            </summary>
        </member>
        <member name="P:AntdUI.Table.SelectedIndex">
            <summary>
            选中行
            </summary>
        </member>
        <member name="P:AntdUI.Table.ShowTip">
            <summary>
            省略文字提示
            </summary>
        </member>
        <member name="P:AntdUI.Table.EditMode">
            <summary>
            编辑模式
            </summary>
        </member>
        <member name="M:AntdUI.Table.ScrollLine(System.Int32)">
            <summary>
            滚动到指定行
            </summary>
            <param name="i"></param>
        </member>
        <member name="M:AntdUI.Table.CopyData(System.Int32)">
            <summary>
            复制表格数据
            </summary>
            <param name="row">行</param>
        </member>
        <member name="M:AntdUI.Table.CopyData(System.Int32,System.Int32)">
            <summary>
            复制表格数据
            </summary>
            <param name="row">行</param>
            <param name="column">列</param>
        </member>
        <member name="M:AntdUI.Table.EnterEditMode(System.Int32,System.Int32)">
            <summary>
            进入编辑模式
            </summary>
            <param name="row">行</param>
            <param name="column">列</param>
        </member>
        <member name="P:AntdUI.Table.TempTable.columns">
            <summary>
            表头 - 列
            </summary>
        </member>
        <member name="P:AntdUI.Table.TempTable.rows">
            <summary>
            数据 - 行
            </summary>
        </member>
        <member name="P:AntdUI.Table.TempiColumn.key">
            <summary>
            表头名称
            </summary>
        </member>
        <member name="P:AntdUI.Table.TempiColumn.i">
            <summary>
            列序号
            </summary>
        </member>
        <member name="P:AntdUI.Table.IRow.i">
            <summary>
            行序号
            </summary>
        </member>
        <member name="P:AntdUI.Table.IRow.record">
            <summary>
            行原始数据
            </summary>
        </member>
        <member name="T:AntdUI.Table.CheckEventHandler">
            <summary>
            选中改变事件
            </summary>
            <param name="sender">触发对象</param>
            <param name="value">数值</param>
            <param name="record">原始行</param>
            <param name="rowIndex">行序号</param>
            <param name="columnIndex">列序号</param>
        </member>
        <member name="T:AntdUI.Table.ClickEventHandler">
            <summary>
            点击事件
            </summary>
            <param name="sender">触发对象</param>
            <param name="args">点击</param>
            <param name="record">原始行</param>
            <param name="rowIndex">行序号</param>
            <param name="columnIndex">列序号</param>
            <param name="rect">表格区域</param>
        </member>
        <member name="T:AntdUI.Table.ClickButtonEventHandler">
            <summary>
            按钮点击事件
            </summary>
            <param name="sender">触发对象</param>
            <param name="btn">触发按钮</param>
            <param name="args">点击</param>
            <param name="record">原始行</param>
            <param name="rowIndex">行序号</param>
            <param name="columnIndex">列序号</param>
        </member>
        <member name="E:AntdUI.Table.CheckedChanged">
            <summary>
            Checked 属性值更改时发生
            </summary>
        </member>
        <member name="T:AntdUI.Table.CheckStateEventHandler">
            <summary>
            CheckState类型事件
            </summary>
            <param name="sender">触发对象</param>
            <param name="column">触发表头对象</param>
            <param name="value">数值</param>
        </member>
        <member name="E:AntdUI.Table.CheckedOverallChanged">
            <summary>
            全局 CheckState 属性值更改时发生
            </summary>
        </member>
        <member name="E:AntdUI.Table.CellClick">
            <summary>
            单击时发生
            </summary>
        </member>
        <member name="E:AntdUI.Table.CellButtonClick">
            <summary>
            单击按钮时发生
            </summary>
        </member>
        <member name="E:AntdUI.Table.CellDoubleClick">
            <summary>
            双击时发生
            </summary>
        </member>
        <member name="T:AntdUI.Table.BeginEditEventHandler">
            <summary>
            编辑前事件
            </summary>
            <param name="sender">触发对象</param>
            <param name="value">数值</param>
            <param name="record">原始行</param>
            <param name="rowIndex">行序号</param>
            <param name="columnIndex">列序号</param>
        </member>
        <member name="T:AntdUI.Table.BeginEditInputStyleEventHandler">
            <summary>
            编辑前事件文本框样式
            </summary>
            <param name="sender">触发对象</param>
            <param name="value">数值</param>
            <param name="record">原始行</param>
            <param name="rowIndex">行序号</param>
            <param name="columnIndex">列序号</param>
            <param name="input">文本框</param>
        </member>
        <member name="T:AntdUI.Table.EndEditEventHandler">
            <summary>
            编辑后事件
            </summary>
            <param name="sender">触发对象</param>
            <param name="value">修改后值</param>
            <param name="record">原始行</param>
            <param name="rowIndex">行序号</param>
            <param name="columnIndex">列序号</param>
        </member>
        <member name="E:AntdUI.Table.CellBeginEdit">
            <summary>
            编辑前发生
            </summary>
        </member>
        <member name="E:AntdUI.Table.CellBeginEditInputStyle">
            <summary>
            编辑前文本框样式发生
            </summary>
        </member>
        <member name="E:AntdUI.Table.CellEndEdit">
            <summary>
            编辑后发生
            </summary>
        </member>
        <member name="E:AntdUI.Table.SetRowStyle">
            <summary>
            设置行样式
            </summary>
        </member>
        <member name="P:AntdUI.Table.CellStyleInfo.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.Table.CellStyleInfo.ForeColor">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="M:AntdUI.Table.AddRows(System.Collections.Generic.List{AntdUI.Table.TCell}@,System.Int32@,AntdUI.Column,System.Object,System.Object,System.ComponentModel.PropertyDescriptor)">
            <summary>
            添加行
            </summary>
            <param name="cells">列</param>
            <param name="processing">动画</param>
            <param name="column">表头</param>
            <param name="ov">原始值</param>
            <param name="value">真值</param>
            <param name="prop">反射</param>
        </member>
        <member name="M:AntdUI.Table.PaintButtonImageNoText(System.Drawing.Graphics,AntdUI.CellButton,System.Nullable{System.Drawing.Color},System.Drawing.Rectangle)">
            <summary>
            渲染图片（没有文字）
            </summary>
            <param name="g">GDI</param>
            <param name="color">颜色</param>
            <param name="rect">区域</param>
        </member>
        <member name="M:AntdUI.Table.PaintButtonPaintImage(System.Drawing.Graphics,AntdUI.CellButton,System.Nullable{System.Drawing.Color},System.Drawing.Rectangle)">
            <summary>
            渲染图片
            </summary>
            <param name="g">GDI</param>
            <param name="color">颜色</param>
            <param name="rectl">图标区域</param>
        </member>
        <member name="T:AntdUI.Table.RowTemplate">
            <summary>
            行数据
            </summary>
        </member>
        <member name="P:AntdUI.Table.RowTemplate.SHOW">
            <summary>
            内部判断脏渲染
            </summary>
        </member>
        <member name="P:AntdUI.Table.RowTemplate.RECT">
            <summary>
            行区域
            </summary>
        </member>
        <member name="P:AntdUI.Table.RowTemplate.RECORD">
            <summary>
            原始行数据
            </summary>
        </member>
        <member name="P:AntdUI.Table.RowTemplate.cells">
            <summary>
            列数据
            </summary>
        </member>
        <member name="P:AntdUI.Table.RowTemplate.Height">
            <summary>
            行高度
            </summary>
        </member>
        <member name="P:AntdUI.Table.RowTemplate.Hover">
            <summary>
            是否移动
            </summary>
        </member>
        <member name="T:AntdUI.Table.TCellCheck">
            <summary>
            复选框
            </summary>
        </member>
        <member name="M:AntdUI.Table.TCellCheck.#ctor(AntdUI.Table,System.ComponentModel.PropertyDescriptor,System.Object,System.Boolean,AntdUI.ColumnCheck)">
            <summary>
            复选框
            </summary>
            <param name="table">表格</param>
            <param name="prop">反射</param>
            <param name="ov">行数据</param>
            <param name="value">值</param>
            <param name="column">表头</param>
        </member>
        <member name="T:AntdUI.Table.TCellRadio">
            <summary>
            单选框
            </summary>
        </member>
        <member name="M:AntdUI.Table.TCellRadio.#ctor(AntdUI.Table,System.ComponentModel.PropertyDescriptor,System.Object,System.Boolean,AntdUI.ColumnRadio)">
            <summary>
            单选框
            </summary>
            <param name="table">表格</param>
            <param name="prop">反射</param>
            <param name="ov">行数据</param>
            <param name="value">值</param>
            <param name="column">表头</param>
        </member>
        <member name="T:AntdUI.Table.TCellSwitch">
            <summary>
            开关
            </summary>
        </member>
        <member name="M:AntdUI.Table.TCellSwitch.#ctor(AntdUI.Table,System.ComponentModel.PropertyDescriptor,System.Object,System.Boolean,AntdUI.ColumnSwitch)">
            <summary>
            开关
            </summary>
            <param name="table">表格</param>
            <param name="prop">反射</param>
            <param name="ov">行数据</param>
            <param name="value">值</param>
            <param name="_column">表头</param>
        </member>
        <member name="T:AntdUI.Table.TCellText">
            <summary>
            普通文本
            </summary>
        </member>
        <member name="M:AntdUI.Table.TCellText.#ctor(AntdUI.Table,System.ComponentModel.PropertyDescriptor,System.Object,AntdUI.Column,System.String)">
            <summary>
            普通文本
            </summary>
            <param name="table">表格</param>
            <param name="prop">反射</param>
            <param name="ov">行数据</param>
            <param name="_column">表头</param>
            <param name="_value">文本</param>
        </member>
        <member name="P:AntdUI.Table.TCellText.value">
            <summary>
            值
            </summary>
        </member>
        <member name="T:AntdUI.Table.TCellColumn">
            <summary>
            表头
            </summary>
        </member>
        <member name="P:AntdUI.Table.TCellColumn.value">
            <summary>
            值
            </summary>
        </member>
        <member name="T:AntdUI.Table.Template">
            <summary>
            包裹容器
            </summary>
        </member>
        <member name="P:AntdUI.Table.Template.value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:AntdUI.Table.ITemplate.RECT">
            <summary>
            真实区域
            </summary>
        </member>
        <member name="P:AntdUI.Table.AutoWidth.value">
            <summary>
            自动值
            </summary>
        </member>
        <member name="P:AntdUI.Table.AutoWidth.minvalue">
            <summary>
            最小值
            </summary>
        </member>
        <member name="T:AntdUI.ColumnCheck">
            <summary>
            复选框表头
            </summary>
        </member>
        <member name="P:AntdUI.ColumnCheck.Checked">
            <summary>
            选中状态
            </summary>
        </member>
        <member name="P:AntdUI.ColumnCheck.CheckState">
            <summary>
            选中状态
            </summary>
        </member>
        <member name="P:AntdUI.ColumnCheck.AutoCheck">
            <summary>
            点击时自动改变选中状态
            </summary>
        </member>
        <member name="P:AntdUI.ColumnCheck.Render">
            <summary>
            插槽
            </summary>
        </member>
        <member name="T:AntdUI.ColumnRadio">
            <summary>
            单选框表头
            </summary>
        </member>
        <member name="M:AntdUI.ColumnRadio.#ctor(System.String,System.String)">
            <summary>
            单选框表头
            </summary>
            <param name="key">绑定名称</param>
            <param name="title">显示文字</param>
        </member>
        <member name="P:AntdUI.ColumnRadio.AutoCheck">
            <summary>
            点击时自动改变选中状态
            </summary>
        </member>
        <member name="P:AntdUI.ColumnRadio.Render">
            <summary>
            插槽
            </summary>
        </member>
        <member name="T:AntdUI.ColumnSwitch">
            <summary>
            开关表头
            </summary>
        </member>
        <member name="M:AntdUI.ColumnSwitch.#ctor(System.String,System.String)">
            <summary>
            开关表头
            </summary>
            <param name="key">绑定名称</param>
            <param name="title">显示文字</param>
        </member>
        <member name="M:AntdUI.ColumnSwitch.#ctor(System.String,System.String,AntdUI.ColumnAlign)">
            <summary>
            开关表头
            </summary>
            <param name="key">绑定名称</param>
            <param name="title">显示文字</param>
            <param name="align">对齐方式</param>
        </member>
        <member name="P:AntdUI.ColumnSwitch.AutoCheck">
            <summary>
            点击时自动改变选中状态
            </summary>
        </member>
        <member name="P:AntdUI.ColumnSwitch.Render">
            <summary>
            插槽
            </summary>
        </member>
        <member name="M:AntdUI.Column`1.#ctor(System.String,System.String)">
            <summary>
            表头
            </summary>
            <param name="key">绑定名称</param>
            <param name="title">显示文字</param>
        </member>
        <member name="M:AntdUI.Column`1.#ctor(System.String,System.String,AntdUI.ColumnAlign)">
            <summary>
            表头
            </summary>
            <param name="key">绑定名称</param>
            <param name="title">显示文字</param>
            <param name="align">对齐方式</param>
        </member>
        <member name="P:AntdUI.Column`1.Render">
            <summary>
            插槽
            </summary>
        </member>
        <member name="T:AntdUI.Column">
            <summary>
            表头
            </summary>
        </member>
        <member name="M:AntdUI.Column.#ctor(System.String,System.String)">
            <summary>
            表头
            </summary>
            <param name="key">绑定名称</param>
            <param name="title">显示文字</param>
        </member>
        <member name="M:AntdUI.Column.#ctor(System.String,System.String,AntdUI.ColumnAlign)">
            <summary>
            表头
            </summary>
            <param name="key">绑定名称</param>
            <param name="title">显示文字</param>
            <param name="align">对齐方式</param>
        </member>
        <member name="P:AntdUI.Column.Key">
            <summary>
            绑定名称
            </summary>
        </member>
        <member name="P:AntdUI.Column.Title">
            <summary>
            显示文字
            </summary>
        </member>
        <member name="P:AntdUI.Column.Visible">
            <summary>
            是否显示
            </summary>
        </member>
        <member name="P:AntdUI.Column.Align">
            <summary>
            对齐方式
            </summary>
        </member>
        <member name="P:AntdUI.Column.ColAlign">
            <summary>
            表头对齐方式
            </summary>
        </member>
        <member name="P:AntdUI.Column.Width">
            <summary>
            列宽度
            </summary>
        </member>
        <member name="P:AntdUI.Column.MaxWidth">
            <summary>
            列最大宽度
            </summary>
        </member>
        <member name="P:AntdUI.Column.Ellipsis">
            <summary>
            超过宽度将自动省略
            </summary>
        </member>
        <member name="P:AntdUI.Column.LineBreak">
            <summary>
            自动换行
            </summary>
        </member>
        <member name="P:AntdUI.Column.Fixed">
            <summary>
            列是否固定
            </summary>
        </member>
        <member name="P:AntdUI.Column.SortOrder">
            <summary>
            启用排序
            </summary>
        </member>
        <member name="P:AntdUI.Column.KeyTree">
            <summary>
            树形列
            </summary>
        </member>
        <member name="P:AntdUI.Column.Render">
            <summary>
            插槽
            </summary>
        </member>
        <member name="T:AntdUI.ColumnAlign">
            <summary>
            列的对齐方式
            </summary>
        </member>
        <member name="T:AntdUI.Tabs">
            <summary>
            Tabs 标签页
            </summary>
            <remarks>选项卡切换组件。</remarks>
        </member>
        <member name="P:AntdUI.Tabs.ForeColor">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.Tabs.Fill">
            <summary>
            颜色
            </summary>
        </member>
        <member name="P:AntdUI.Tabs.FillHover">
            <summary>
            悬停颜色
            </summary>
        </member>
        <member name="P:AntdUI.Tabs.FillActive">
            <summary>
            激活颜色
            </summary>
        </member>
        <member name="P:AntdUI.Tabs.Alignment">
            <summary>
            位置
            </summary>
        </member>
        <member name="P:AntdUI.Tabs.Centered">
            <summary>
            标签居中展示
            </summary>
        </member>
        <member name="P:AntdUI.Tabs.Style">
            <summary>
            样式
            </summary>
        </member>
        <member name="P:AntdUI.Tabs.Type">
            <summary>
            样式类型
            </summary>
        </member>
        <member name="P:AntdUI.Tabs.Gap">
            <summary>
            间距
            </summary>
        </member>
        <member name="P:AntdUI.Tabs.IconRatio">
            <summary>
            图标比例
            </summary>
        </member>
        <member name="P:AntdUI.Tabs.Pages">
            <summary>
            数据
            </summary>
        </member>
        <member name="E:AntdUI.Tabs.SelectedIndexChanged">
            <summary>
            SelectedIndex 属性值更改时发生
            </summary>
        </member>
        <member name="E:AntdUI.Tabs.ClosingPage">
            <summary>
            关闭页面前发生
            </summary>
        </member>
        <member name="P:AntdUI.Tabs.TabControlActionList.Control">
            <summary>
            Gets the associated <see cref="T:System.Windows.Forms.TabControl"/>.
            </summary>
        </member>
        <member name="P:AntdUI.Tabs.TabControlActionList.DesignerHost">
            <summary>
            Gets the designer host.
            </summary>
        </member>
        <member name="P:AntdUI.Tabs.TabControlActionList.SelectionService">
            <summary>
            Gets the selection service.
            </summary>
        </member>
        <member name="P:AntdUI.Tabs.TabControlActionList.Alignment">
            <summary>
            Gets or sets the ContentAlignment of the designed control.
            </summary>
        </member>
        <member name="M:AntdUI.Tabs.TabControlActionList.AddTab">
            <summary>
            Adds a tab to the designed control.
            </summary>
        </member>
        <member name="M:AntdUI.Tabs.TabControlActionList.RemoveTab">
            <summary>
            Removes the current page of the designed control.
            </summary>
        </member>
        <member name="M:AntdUI.Tabs.TabControlActionList.#ctor(System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:AntdUI.Tabs.TabControlActionList"/> class.
            </summary>
            <param name="component">A component related to the DesignerActionList.</param>
        </member>
        <member name="M:AntdUI.Tabs.TabControlActionList.GetPropertyByName(System.String)">
            <summary>
            Helper method to retrieve control properties for undo support.
            </summary>
            <param name="propName">Property name.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:AntdUI.Tabs.TabControlActionList.GetSortedActionItems" -->
        <member name="T:AntdUI.Tabs.StyleLine">
            <summary>
            线条样式
            </summary>
        </member>
        <member name="P:AntdUI.Tabs.StyleLine.Size">
            <summary>
            条大小
            </summary>
        </member>
        <member name="P:AntdUI.Tabs.StyleLine.Padding">
            <summary>
            条边距
            </summary>
        </member>
        <member name="P:AntdUI.Tabs.StyleLine.Radius">
            <summary>
            条圆角
            </summary>
        </member>
        <member name="P:AntdUI.Tabs.StyleLine.BackSize">
            <summary>
            条背景大小
            </summary>
        </member>
        <member name="P:AntdUI.Tabs.StyleLine.Back">
            <summary>
            条背景
            </summary>
        </member>
        <member name="T:AntdUI.Tabs.StyleCard">
            <summary>
            卡片样式
            </summary>
        </member>
        <member name="P:AntdUI.Tabs.StyleCard.Radius">
            <summary>
            卡片圆角
            </summary>
        </member>
        <member name="P:AntdUI.Tabs.StyleCard.Border">
            <summary>
            边框大小
            </summary>
        </member>
        <member name="P:AntdUI.Tabs.StyleCard.BorderColor">
            <summary>
            卡片边框颜色
            </summary>
        </member>
        <member name="P:AntdUI.Tabs.StyleCard.BorderActive">
            <summary>
            卡片边框激活颜色
            </summary>
        </member>
        <member name="P:AntdUI.Tabs.StyleCard.Fill">
            <summary>
            卡片颜色
            </summary>
        </member>
        <member name="P:AntdUI.Tabs.StyleCard.FillHover">
            <summary>
            卡片悬停颜色
            </summary>
        </member>
        <member name="P:AntdUI.Tabs.StyleCard.FillActive">
            <summary>
            卡片激活颜色
            </summary>
        </member>
        <member name="P:AntdUI.Tabs.StyleCard.Gap">
            <summary>
            卡片间距
            </summary>
        </member>
        <member name="P:AntdUI.Tabs.StyleCard.Closable">
            <summary>
            可关闭
            </summary>
        </member>
        <member name="P:AntdUI.TabPage.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:AntdUI.TabPage.IconSvg">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:AntdUI.TabPage.HasIcon">
            <summary>
            是否包含图标
            </summary>
        </member>
        <member name="P:AntdUI.TabPage.BadgeOffsetX">
            <summary>
            徽标偏移X
            </summary>
        </member>
        <member name="P:AntdUI.TabPage.BadgeOffsetY">
            <summary>
            徽标偏移Y
            </summary>
        </member>
        <member name="T:AntdUI.Tag">
            <summary>
            Tag 标签
            </summary>
            <remarks>进行标记和分类的小标签。</remarks>
        </member>
        <member name="P:AntdUI.Tag.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.Tag.ForeColor">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.Tag.Fore">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.Tag.Back">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.Tag.BackgroundImage">
            <summary>
            背景图片
            </summary>
        </member>
        <member name="P:AntdUI.Tag.BackgroundImageLayout">
            <summary>
            背景图片布局
            </summary>
        </member>
        <member name="P:AntdUI.Tag.BorderWidth">
            <summary>
            边框宽度
            </summary>
        </member>
        <member name="P:AntdUI.Tag.Radius">
            <summary>
            圆角
            </summary>
        </member>
        <member name="P:AntdUI.Tag.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:AntdUI.Tag.CloseIcon">
            <summary>
            是否显示关闭图标
            </summary>
        </member>
        <member name="P:AntdUI.Tag.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:AntdUI.Tag.TextAlign">
            <summary>
            文本位置
            </summary>
        </member>
        <member name="P:AntdUI.Tag.AutoEllipsis">
            <summary>
            文本超出自动处理
            </summary>
        </member>
        <member name="P:AntdUI.Tag.TextMultiLine">
            <summary>
            是否多行
            </summary>
        </member>
        <member name="P:AntdUI.Tag.Image">
            <summary>
            图像
            </summary>
        </member>
        <member name="P:AntdUI.Tag.HasImage">
            <summary>
            是否包含图片
            </summary>
        </member>
        <member name="P:AntdUI.Tag.ImageSize">
            <summary>
            图像大小
            </summary>
        </member>
        <member name="T:AntdUI.Tag.CloseEventHandler">
            <summary>
            Close事件
            </summary>
            <param name="sender">触发对象</param>
            <param name="value">数值</param>
        </member>
        <member name="E:AntdUI.Tag.CloseChanged">
            <summary>
            Close时发生
            </summary>
        </member>
        <member name="M:AntdUI.Tag.PaintImageNoText(System.Drawing.Graphics,System.Nullable{System.Drawing.Color},System.Drawing.SizeF,System.Drawing.RectangleF)">
            <summary>
            渲染图片（没有文字）
            </summary>
            <param name="g">GDI</param>
            <param name="color">颜色</param>
            <param name="font_size">字体大小</param>
            <param name="rect_read">客户区域</param>
        </member>
        <member name="M:AntdUI.Tag.GetImageRectCenter(System.Drawing.SizeF,System.Drawing.RectangleF)">
            <summary>
            居中的图片绘制区域
            </summary>
            <param name="font_size">字体大小</param>
            <param name="rect_read">客户区域</param>
        </member>
        <member name="M:AntdUI.Tag.PaintImage(System.Drawing.Graphics,System.Nullable{System.Drawing.Color},System.Drawing.Rectangle)">
            <summary>
            渲染图片
            </summary>
            <param name="g">GDI</param>
            <param name="color">颜色</param>
            <param name="rectl">图标区域</param>
        </member>
        <member name="M:AntdUI.Tag.GetImageRect(System.Drawing.Rectangle)">
            <summary>
            图片绘制区域
            </summary>
            <param name="rectl">图标区域</param>
        </member>
        <member name="P:AntdUI.Tag.AutoSize">
            <summary>
            自动大小
            </summary>
        </member>
        <member name="P:AntdUI.Tag.AutoSizeMode">
            <summary>
            自动大小模式
            </summary>
        </member>
        <member name="T:AntdUI.Timeline">
            <summary>
            Timeline 时间轴
            </summary>
            <remarks>垂直展示的时间流信息。</remarks>
        </member>
        <member name="P:AntdUI.Timeline.ForeColor">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.Timeline.Fore">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.Timeline.Items">
            <summary>
            集合
            </summary>
        </member>
        <member name="E:AntdUI.Timeline.ItemClick">
            <summary>
            点击项时发生
            </summary>
        </member>
        <member name="T:AntdUI.Timeline.ItemClickEventHandler">
            <summary>
            点击项时发生
            </summary>
            <param name="sender">触发对象</param>
            <param name="value">数值</param>
        </member>
        <member name="P:AntdUI.TimelineItem.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:AntdUI.TimelineItem.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:AntdUI.TimelineItem.Description">
            <summary>
            描述，可选
            </summary>
        </member>
        <member name="P:AntdUI.TimelineItem.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:AntdUI.TimelineItem.Visible">
            <summary>
            是否显示
            </summary>
        </member>
        <member name="P:AntdUI.TimelineItem.Tag">
            <summary>
            用户定义数据
            </summary>
        </member>
        <member name="T:AntdUI.TimePicker">
            <summary>
            TimePicker 时间选择框
            </summary>
            <remarks>输入或选择时间的控件。</remarks>
        </member>
        <member name="P:AntdUI.TimePicker.Format">
            <summary>
            格式化
            </summary>
        </member>
        <member name="P:AntdUI.TimePicker.Value">
            <summary>
            控件当前日期
            </summary>
        </member>
        <member name="P:AntdUI.TimePicker.Placement">
            <summary>
            菜单弹出位置
            </summary>
        </member>
        <member name="P:AntdUI.TimePicker.DropDownArrow">
            <summary>
            下拉箭头是否显示
            </summary>
        </member>
        <member name="P:AntdUI.TimePicker.FocusExpandDropdown">
            <summary>
            焦点时展开下拉
            </summary>
        </member>
        <member name="P:AntdUI.TimePicker.ShowIcon">
            <summary>
            是否显示图标
            </summary>
        </member>
        <member name="T:AntdUI.Tooltip">
            <summary>
            Tooltip 文字提示
            </summary>
            <remarks>简单的文字提示气泡框。</remarks>
        </member>
        <member name="P:AntdUI.Tooltip.Radius">
            <summary>
            圆角
            </summary>
        </member>
        <member name="P:AntdUI.Tooltip.ArrowSize">
            <summary>
            箭头大小
            </summary>
        </member>
        <member name="P:AntdUI.Tooltip.ArrowAlign">
            <summary>
            箭头方向
            </summary>
        </member>
        <member name="P:AntdUI.Tooltip.CustomWidth">
            <summary>
            自定义宽度
            </summary>
        </member>
        <member name="M:AntdUI.Tooltip.open(System.Windows.Forms.Control,System.String,AntdUI.TAlign)">
            <summary>
            Tooltip 文字提示
            </summary>
            <param name="control">所属控件</param>
            <param name="text">文本</param>
            <param name="ArrowAlign">箭头方向</param>
        </member>
        <member name="M:AntdUI.Tooltip.open(System.Windows.Forms.Control,System.String,System.Drawing.Rectangle,AntdUI.TAlign)">
            <summary>
            Tooltip 文字提示
            </summary>
            <param name="control">所属控件</param>
            <param name="text">文本</param>
            <param name="rect">偏移量</param>
            <param name="ArrowAlign">箭头方向</param>
        </member>
        <member name="M:AntdUI.Tooltip.open(AntdUI.Tooltip.Config)">
            <summary>
            Tooltip 文字提示
            </summary>
            <param name="config">配置</param>
        </member>
        <member name="T:AntdUI.Tooltip.Config">
            <summary>
            配置
            </summary>
        </member>
        <member name="M:AntdUI.Tooltip.Config.#ctor(System.Windows.Forms.Control,System.String)">
            <summary>
            Tooltip 配置
            </summary>
            <param name="control">所属控件</param>
            <param name="content">文本</param>
        </member>
        <member name="P:AntdUI.Tooltip.Config.Control">
            <summary>
            所属控件
            </summary>
        </member>
        <member name="P:AntdUI.Tooltip.Config.Offset">
            <summary>
            偏移量
            </summary>
        </member>
        <member name="P:AntdUI.Tooltip.Config.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="P:AntdUI.Tooltip.Config.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:AntdUI.Tooltip.Config.Radius">
            <summary>
            圆角
            </summary>
        </member>
        <member name="P:AntdUI.Tooltip.Config.ArrowSize">
            <summary>
            箭头大小
            </summary>
        </member>
        <member name="P:AntdUI.Tooltip.Config.ArrowAlign">
            <summary>
            箭头方向
            </summary>
        </member>
        <member name="P:AntdUI.Tooltip.Config.CustomWidth">
            <summary>
            自定义宽度
            </summary>
        </member>
        <member name="P:AntdUI.TooltipForm.Radius">
            <summary>
            圆角
            </summary>
        </member>
        <member name="P:AntdUI.TooltipForm.ArrowSize">
            <summary>
            箭头大小
            </summary>
        </member>
        <member name="P:AntdUI.TooltipForm.ArrowAlign">
            <summary>
            箭头方向
            </summary>
        </member>
        <member name="P:AntdUI.TooltipForm.CustomWidth">
            <summary>
            自定义宽度
            </summary>
        </member>
        <member name="P:AntdUI.TooltipComponent.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="P:AntdUI.TooltipComponent.Radius">
            <summary>
            圆角
            </summary>
        </member>
        <member name="P:AntdUI.TooltipComponent.ArrowSize">
            <summary>
            箭头大小
            </summary>
        </member>
        <member name="P:AntdUI.TooltipComponent.ArrowAlign">
            <summary>
            箭头方向
            </summary>
        </member>
        <member name="P:AntdUI.TooltipComponent.CustomWidth">
            <summary>
            自定义宽度
            </summary>
        </member>
        <member name="P:AntdUI.ITooltipConfig.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="P:AntdUI.ITooltipConfig.Radius">
            <summary>
            圆角
            </summary>
        </member>
        <member name="P:AntdUI.ITooltipConfig.ArrowSize">
            <summary>
            箭头大小
            </summary>
        </member>
        <member name="P:AntdUI.ITooltipConfig.ArrowAlign">
            <summary>
            箭头方向
            </summary>
        </member>
        <member name="P:AntdUI.ITooltipConfig.CustomWidth">
            <summary>
            设定宽度
            </summary>
        </member>
        <member name="P:AntdUI.ITooltip.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:AntdUI.ITooltip.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="P:AntdUI.ITooltip.Radius">
            <summary>
            圆角
            </summary>
        </member>
        <member name="P:AntdUI.ITooltip.ArrowSize">
            <summary>
            箭头大小
            </summary>
        </member>
        <member name="P:AntdUI.ITooltip.ArrowAlign">
            <summary>
            箭头方向
            </summary>
        </member>
        <member name="P:AntdUI.ITooltip.CustomWidth">
            <summary>
            设定宽度
            </summary>
        </member>
        <member name="T:AntdUI.Tree">
            <summary>
            Tree 树形控件
            </summary>
            <remarks>多层次的结构列表。</remarks>
        </member>
        <member name="P:AntdUI.Tree.ForeColor">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.Tree.BackHover">
            <summary>
            悬停背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.Tree.BackActive">
            <summary>
            激活背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.Tree.Fore">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="P:AntdUI.Tree.ForeActive">
            <summary>
            激活字体颜色
            </summary>
        </member>
        <member name="P:AntdUI.Tree.Radius">
            <summary>
            圆角
            </summary>
        </member>
        <member name="P:AntdUI.Tree.Gap">
            <summary>
            间距
            </summary>
        </member>
        <member name="P:AntdUI.Tree.Round">
            <summary>
            圆角样式
            </summary>
        </member>
        <member name="P:AntdUI.Tree.Checkable">
            <summary>
            节点前添加 Checkbox 复选框
            </summary>
        </member>
        <member name="P:AntdUI.Tree.CheckStrictly">
            <summary>
            Checkable 状态下节点选择完全受控（父子节点选中状态不再关联）
            </summary>
        </member>
        <member name="P:AntdUI.Tree.BlockNode">
            <summary>
            节点占据一行
            </summary>
        </member>
        <member name="M:AntdUI.Tree.ExpandAll(System.Boolean)">
            <summary>
            展开全部
            </summary>
            <param name="value">true 展开、false 收起</param>
        </member>
        <member name="M:AntdUI.Tree.GetCheckeds(System.Boolean)">
            <summary>
            获取所有选中项
            </summary>
            <param name="Indeterminate">是否包含 Indeterminate</param>
        </member>
        <member name="M:AntdUI.Tree.SetCheckeds">
            <summary>
            全选/全不选
            </summary>
        </member>
        <member name="M:AntdUI.Tree.SetCheckeds(System.Boolean)">
            <summary>
            全选/全不选
            </summary>
        </member>
        <member name="E:AntdUI.Tree.SelectChanged">
            <summary>
            Select 属性值更改时发生
            </summary>
        </member>
        <member name="E:AntdUI.Tree.CheckedChanged">
            <summary>
            Checked 属性值更改时发生
            </summary>
        </member>
        <member name="E:AntdUI.Tree.NodeMouseClick">
            <summary>
            点击项事件
            </summary>
        </member>
        <member name="E:AntdUI.Tree.NodeMouseDoubleClick">
            <summary>
            双击项事件
            </summary>
        </member>
        <member name="E:AntdUI.Tree.NodeMouseMove">
            <summary>
            移动项事件
            </summary>
        </member>
        <member name="P:AntdUI.Tree.Items">
            <summary>
            集合
            </summary>
        </member>
        <member name="P:AntdUI.TreeItem.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:AntdUI.TreeItem.IconSvg">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:AntdUI.TreeItem.HasIcon">
            <summary>
            是否包含图片
            </summary>
        </member>
        <member name="P:AntdUI.TreeItem.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:AntdUI.TreeItem.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:AntdUI.TreeItem.SubTitle">
            <summary>
            子标题
            </summary>
        </member>
        <member name="P:AntdUI.TreeItem.Visible">
            <summary>
            是否显示
            </summary>
        </member>
        <member name="P:AntdUI.TreeItem.Tag">
            <summary>
            用户定义数据
            </summary>
        </member>
        <member name="P:AntdUI.TreeItem.Sub">
            <summary>
            获取列表中所有列表项的集合
            </summary>
        </member>
        <member name="P:AntdUI.TreeItem.Enabled">
            <summary>
            禁掉响应
            </summary>
        </member>
        <member name="P:AntdUI.TreeItem.Expand">
            <summary>
            展开
            </summary>
        </member>
        <member name="P:AntdUI.TreeItem.Fore">
            <summary>
            文本颜色
            </summary>
        </member>
        <member name="P:AntdUI.TreeItem.Back">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.TreeItem.Hover">
            <summary>
            是否移动
            </summary>
        </member>
        <member name="T:AntdUI.WindowBar">
            <summary>
            WindowBar 窗口栏
            </summary>
            <remarks>窗口栏。</remarks>
        </member>
        <member name="P:AntdUI.WindowBar.MaximizeBox">
            <summary>
            是否显示最大化按钮
            </summary>
        </member>
        <member name="P:AntdUI.WindowBar.MinimizeBox">
            <summary>
            是否显示最小化按钮
            </summary>
        </member>
        <member name="P:AntdUI.WindowBar.DragMove">
            <summary>
            是否可以拖动位置
            </summary>
        </member>
        <member name="M:AntdUI.WindowBar.NotifyDefault(System.Boolean)">
            <summary>
            是否默认按钮
            </summary>
        </member>
        <member name="F:AntdUI.Design.FrmColorEditor.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:AntdUI.Design.FrmColorEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:AntdUI.Design.FrmColorEditor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:AntdUI.ColumnsMode.Auto">
            <summary>
            自动
            </summary>
        </member>
        <member name="F:AntdUI.ColumnsMode.Fill">
            <summary>
            填充（宽度不够时）
            </summary>
        </member>
        <member name="T:AntdUI.IntEventHandler">
            <summary>
            Int类型事件
            </summary>
            <param name="sender">触发对象</param>
            <param name="value">数值</param>
        </member>
        <member name="T:AntdUI.IntNEventHandler">
            <summary>
            Int类型事件
            </summary>
            <param name="sender">触发对象</param>
            <param name="value">数值</param>
        </member>
        <member name="T:AntdUI.FloatEventHandler">
            <summary>
            Float类型事件
            </summary>
            <param name="sender">触发对象</param>
            <param name="value">数值</param>
        </member>
        <member name="T:AntdUI.DecimalEventHandler">
            <summary>
            Decimal类型事件
            </summary>
            <param name="sender">触发对象</param>
            <param name="value">数值</param>
        </member>
        <member name="T:AntdUI.DecimalNEventHandler">
            <summary>
            Decimal类型事件
            </summary>
            <param name="sender">触发对象</param>
            <param name="value">数值</param>
        </member>
        <member name="T:AntdUI.ObjectNEventHandler">
            <summary>
            Object类型事件
            </summary>
            <param name="sender">触发对象</param>
            <param name="value">数值</param>
        </member>
        <member name="T:AntdUI.ObjectsEventHandler">
            <summary>
            Object类型事件
            </summary>
            <param name="sender">触发对象</param>
            <param name="value">数值</param>
        </member>
        <member name="T:AntdUI.BoolEventHandler">
            <summary>
            Bool类型事件
            </summary>
            <param name="sender">触发对象</param>
            <param name="value">数值</param>
        </member>
        <member name="T:AntdUI.CheckStateEventHandler">
            <summary>
            CheckStateE类型事件
            </summary>
            <param name="sender">触发对象</param>
            <param name="value">数值</param>
        </member>
        <member name="T:AntdUI.DateTimeEventHandler">
            <summary>
            DateTime类型事件
            </summary>
            <param name="sender">触发对象</param>
            <param name="value">数值</param>
        </member>
        <member name="T:AntdUI.DateTimeNEventHandler">
            <summary>
            DateTime类型事件
            </summary>
            <param name="sender">触发对象</param>
            <param name="value">数值</param>
        </member>
        <member name="T:AntdUI.TimeSpanNEventHandler">
            <summary>
            TimeSpan类型事件
            </summary>
            <param name="sender">触发对象</param>
            <param name="value">数值</param>
        </member>
        <member name="T:AntdUI.ColorEventHandler">
            <summary>
            Color类型事件
            </summary>
            <param name="sender">触发对象</param>
            <param name="value">数值</param>
        </member>
        <member name="T:AntdUI.TAlign">
            <summary>
            方向
            </summary>
        </member>
        <member name="F:AntdUI.TAlign.None">
            <summary>
            无
            </summary>
        </member>
        <member name="F:AntdUI.TAlign.TL">
            <summary>
            ↖ 上左
            </summary>
        </member>
        <member name="F:AntdUI.TAlign.Top">
            <summary>
            ↑上
            </summary>
        </member>
        <member name="F:AntdUI.TAlign.TR">
            <summary>
            ↗ 上右
            </summary>
        </member>
        <member name="F:AntdUI.TAlign.RT">
            <summary>
            ↗ 右上
            </summary>
        </member>
        <member name="F:AntdUI.TAlign.Right">
            <summary>
            → 右
            </summary>
        </member>
        <member name="F:AntdUI.TAlign.RB">
            <summary>
            ↘ 右下
            </summary>
        </member>
        <member name="F:AntdUI.TAlign.BR">
            <summary>
            ↘ 下右
            </summary>
        </member>
        <member name="F:AntdUI.TAlign.Bottom">
            <summary>
            ↓ 下
            </summary>
        </member>
        <member name="F:AntdUI.TAlign.BL">
            <summary>
            ↙ 下左
            </summary>
        </member>
        <member name="F:AntdUI.TAlign.LB">
            <summary>
            ↙ 左下
            </summary>
        </member>
        <member name="F:AntdUI.TAlign.Left">
            <summary>
            ← 左
            </summary>
        </member>
        <member name="F:AntdUI.TAlign.LT">
            <summary>
            ↖ 左上
            </summary>
        </member>
        <member name="T:AntdUI.TAlignMini">
            <summary>
            大致方向
            </summary>
        </member>
        <member name="F:AntdUI.TAlignMini.None">
            <summary>
            无
            </summary>
        </member>
        <member name="F:AntdUI.TAlignMini.Top">
            <summary>
            ↑上
            </summary>
        </member>
        <member name="F:AntdUI.TAlignMini.Right">
            <summary>
            → 右
            </summary>
        </member>
        <member name="F:AntdUI.TAlignMini.Bottom">
            <summary>
            ↓ 下
            </summary>
        </member>
        <member name="F:AntdUI.TAlignMini.Left">
            <summary>
            ← 左
            </summary>
        </member>
        <member name="T:AntdUI.TAlignFrom">
            <summary>
            方向
            </summary>
        </member>
        <member name="F:AntdUI.TAlignFrom.TL">
            <summary>
            ↖ 上左
            </summary>
        </member>
        <member name="F:AntdUI.TAlignFrom.Top">
            <summary>
            ↑上
            </summary>
        </member>
        <member name="F:AntdUI.TAlignFrom.TR">
            <summary>
            ↗ 上右
            </summary>
        </member>
        <member name="F:AntdUI.TAlignFrom.BR">
            <summary>
            ↘ 下右
            </summary>
        </member>
        <member name="F:AntdUI.TAlignFrom.Bottom">
            <summary>
            ↓ 下
            </summary>
        </member>
        <member name="F:AntdUI.TAlignFrom.BL">
            <summary>
            ↙ 下左
            </summary>
        </member>
        <member name="T:AntdUI.TAlignFlow">
            <summary>
            Flow方向
            </summary>
        </member>
        <member name="F:AntdUI.TAlignFlow.LeftCenter">
            <summary>
            ← 左中
            </summary>
        </member>
        <member name="F:AntdUI.TAlignFlow.Left">
            <summary>
            ← 左
            </summary>
        </member>
        <member name="F:AntdUI.TAlignFlow.Center">
            <summary>
            中
            </summary>
        </member>
        <member name="F:AntdUI.TAlignFlow.RightCenter">
            <summary>
            → 右中
            </summary>
        </member>
        <member name="F:AntdUI.TAlignFlow.Right">
            <summary>
            → 右
            </summary>
        </member>
        <member name="F:AntdUI.TFit.Fill">
            <summary>
            调整替换后的内容大小，以填充元素的内容框。如有必要，将拉伸或挤压物体以适应该对象
            </summary>
        </member>
        <member name="F:AntdUI.TFit.Contain">
            <summary>
            缩放替换后的内容以保持其纵横比，同时将其放入元素的内容框
            </summary>
        </member>
        <member name="F:AntdUI.TFit.Cover">
            <summary>
            调整替换内容的大小，以在填充元素的整个内容框时保持其长宽比。该对象将被裁剪以适应
            </summary>
        </member>
        <member name="F:AntdUI.TFit.None">
            <summary>
            不对替换的内容调整大小
            </summary>
        </member>
        <member name="T:AntdUI.TMenuMode">
            <summary>
            菜单模式
            </summary>
        </member>
        <member name="F:AntdUI.TMenuMode.Inline">
            <summary>
            内嵌模式
            </summary>
        </member>
        <member name="F:AntdUI.TMenuMode.Vertical">
            <summary>
            垂直模式
            </summary>
        </member>
        <member name="F:AntdUI.TMenuMode.Horizontal">
            <summary>
            水平模式
            </summary>
        </member>
        <member name="T:AntdUI.TMode">
            <summary>
            模式
            </summary>
        </member>
        <member name="F:AntdUI.TMode.Light">
            <summary>
            浅色模式
            </summary>
        </member>
        <member name="F:AntdUI.TMode.Dark">
            <summary>
            深色模式
            </summary>
        </member>
        <member name="T:AntdUI.TAMode">
            <summary>
            模式
            </summary>
        </member>
        <member name="F:AntdUI.TAMode.Auto">
            <summary>
            自动
            </summary>
        </member>
        <member name="F:AntdUI.TAMode.Light">
            <summary>
            浅色模式
            </summary>
        </member>
        <member name="F:AntdUI.TAMode.Dark">
            <summary>
            深色模式
            </summary>
        </member>
        <member name="T:AntdUI.TOrientation">
            <summary>
            分割线文字方向
            </summary>
        </member>
        <member name="F:AntdUI.TOrientation.None">
            <summary>
            无
            </summary>
        </member>
        <member name="F:AntdUI.TOrientation.Left">
            <summary>
            ← 左
            </summary>
        </member>
        <member name="F:AntdUI.TOrientation.Right">
            <summary>
            → 右
            </summary>
        </member>
        <member name="T:AntdUI.Trigger">
            <summary>
            交互行为
            </summary>
        </member>
        <member name="F:AntdUI.Trigger.Click">
            <summary>
            点击
            </summary>
        </member>
        <member name="F:AntdUI.Trigger.Hover">
            <summary>
            悬浮
            </summary>
        </member>
        <member name="F:AntdUI.TShape.Default">
            <summary>
            默认
            </summary>
        </member>
        <member name="F:AntdUI.TShape.Circle">
            <summary>
            圆形
            </summary>
        </member>
        <member name="F:AntdUI.TShape.Round">
            <summary>
            圆角
            </summary>
        </member>
        <member name="T:AntdUI.TStepState">
            <summary>
            步骤状态
            </summary>
        </member>
        <member name="P:AntdUI.BaseForm.Dark">
            <summary>
            深色模式
            </summary>
        </member>
        <member name="P:AntdUI.BaseForm.Mode">
            <summary>
            色彩模式
            </summary>
        </member>
        <member name="M:AntdUI.BaseForm.Min">
            <summary>
            最小化
            </summary>
        </member>
        <member name="M:AntdUI.BaseForm.MaxRestore">
            <summary>
            最大化/还原
            </summary>
        </member>
        <member name="M:AntdUI.BaseForm.Max">
            <summary>
            最大化
            </summary>
        </member>
        <member name="M:AntdUI.BaseForm.FullRestore">
            <summary>
            全屏/还原
            </summary>
        </member>
        <member name="M:AntdUI.BaseForm.Full">
            <summary>
            全屏
            </summary>
        </member>
        <member name="M:AntdUI.BaseForm.DraggableMouseDown">
            <summary>
            拖动窗口（鼠标按下）
            </summary>
        </member>
        <member name="M:AntdUI.BaseForm.ResizableMouseMove">
            <summary>
            调整窗口大小（鼠标移动）
            </summary>
            <returns>可以调整</returns>
        </member>
        <member name="M:AntdUI.BaseForm.ResizableMouseMove(System.Drawing.Point)">
            <summary>
            调整窗口大小（鼠标移动）
            </summary>
            <param name="point">客户端坐标</param>
            <returns>可以调整</returns>
        </member>
        <member name="M:AntdUI.BaseForm.ResizableMouseDown">
            <summary>
            整窗口大小（鼠标按下）
            </summary>
            <returns>可以调整</returns>
        </member>
        <member name="P:AntdUI.BorderlessForm.Shadow">
            <summary>
            阴影大小
            </summary>
        </member>
        <member name="P:AntdUI.BorderlessForm.ShadowColor">
            <summary>
            阴影颜色
            </summary>
        </member>
        <member name="P:AntdUI.BorderlessForm.BorderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="P:AntdUI.BorderlessForm.Radius">
            <summary>
            圆角
            </summary>
        </member>
        <member name="M:AntdUI.BorderlessForm.SetReion">
            <summary>
            窗体圆角
            </summary>
        </member>
        <member name="M:AntdUI.BorderlessForm.DraggableMouseDown">
            <summary>
            拖动窗口（鼠标按下）
            </summary>
        </member>
        <member name="M:AntdUI.BorderlessForm.ResizableMouseMove">
            <summary>
            调整窗口大小（鼠标移动）
            </summary>
            <returns>可以调整</returns>
        </member>
        <member name="M:AntdUI.BorderlessForm.ResizableMouseMove(System.Drawing.Point)">
            <summary>
            调整窗口大小（鼠标移动）
            </summary>
            <param name="point">客户端坐标</param>
            <returns>可以调整</returns>
        </member>
        <member name="M:AntdUI.BorderlessForm.MaxRestore">
            <summary>
            最大化/还原
            </summary>
        </member>
        <member name="M:AntdUI.BorderlessForm.Max">
            <summary>
            最大化
            </summary>
        </member>
        <member name="M:AntdUI.BorderlessForm.FullRestore">
            <summary>
            全屏/还原
            </summary>
        </member>
        <member name="M:AntdUI.BorderlessForm.Full">
            <summary>
            全屏
            </summary>
        </member>
        <member name="P:AntdUI.ILayeredForm.MessageClose">
            <summary>
            是否点击外面关闭
            </summary>
        </member>
        <member name="P:AntdUI.ILayeredForm.TargetRect">
            <summary>
            目标区域
            </summary>
        </member>
        <member name="F:AntdUI.LayeredFormCalendar.action">
            <summary>
            回调
            </summary>
        </member>
        <member name="M:AntdUI.LayeredFormCalendar.PrintYear(System.Drawing.Graphics,System.Drawing.Rectangle,System.Collections.Generic.List{AntdUI.Calendari})">
            <summary>
            渲染年模式
            </summary>
            <param name="g">GDI</param>
            <param name="rect_read">真实区域</param>
            <param name="datas">数据</param>
        </member>
        <member name="M:AntdUI.LayeredFormCalendar.PrintMonth(System.Drawing.Graphics,System.Drawing.Rectangle,System.Collections.Generic.List{AntdUI.Calendari})">
            <summary>
            渲染月模式
            </summary>
            <param name="g">GDI</param>
            <param name="rect_read">真实区域</param>
            <param name="datas">数据</param>
        </member>
        <member name="M:AntdUI.LayeredFormCalendar.PrintDay(System.Drawing.Graphics,System.Drawing.Rectangle,System.Collections.Generic.List{AntdUI.Calendari})">
            <summary>
            渲染天模式
            </summary>
            <param name="g">GDI</param>
            <param name="rect_read">真实区域</param>
            <param name="datas">数据</param>
        </member>
        <member name="M:AntdUI.LayeredFormCalendar.DrawShadow(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            绘制阴影
            </summary>
            <param name="g">GDI</param>
            <param name="rect_client">客户区域</param>
            <param name="shadow_width">最终阴影宽度</param>
            <param name="shadow_height">最终阴影高度</param>
        </member>
        <member name="F:AntdUI.LayeredFormCalendarRange.action">
            <summary>
            回调
            </summary>
        </member>
        <member name="M:AntdUI.LayeredFormCalendarRange.PrintYear(System.Drawing.Graphics,System.Drawing.Rectangle,System.Collections.Generic.List{AntdUI.Calendari})">
            <summary>
            渲染年模式
            </summary>
            <param name="g">GDI</param>
            <param name="rect_read">真实区域</param>
            <param name="datas">数据</param>
        </member>
        <member name="M:AntdUI.LayeredFormCalendarRange.PrintMonth(System.Drawing.Graphics,System.Drawing.Rectangle,System.Collections.Generic.List{AntdUI.Calendari})">
            <summary>
            渲染月模式
            </summary>
            <param name="g">GDI</param>
            <param name="rect_read">真实区域</param>
            <param name="datas">数据</param>
        </member>
        <member name="M:AntdUI.LayeredFormCalendarRange.PrintDay(System.Drawing.Graphics,System.Drawing.Rectangle,System.Collections.Generic.List{AntdUI.Calendari},System.Collections.Generic.List{AntdUI.Calendari})">
            <summary>
            渲染天模式
            </summary>
            <param name="g">GDI</param>
            <param name="rect_read">真实区域</param>
            <param name="datas">数据</param>
        </member>
        <member name="M:AntdUI.LayeredFormCalendarRange.PrintCalendar(System.Drawing.Graphics,System.Drawing.Brush,System.Drawing.Brush,System.Drawing.Brush,System.Drawing.Brush,System.Drawing.Brush,System.Drawing.Brush,System.Collections.Generic.List{AntdUI.Calendari})">
            <summary>
            渲染日期面板
            </summary>
            <param name="g">GDI</param>
            <param name="brush_fore">文字颜色</param>
            <param name="brush_fore_disable">文字禁用颜色</param>
            <param name="brush_bg_disable">背景禁用颜色</param>
            <param name="brush_bg_active">激活主题色</param>
            <param name="brush_bg_activebg">激活背景色</param>
            <param name="brush_fore_active">激活字体色</param>
            <param name="datas">DATA</param>
        </member>
        <member name="M:AntdUI.LayeredFormCalendarRange.DrawShadow(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            绘制阴影
            </summary>
            <param name="g">GDI</param>
            <param name="rect_client">客户区域</param>
            <param name="shadow_width">最终阴影宽度</param>
            <param name="shadow_height">最终阴影高度</param>
        </member>
        <member name="F:AntdUI.LayeredFormCalendarTime.action">
            <summary>
            回调
            </summary>
        </member>
        <member name="M:AntdUI.LayeredFormCalendarTime.DrawShadow(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            绘制阴影
            </summary>
            <param name="g">GDI</param>
            <param name="rect_client">客户区域</param>
            <param name="shadow_width">最终阴影宽度</param>
            <param name="shadow_height">最终阴影高度</param>
        </member>
        <member name="F:AntdUI.LayeredFormCalendarTimeRange.action">
            <summary>
            回调
            </summary>
        </member>
        <member name="M:AntdUI.LayeredFormCalendarTimeRange.PrintYear(System.Drawing.Graphics,System.Drawing.Rectangle,System.Collections.Generic.List{AntdUI.Calendari})">
            <summary>
            渲染年模式
            </summary>
            <param name="g">GDI</param>
            <param name="rect_read">真实区域</param>
            <param name="datas">数据</param>
        </member>
        <member name="M:AntdUI.LayeredFormCalendarTimeRange.PrintMonth(System.Drawing.Graphics,System.Drawing.Rectangle,System.Collections.Generic.List{AntdUI.Calendari})">
            <summary>
            渲染月模式
            </summary>
            <param name="g">GDI</param>
            <param name="rect_read">真实区域</param>
            <param name="datas">数据</param>
        </member>
        <member name="M:AntdUI.LayeredFormCalendarTimeRange.PrintDay(System.Drawing.Graphics,System.Drawing.Rectangle,System.Collections.Generic.List{AntdUI.Calendari})">
            <summary>
            渲染天模式
            </summary>
            <param name="g">GDI</param>
            <param name="rect_read">真实区域</param>
            <param name="datas">数据</param>
        </member>
        <member name="M:AntdUI.LayeredFormCalendarTimeRange.DrawShadow(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            绘制阴影
            </summary>
            <param name="g">GDI</param>
            <param name="rect_client">客户区域</param>
            <param name="shadow_width">最终阴影宽度</param>
            <param name="shadow_height">最终阴影高度</param>
        </member>
        <member name="M:AntdUI.LayeredFormColorPicker.DrawShadow(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            绘制阴影
            </summary>
            <param name="g">GDI</param>
            <param name="rect_client">客户区域</param>
            <param name="shadow_width">最终阴影宽度</param>
            <param name="shadow_height">最终阴影高度</param>
        </member>
        <member name="M:AntdUI.LayeredFormContextMenuStrip.DrawShadow(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.RectangleF)">
            <summary>
            绘制阴影
            </summary>
            <param name="g">GDI</param>
            <param name="rect_client">客户区域</param>
            <param name="rect_read">真实区域</param>
        </member>
        <member name="M:AntdUI.LayeredFormDrawer.DrawShadow(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            绘制阴影
            </summary>
            <param name="g">GDI</param>
            <param name="rect">客户区域</param>
        </member>
        <member name="M:AntdUI.LayeredFormFloatButton.DrawShadow(System.Drawing.Graphics,AntdUI.FloatButton.ConfigBtn)">
            <summary>
            绘制阴影
            </summary>
            <param name="g">GDI</param>
        </member>
        <member name="F:AntdUI.LayeredFormMenuDown.nodata">
            <summary>
            是否显示暂无数据
            </summary>
        </member>
        <member name="M:AntdUI.LayeredFormMenuDown.DrawShadow(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            绘制阴影
            </summary>
            <param name="g">GDI</param>
            <param name="rect_client">客户区域</param>
            <param name="shadow_width">最终阴影宽度</param>
            <param name="shadow_height">最终阴影高度</param>
        </member>
        <member name="P:AntdUI.LayeredFormMenuDown.OMenuItem.Sub">
            <summary>
            子选项
            </summary>
        </member>
        <member name="M:AntdUI.LayeredFormPopover.DrawShadow(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.RectangleF)">
            <summary>
            绘制阴影
            </summary>
            <param name="g">GDI</param>
            <param name="rect_client">客户区域</param>
            <param name="rect_read">真实区域</param>
        </member>
        <member name="F:AntdUI.LayeredFormSelectDown.nodata">
            <summary>
            是否显示暂无数据
            </summary>
        </member>
        <member name="M:AntdUI.LayeredFormSelectDown.DrawShadow(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            绘制阴影
            </summary>
            <param name="g">GDI</param>
            <param name="rect_client">客户区域</param>
            <param name="shadow_width">最终阴影宽度</param>
            <param name="shadow_height">最终阴影高度</param>
        </member>
        <member name="F:AntdUI.LayeredFormSelectMultiple.nodata">
            <summary>
            是否显示暂无数据
            </summary>
        </member>
        <member name="M:AntdUI.LayeredFormSelectMultiple.DrawShadow(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            绘制阴影
            </summary>
            <param name="g">GDI</param>
            <param name="rect_client">客户区域</param>
            <param name="shadow_width">最终阴影宽度</param>
            <param name="shadow_height">最终阴影高度</param>
        </member>
        <member name="P:AntdUI.Window.Location">
            <summary>
            获取或设置窗体的位置
            </summary>
        </member>
        <member name="P:AntdUI.Window.Top">
            <summary>
            控件的顶部坐标
            </summary>
        </member>
        <member name="P:AntdUI.Window.Left">
            <summary>
            控件的左侧坐标
            </summary>
        </member>
        <member name="P:AntdUI.Window.Right">
            <summary>
            控件的右坐标
            </summary>
        </member>
        <member name="P:AntdUI.Window.Bottom">
            <summary>
            控件的底部坐标
            </summary>
        </member>
        <member name="P:AntdUI.Window.Size">
            <summary>
            获取或设置窗体的大小
            </summary>
        </member>
        <member name="P:AntdUI.Window.Width">
            <summary>
            控件的宽度
            </summary>
        </member>
        <member name="P:AntdUI.Window.Height">
            <summary>
            控件的高度
            </summary>
        </member>
        <member name="P:AntdUI.Window.ScreenRectangle">
            <summary>
            获取或设置窗体屏幕区域
            </summary>
        </member>
        <member name="M:AntdUI.Window.ResizableMouseMove">
            <summary>
            调整窗口大小（鼠标移动）
            </summary>
            <returns>可以调整</returns>
        </member>
        <member name="M:AntdUI.Window.ResizableMouseMove(System.Drawing.Point)">
            <summary>
            调整窗口大小（鼠标移动）
            </summary>
            <param name="point">客户端坐标</param>
            <returns>可以调整</returns>
        </member>
        <member name="T:AntdUI.Animation">
            <summary>
            动画
            </summary>
        </member>
        <member name="M:AntdUI.Animation.TotalFrames(System.Int32,System.Int32)">
            <summary>
            返回总帧数
            </summary>
            <param name="interval">动画间隔</param>
            <param name="lastTime">动画时长（ms）</param>
            <returns>动画总帧数</returns>
        </member>
        <member name="M:AntdUI.Animation.Animate(System.Double,System.Double,System.Single,AntdUI.AnimationType)">
            <summary>
            执行动画
            </summary>
            <param name="currentFrames">当前帧</param>
            <param name="totalFrames">总帧</param>
            <param name="maxValue">最大值</param>
            <param name="type">动画类型</param>
            <returns>当前数值</returns>
        </member>
        <member name="M:AntdUI.Animation.Animate(System.Double,System.Single,AntdUI.AnimationType)">
            <summary>
            执行动画
            </summary>
            <param name="progress">帧进度</param>
            <param name="maxValue">最大值</param>
            <param name="type">动画类型</param>
            <returns>当前数值</returns>
        </member>
        <member name="T:AntdUI.AnimationType">
            <summary>
            动画类型
            </summary>
        </member>
        <member name="F:AntdUI.AnimationType.Liner">
            <summary>
            以同一速度移动
            </summary>
        </member>
        <member name="F:AntdUI.AnimationType.Ease">
            <summary>
            逐渐减速
            </summary>
        </member>
        <member name="F:AntdUI.AnimationType.Ball">
            <summary>
            加速并减速
            </summary>
        </member>
        <member name="F:AntdUI.AnimationType.Resilience">
            <summary>
            弹性一样的动画
            </summary>
        </member>
        <member name="T:AntdUI.Config">
            <summary>
            全局配置
            </summary>
        </member>
        <member name="P:AntdUI.Config.Mode">
            <summary>
            色彩模式
            </summary>
        </member>
        <member name="P:AntdUI.Config.Animation">
            <summary>
            启用动画
            </summary>
        </member>
        <member name="P:AntdUI.Config.ShadowEnabled">
            <summary>
            阴影使能
            </summary>
        </member>
        <member name="P:AntdUI.Config.ShowInWindow">
            <summary>
            弹出是否在窗口里而不是在系统里（Message/Notification）
            </summary>
        </member>
        <member name="P:AntdUI.Config.NoticeWindowOffsetXY">
            <summary>
            通知消息边界偏移量XY（Message/Notification）
            </summary>
        </member>
        <member name="P:AntdUI.Config.TextRenderingHint">
            <summary>
            文本呈现的质量
            </summary>
        </member>
        <member name="P:AntdUI.Config.Font">
            <summary>
            默认字体
            </summary>
        </member>
        <member name="P:AntdUI.Config.ScrollBarHide">
            <summary>
            滚动条隐藏样式
            </summary>
        </member>
        <member name="M:AntdUI.Config.SetDpi(System.Nullable{System.Single})">
            <summary>
            自定义DPI
            </summary>
            <param name="dpi">值</param>
        </member>
        <member name="T:AntdUI.IEventListener">
            <summary>
            事件监听者
            </summary>
        </member>
        <member name="F:AntdUI.EventType.DPI">
            <summary>
            DPI 改变
            </summary>
        </member>
        <member name="F:AntdUI.EventType.THEME">
            <summary>
            主题 改变
            </summary>
        </member>
        <member name="M:AntdUI.Helper.SF(System.Drawing.StringAlignment,System.Drawing.StringAlignment)">
            <summary>
            文本布局
            </summary>
            <param name="tb">垂直（上下）</param>
            <param name="lr">水平（前后）</param>
        </member>
        <member name="M:AntdUI.Helper.SF_NoWrap(System.Drawing.StringAlignment,System.Drawing.StringAlignment)">
            <summary>
            文本布局（不换行）
            </summary>
            <param name="tb">垂直（上下）</param>
            <param name="lr">水平（前后）</param>
        </member>
        <member name="M:AntdUI.Helper.SF_Ellipsis(System.Drawing.StringAlignment,System.Drawing.StringAlignment)">
            <summary>
            文本布局（超出省略号）
            </summary>
            <param name="tb">垂直（上下）</param>
            <param name="lr">水平（前后）</param>
        </member>
        <member name="M:AntdUI.Helper.SF_ALL(System.Drawing.StringAlignment,System.Drawing.StringAlignment)">
            <summary>
            文本布局（超出省略号+不换行）
            </summary>
            <param name="tb">垂直（上下）</param>
            <param name="lr">水平（前后）</param>
        </member>
        <member name="M:AntdUI.Helper.PaintIconCoreGhost(System.Drawing.Graphics,System.Drawing.RectangleF,System.String,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            绘制带圆背景的镂空图标
            </summary>
        </member>
        <member name="M:AntdUI.Helper.IconRect(System.Drawing.Rectangle,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Single,System.Single,System.Single)">
            <summary>
            得到容器标准坐标
            </summary>
            <param name="rect">区域</param>
            <param name="text_height">字体高度</param>
            <param name="icon_l">左边图标</param>
            <param name="icon_r">右边图标</param>
            <param name="right">左右翻转</param>
            <param name="muit">多选</param>
        </member>
        <member name="M:AntdUI.Helper.PaddingRect(System.Drawing.Rectangle,System.Windows.Forms.Padding,System.Single)">
            <summary>
            获取边距
            </summary>
            <param name="rect">区域</param>
            <param name="padding">边距</param>
            <param name="size">边框</param>
        </member>
        <member name="M:AntdUI.Helper.ReadRect(System.Drawing.Rectangle,System.Single,AntdUI.TShape,System.Boolean,System.Boolean)">
            <summary>
            得到真实渲染区域
            </summary>
            <param name="rect">容器区域</param>
            <param name="size">动画区域</param>
            <param name="shape">形状</param>
            <param name="joinLeft">连接左边</param>
            <param name="joinRight">连接右边</param>
        </member>
        <member name="M:AntdUI.Helper.ReadRect(System.Drawing.Rectangle,System.Single,System.Boolean,System.Boolean)">
            <summary>
            得到真实渲染区域
            </summary>
            <param name="rect">容器区域</param>
            <param name="size">动画区域</param>
            <param name="joinLeft">连接左边</param>
            <param name="joinRight">连接右边</param>
        </member>
        <member name="M:AntdUI.Helper.AlignMini(AntdUI.TAlign)">
            <summary>
            转换大致位置
            </summary>
            <param name="align">方向</param>
        </member>
        <member name="M:AntdUI.Helper.AlignMiniReverse(AntdUI.TAlign,System.Boolean)">
            <summary>
            转换反向大致位置
            </summary>
            <param name="align">方向</param>
            <param name="vertical">是否竖向</param>
        </member>
        <member name="M:AntdUI.Helper.AlignLines(AntdUI.TAlign,System.Single,System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            得到三角绘制区域
            </summary>
            <param name="align">方向</param>
            <param name="arrow_size">三角大小</param>
            <param name="rect">全局区域</param>
            <param name="rect_read">内容区域</param>
        </member>
        <member name="M:AntdUI.Helper.AlignPoint(AntdUI.TAlign,System.Drawing.Point,System.Drawing.Size,System.Int32,System.Int32)">
            <summary>
            弹出坐标
            </summary>
            <param name="align">方向</param>
            <param name="point">控件坐标</param>
            <param name="size">控件大小</param>
            <param name="width">提示框宽度</param>
            <param name="height">提示框高度</param>
        </member>
        <member name="M:AntdUI.Helper.RoundPath(System.Drawing.RectangleF,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            自定义圆角
            </summary>
            <param name="rect">区域</param>
            <param name="radius">圆角大小</param>
            <param name="TL">↖</param>
            <param name="TR">↗</param>
            <param name="BR">↘</param>
            <param name="BL">↙</param>
        </member>
        <member name="M:AntdUI.Helper.RoundPath(System.Drawing.Rectangle,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            自定义圆角
            </summary>
            <param name="rect">区域</param>
            <param name="radius">圆角大小</param>
            <param name="TL">↖</param>
            <param name="TR">↗</param>
            <param name="BR">↘</param>
            <param name="BL">↙</param>
        </member>
        <member name="M:AntdUI.Helper.Size(System.Drawing.SizeF)">
            <summary>
            SizeF转Size（向上取整）
            </summary>
            <param name="size">SizeF</param>
        </member>
        <member name="M:AntdUI.Helper.Size(System.Drawing.SizeF,System.Single)">
            <summary>
            SizeF转Size（向上取整）
            </summary>
            <param name="size">SizeF</param>
        </member>
        <member name="M:AntdUI.Helper.FormMask(System.Windows.Forms.Form)">
            <summary>
            叠加蒙版
            </summary>
            <param name="owner">父窗口</param>
        </member>
        <member name="M:AntdUI.Helper.FormMask(System.Windows.Forms.Form,System.Boolean,AntdUI.ILayeredForm)">
            <summary>
            叠加蒙版（可关闭）
            </summary>
            <param name="owner">父窗口</param>
            <param name="MaskClosable">点击蒙层是否允许关闭</param>
            <param name="form">操作对象</param>
        </member>
        <member name="M:AntdUI.Helper.FormMask(System.Windows.Forms.Form,System.Boolean,System.Windows.Forms.Form)">
            <summary>
            叠加蒙版（可关闭）
            </summary>
            <param name="owner">父窗口</param>
            <param name="MaskClosable">点击蒙层是否允许关闭</param>
            <param name="form">操作对象</param>
        </member>
        <member name="M:AntdUI.ITask.#ctor(System.Windows.Forms.Control,System.Func{System.Int32,System.Boolean},System.Int32,System.Int32,System.Int32,System.Action)">
            <summary>
            循环任务
            </summary>
            <param name="action">回调</param>
            <param name="interval">间隔</param>
            <param name="max">最大值</param>
            <param name="add">更新量</param>
        </member>
        <member name="M:AntdUI.Pinyin.GetInitials(System.String)">
            <summary>
            取中文文本的拼音首字母
            </summary>
            <param name="text">编码为UTF8的文本</param>
            <returns>返回中文对应的拼音首字母</returns>
        </member>
        <member name="M:AntdUI.Pinyin.GetInitials(System.String,System.Text.Encoding)">
            <summary>
            取中文文本的拼音首字母
            </summary>
            <param name="text">文本</param>
            <param name="encoding">源文本的编码</param>
            <returns>返回encoding编码类型中文对应的拼音首字母</returns>
        </member>
        <member name="M:AntdUI.Pinyin.GetPinyin(System.String)">
            <summary>
            取中文文本的拼音
            </summary>
            <param name="text">编码为UTF8的文本</param>
            <returns>返回中文文本的拼音</returns>
        </member>
        <member name="M:AntdUI.Pinyin.GetPinyin(System.String,System.Text.Encoding)">
            <summary>
            取中文文本的拼音
            </summary>
            <param name="text">编码为UTF8的文本</param>
            <param name="encoding">源文本的编码</param>
            <returns>返回encoding编码类型的中文文本的拼音</returns>
        </member>
        <member name="M:AntdUI.Pinyin.GetChineseText(System.String)">
            <summary>
            取和拼音相同的汉字列表
            </summary>
            <param name="Pinyin">编码为UTF8的拼音</param>
            <returns>取拼音相同的汉字列表，如拼音“ai”将会返回“唉爱……”等</returns>
        </member>
        <member name="M:AntdUI.Pinyin.GetChineseText(System.String,System.Text.Encoding)">
            <summary>
            取和拼音相同的汉字列表，编码同参数encoding
            </summary>
            <param name="Pinyin">编码为encoding的拼音</param>
            <param name="encoding">编码</param>
            <returns>返回编码为encoding的拼音为pinyin的汉字列表，如拼音“ai”将会返回“唉爱……”等</returns>
        </member>
        <member name="M:AntdUI.Pinyin.GetPinyin(System.Char)">
            <summary>
            返回单个字符的汉字拼音
            </summary>
            <param name="ch">编码为UTF8的中文字符</param>
            <returns>ch对应的拼音</returns>
        </member>
        <member name="M:AntdUI.Pinyin.GetPinyin(System.Char,System.Text.Encoding)">
            <summary>
            返回单个字符的汉字拼音
            </summary>
            <param name="ch">编码为encoding的中文字符</param>
            <returns>编码为encoding的ch对应的拼音</returns>
        </member>
        <member name="M:AntdUI.Pinyin.ConvertEncoding(System.String,System.Text.Encoding,System.Text.Encoding)">
            <summary>
            转换编码 
            </summary>
            <param name="text">文本</param>
            <param name="srcEncoding">源编码</param>
            <param name="dstEncoding">目标编码</param>
            <returns>目标编码文本</returns>
        </member>
        <member name="M:AntdUI.Pinyin.GetHashIndex(System.Char)">
            <summary>
            取文本索引值
            </summary>
            <param name="ch">字符</param>
            <returns>文本索引值</returns>
        </member>
        <member name="M:AntdUI.SvgExtend.SvgToBmp(System.String,System.Int32,System.Int32,System.Nullable{System.Drawing.Color})">
            <summary>
            SVG转图片
            </summary>
            <param name="svg">代码</param>
            <param name="width">宽</param>
            <param name="height">高</param>
            <param name="color">颜色</param>
            <returns>Bitmap</returns>
        </member>
        <member name="M:AntdUI.SvgExtend.SvgToBmp(System.String)">
            <summary>
            SVG转图片
            </summary>
            <param name="svg">代码</param>
            <returns>Bitmap</returns>
        </member>
        <member name="T:AntdUI.Svg.SvgCircle">
            <summary>
            An SVG element to render circles to the document.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgCircle.Center">
            <summary>
            Gets the center point of the circle.
            </summary>
            <value>The center.</value>
        </member>
        <member name="M:AntdUI.Svg.SvgCircle.Path(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Gets the <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> representing this element.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgCircle.Render(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Renders the circle using the specified <see cref="T:AntdUI.Svg.ISvgRenderer"/> object.
            </summary>
            <param name="renderer">The renderer object.</param>
        </member>
        <member name="T:AntdUI.Svg.SvgEllipse">
            <summary>
            Represents and SVG ellipse element.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgEllipse.Path(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Gets the <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for this element.
            </summary>
            <value></value>
        </member>
        <member name="M:AntdUI.Svg.SvgEllipse.Render(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Renders the <see cref="T:AntdUI.Svg.SvgElement"/> and contents using the specified <see cref="T:AntdUI.Svg.ISvgRenderer"/> object.
            </summary>
            <param name="renderer">The <see cref="T:AntdUI.Svg.ISvgRenderer"/> object used for rendering.</param>
        </member>
        <member name="T:AntdUI.Svg.SvgLine">
            <summary>
            Represents and SVG line element.
            </summary>
        </member>
        <member name="T:AntdUI.Svg.SvgMarkerElement">
            <summary>
            Represents a path based element that can have markers.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgMarkerElement.MarkerEnd">
            <summary>
            Gets or sets the marker (end cap) of the path.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgMarkerElement.MarkerMid">
            <summary>
            Gets or sets the marker (mid points) of the path.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgMarkerElement.MarkerStart">
            <summary>
            Gets or sets the marker (start cap) of the path.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgMarkerElement.RenderStroke(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Renders the stroke of the element to the specified <see cref="T:AntdUI.Svg.ISvgRenderer"/>.
            Includes rendering of all markers defined in attributes.
            </summary>
            <param name="renderer">The <see cref="T:AntdUI.Svg.ISvgRenderer"/> object to render to.</param>
        </member>
        <member name="T:AntdUI.Svg.SvgPathBasedElement">
            <summary>
            Represents an element that is using a GraphicsPath as rendering base.
            </summary>
        </member>
        <member name="T:AntdUI.Svg.SvgPolygon">
            <summary>
            SvgPolygon defines a closed shape consisting of a set of connected straight line segments.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgPolygon.Points">
            <summary>
            The points that make up the SvgPolygon
            </summary>
        </member>
        <member name="T:AntdUI.Svg.SvgPolyline">
            <summary>
            SvgPolyline defines a set of connected straight line segments. Typically, <see cref="T:AntdUI.Svg.SvgPolyline"/> defines open shapes.
            </summary>
        </member>
        <member name="T:AntdUI.Svg.SvgRectangle">
            <summary>
            Represents an SVG rectangle that could also have rounded edges.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgRectangle.Location">
            <summary>
            Gets an <see cref="T:AntdUI.Svg.SvgPoint"/> representing the top left point of the rectangle.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgRectangle.X">
            <summary>
            Gets or sets the position where the left point of the rectangle should start.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgRectangle.Y">
            <summary>
            Gets or sets the position where the top point of the rectangle should start.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgRectangle.Width">
            <summary>
            Gets or sets the width of the rectangle.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgRectangle.Height">
            <summary>
            Gets or sets the height of the rectangle.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgRectangle.CornerRadiusX">
            <summary>
            Gets or sets the X-radius of the rounded edges of this rectangle.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgRectangle.CornerRadiusY">
            <summary>
            Gets or sets the Y-radius of the rounded edges of this rectangle.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgRectangle.RequiresSmoothRendering">
            <summary>
            Gets or sets a value to determine if anti-aliasing should occur when the element is being rendered.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgRectangle.Path(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Gets the <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for this element.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgRectangle.Render(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Renders the <see cref="T:AntdUI.Svg.SvgElement"/> and contents to the specified <see cref="T:System.Drawing.Graphics"/> object.
            </summary>
        </member>
        <member name="T:AntdUI.Svg.SvgVisualElement">
            <summary>
            The class that all SVG elements should derive from when they are to be rendered.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgVisualElement.Path(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Gets the <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for this element.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgVisualElement.Bounds">
            <summary>
            Gets the bounds of the element.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="P:AntdUI.Svg.SvgVisualElement.Clip">
            <summary>
            Gets the associated <see cref="T:AntdUI.Svg.SvgClipPath"/> if one has been specified.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgVisualElement.ClipPath">
            <summary>
            Gets the associated <see cref="T:AntdUI.Svg.SvgClipPath"/> if one has been specified.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgVisualElement.ClipRule">
            <summary>
            Gets or sets the algorithm which is to be used to determine the clipping region.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgVisualElement.Filter">
            <summary>
            Gets the associated <see cref="T:AntdUI.Svg.SvgClipPath"/> if one has been specified.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgVisualElement.RequiresSmoothRendering">
            <summary>
            Gets or sets a value to determine if anti-aliasing should occur when the element is being rendered.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgVisualElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AntdUI.Svg.SvgVisualElement"/> class.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgVisualElement.Render(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Renders the <see cref="T:AntdUI.Svg.SvgElement"/> and contents to the specified <see cref="T:System.Drawing.Graphics"/> object.
            </summary>
            <param name="renderer">The <see cref="T:AntdUI.Svg.ISvgRenderer"/> object to render to.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgVisualElement.RenderFill(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Renders the fill of the <see cref="T:AntdUI.Svg.SvgVisualElement"/> to the specified <see cref="T:AntdUI.Svg.ISvgRenderer"/>
            </summary>
            <param name="renderer">The <see cref="T:AntdUI.Svg.ISvgRenderer"/> object to render to.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgVisualElement.RenderStroke(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Renders the stroke of the <see cref="T:AntdUI.Svg.SvgVisualElement"/> to the specified <see cref="T:AntdUI.Svg.ISvgRenderer"/>
            </summary>
            <param name="renderer">The <see cref="T:AntdUI.Svg.ISvgRenderer"/> object to render to.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgVisualElement.SetClip(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Sets the clipping region of the specified <see cref="T:AntdUI.Svg.ISvgRenderer"/>.
            </summary>
            <param name="renderer">The <see cref="T:AntdUI.Svg.ISvgRenderer"/> to have its clipping region set.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgVisualElement.ResetClip(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Resets the clipping region of the specified <see cref="T:AntdUI.Svg.ISvgRenderer"/> back to where it was before the <see cref="M:AntdUI.Svg.SvgVisualElement.SetClip(AntdUI.Svg.ISvgRenderer)"/> method was called.
            </summary>
            <param name="renderer">The <see cref="T:AntdUI.Svg.ISvgRenderer"/> to have its clipping region reset.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgVisualElement.AntdUI#Svg#ISvgClipable#SetClip(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Sets the clipping region of the specified <see cref="T:AntdUI.Svg.ISvgRenderer"/>.
            </summary>
            <param name="renderer">The <see cref="T:AntdUI.Svg.ISvgRenderer"/> to have its clipping region set.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgVisualElement.AntdUI#Svg#ISvgClipable#ResetClip(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Resets the clipping region of the specified <see cref="T:AntdUI.Svg.ISvgRenderer"/> back to where it was before the <see cref="M:AntdUI.Svg.SvgVisualElement.SetClip(AntdUI.Svg.ISvgRenderer)"/> method was called.
            </summary>
            <param name="renderer">The <see cref="T:AntdUI.Svg.ISvgRenderer"/> to have its clipping region reset.</param>
        </member>
        <member name="P:AntdUI.Svg.SvgVisualElement.Visible">
            <summary>
            Gets or sets a value to determine whether the element will be rendered.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgVisualElement.Display">
            <summary>
            Gets or sets a value to determine whether the element will be rendered.
            Needed to support SVG attribute display="none"
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgVisualElement.EnableBackground">
            <summary>
            Gets or sets the fill <see cref="T:AntdUI.Svg.SvgPaintServer"/> of this element.
            </summary>
        </member>
        <member name="T:AntdUI.Svg.ISvgClipable">
            <summary>
            Defines the methods and properties that an <see cref="T:AntdUI.Svg.SvgElement"/> must implement to support clipping.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.ISvgClipable.ClipPath">
            <summary>
            Gets or sets the ID of the associated <see cref="T:AntdUI.Svg.SvgClipPath"/> if one has been specified.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.ISvgClipable.ClipRule">
            <summary>
            Specifies the rule used to define the clipping region when the element is within a <see cref="T:AntdUI.Svg.SvgClipPath"/>.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.ISvgClipable.SetClip(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Sets the clipping region of the specified <see cref="T:AntdUI.Svg.ISvgRenderer"/>.
            </summary>
            <param name="renderer">The <see cref="T:AntdUI.Svg.ISvgRenderer"/> to have its clipping region set.</param>
        </member>
        <member name="M:AntdUI.Svg.ISvgClipable.ResetClip(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Resets the clipping region of the specified <see cref="T:AntdUI.Svg.ISvgRenderer"/> back to where it was before the <see cref="M:AntdUI.Svg.ISvgClipable.SetClip(AntdUI.Svg.ISvgRenderer)"/> method was called.
            </summary>
            <param name="renderer">The <see cref="T:AntdUI.Svg.ISvgRenderer"/> to have its clipping region reset.</param>
        </member>
        <member name="T:AntdUI.Svg.SvgClipPath">
            <summary>
            Defines a path that can be used by other <see cref="T:AntdUI.Svg.ISvgClipable"/> elements.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgClipPath.ClipPathUnits">
            <summary>
            Specifies the coordinate system for the clipping path.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgClipPath.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AntdUI.Svg.SvgClipPath"/> class.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgClipPath.GetClipRegion(AntdUI.Svg.SvgVisualElement)">
            <summary>
            Gets this <see cref="T:AntdUI.Svg.SvgClipPath"/>'s region to be used as a clipping region.
            </summary>
            <returns>A new <see cref="T:System.Drawing.Region"/> containing the <see cref="T:System.Drawing.Region"/> to be used for clipping.</returns>
        </member>
        <member name="M:AntdUI.Svg.SvgClipPath.CombinePaths(System.Drawing.Drawing2D.GraphicsPath,AntdUI.Svg.SvgElement)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <param name="element"></param>
        </member>
        <member name="M:AntdUI.Svg.SvgClipPath.AddElement(AntdUI.Svg.SvgElement,System.Int32)">
            <summary>
            Called by the underlying <see cref="T:AntdUI.Svg.SvgElement"/> when an element has been added to the
            'Children' collection.
            </summary>
            <param name="child">The <see cref="T:AntdUI.Svg.SvgElement"/> that has been added.</param>
            <param name="index">An <see cref="T:System.Int32"/> representing the index where the element was added to the collection.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgClipPath.RemoveElement(AntdUI.Svg.SvgElement)">
            <summary>
            Called by the underlying <see cref="T:AntdUI.Svg.SvgElement"/> when an element has been removed from the
            <see cref="P:AntdUI.Svg.SvgElement.Children"/> collection.
            </summary>
            <param name="child">The <see cref="T:AntdUI.Svg.SvgElement"/> that has been removed.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgClipPath.Render(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Renders the <see cref="T:AntdUI.Svg.SvgElement"/> and contents to the specified <see cref="T:AntdUI.Svg.ISvgRenderer"/> object.
            </summary>
            <param name="renderer">The <see cref="T:AntdUI.Svg.ISvgRenderer"/> object to render to.</param>
        </member>
        <member name="T:AntdUI.Svg.SvgClipRule">
            <summary>
            Indicates the algorithm which is to be used to determine the clipping region.
            </summary>
            <remarks>
                <para>This rule determines the "insideness" of a point on the canvas by drawing a ray from 
                that point to infinity in any direction and then examining the places where a segment of the 
                shape crosses the ray.</para>
            </remarks>
        </member>
        <member name="F:AntdUI.Svg.SvgClipRule.NonZero">
            <summary>
            This rule determines the "insideness" of a point on the canvas by drawing a ray from that point to infinity in any direction and then examining the places where a segment of the shape crosses the ray. Starting with a count of zero, add one each time a path segment crosses the ray from left to right and subtract one each time a path segment crosses the ray from right to left. After counting the crossings, if the result is zero then the point is outside  the path. Otherwise, it is inside.
            </summary>
        </member>
        <member name="F:AntdUI.Svg.SvgClipRule.EvenOdd">
            <summary>
            This rule determines the "insideness" of a point on the canvas by drawing a ray from that point to infinity in any direction and counting the number of path segments from the given shape that the ray crosses. If this number is odd, the point is inside; if even, the point is outside.
            </summary>
        </member>
        <member name="T:AntdUI.Svg.ISvgViewPort">
            <summary>
            Provides properties and methods to be implemented by view port elements.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.ISvgViewPort.ViewBox">
            <summary>
            Gets or sets the viewport of the element.
            </summary>
        </member>
        <member name="T:AntdUI.Svg.SvgAspectRatio">
            <summary>
            Description of SvgAspectRatio.
            </summary>
        </member>
        <member name="T:AntdUI.Svg.DataTypes.SvgColourInterpolation">
            <summary>Specifies the color space for gradient interpolations, color animations and alpha compositing.</summary>
            <remarks>When a child element is blended into a background, the value of the ‘color-interpolation’ property on the child determines the type of blending, not the value of the ‘color-interpolation’ on the parent. For gradients which make use of the ‘xlink:href’ attribute to reference another gradient, the gradient uses the ‘color-interpolation’ property value from the gradient element which is directly referenced by the ‘fill’ or ‘stroke’ property. When animating colors, color interpolation is performed according to the value of the ‘color-interpolation’ property on the element being animated.</remarks>
        </member>
        <member name="F:AntdUI.Svg.DataTypes.SvgColourInterpolation.Auto">
            <summary>Indicates that the user agent can choose either the sRGB or linearRGB spaces for color interpolation. This option indicates that the author doesn't require that color interpolation occur in a particular color space.</summary>
        </member>
        <member name="F:AntdUI.Svg.DataTypes.SvgColourInterpolation.SRGB">
            <summary>Indicates that color interpolation should occur in the sRGB color space.</summary>
        </member>
        <member name="F:AntdUI.Svg.DataTypes.SvgColourInterpolation.LinearRGB">
            <summary>Indicates that color interpolation should occur in the linearized RGB color space as described above.</summary>
        </member>
        <member name="F:AntdUI.Svg.DataTypes.SvgColourInterpolation.Inherit">
            <summary>The value is inherited from the parent element.</summary>
        </member>
        <member name="T:AntdUI.Svg.DataTypes.SvgMarkerUnits">
            <summary>Defines the coordinate system for attributes ‘markerWidth’, ‘markerHeight’ and the contents of the ‘marker’.</summary>
        </member>
        <member name="F:AntdUI.Svg.DataTypes.SvgMarkerUnits.StrokeWidth">
            <summary>If markerUnits="strokeWidth", ‘markerWidth’, ‘markerHeight’ and the contents of the ‘marker’ represent values in a coordinate system which has a single unit equal the size in user units of the current stroke width (see the ‘stroke-width’ property) in place for the graphic object referencing the marker.</summary>
        </member>
        <member name="F:AntdUI.Svg.DataTypes.SvgMarkerUnits.UserSpaceOnUse">
            <summary>If markerUnits="userSpaceOnUse", ‘markerWidth’, ‘markerHeight’ and the contents of the ‘marker’ represent values in the current user coordinate system in place for the graphic object referencing the marker (i.e., the user coordinate system for the element referencing the ‘marker’ element via a ‘marker’, ‘marker-start’, ‘marker-mid’ or ‘marker-end’ property).</summary>
        </member>
        <member name="T:AntdUI.Svg.SvgCoordinateUnits">
            <summary>
            Defines the various coordinate units certain SVG elements may use.
            </summary>
        </member>
        <member name="F:AntdUI.Svg.SvgCoordinateUnits.ObjectBoundingBox">
            <summary>
            Indicates that the coordinate system of the owner element is to be used.
            </summary>
        </member>
        <member name="F:AntdUI.Svg.SvgCoordinateUnits.UserSpaceOnUse">
            <summary>
            Indicates that the coordinate system of the entire document is to be used.
            </summary>
        </member>
        <member name="T:AntdUI.Svg.SvgFontStyle">
            <summary>This is the descriptor for the style of a font and takes the same values as the 'font-style' property, except that a comma-separated list is permitted.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgFontStyle.All">
            <summary>Indicates that the font-face supplies all styles (normal, oblique and italic).</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgFontStyle.Normal">
            <summary>Specifies a font that is classified as 'normal' in the UA's font database.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgFontStyle.Oblique">
            <summary>Specifies a font that is classified as 'oblique' in the UA's font database. Fonts with Oblique, Slanted, or Incline in their names will typically be labeled 'oblique' in the font database. A font that is labeled 'oblique' in the UA's font database may actually have been generated by electronically slanting a normal font.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgFontStyle.Italic">
            <summary>Specifies a font that is classified as 'italic' in the UA's font database, or, if that is not available, one labeled 'oblique'. Fonts with Italic, Cursive, or Kursiv in their names will typically be labeled 'italic'</summary>
        </member>
        <member name="T:AntdUI.Svg.SvgFontWeight">
            <summary>The weight of a face relative to others in the same font family.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgFontWeight.All">
            <summary>All font weights.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgFontWeight.Inherit">
            <summary>The value is inherited from the parent element.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgFontWeight.Normal">
            <summary>Same as <see cref="F:AntdUI.Svg.SvgFontWeight.W400"/>.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgFontWeight.Bold">
            <summary>Same as <see cref="F:AntdUI.Svg.SvgFontWeight.W700"/>.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgFontWeight.Bolder">
            <summary>One font weight darker than the parent element.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgFontWeight.Lighter">
            <summary>One font weight lighter than the parent element.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgFontWeight.W100">
            <summary></summary>
        </member>
        <member name="F:AntdUI.Svg.SvgFontWeight.W200">
            <summary></summary>
        </member>
        <member name="F:AntdUI.Svg.SvgFontWeight.W300">
            <summary></summary>
        </member>
        <member name="F:AntdUI.Svg.SvgFontWeight.W400">
            <summary>Same as <see cref="F:AntdUI.Svg.SvgFontWeight.Normal"/>.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgFontWeight.W500">
            <summary></summary>
        </member>
        <member name="F:AntdUI.Svg.SvgFontWeight.W600">
            <summary></summary>
        </member>
        <member name="F:AntdUI.Svg.SvgFontWeight.W700">
            <summary>Same as <see cref="F:AntdUI.Svg.SvgFontWeight.Bold"/>.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgFontWeight.W800">
            <summary></summary>
        </member>
        <member name="F:AntdUI.Svg.SvgFontWeight.W900">
            <summary></summary>
        </member>
        <member name="T:AntdUI.Svg.SvgOrient">
            <summary>
            Represents an orientation in an Scalable Vector Graphics document.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgOrient.Angle">
            <summary>
            Gets the value of the unit.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgOrient.IsAuto">
            <summary>
            Gets the value of the unit.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgOrient.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            true if <paramref name="obj"/> and this instance are the same type and represent the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:AntdUI.Svg.SvgOrient.op_Implicit(System.Single)~AntdUI.Svg.SvgOrient">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Single"/> to <see cref="T:AntdUI.Svg.SvgOrient"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="T:AntdUI.Svg.SvgOverflow">
            <summary>The ‘overflow’ property applies to elements that establish new viewports (e.g., ‘svg’ elements), ‘pattern’ elements and ‘marker’ elements. For all other elements, the property has no effect (i.e., a clipping rectangle is not created).</summary>
            <remarks>
                <para>The ‘overflow’ property has the same parameter values and has the same meaning as defined in CSS2 ([CSS2], section 11.1.1); however, the following additional points apply:</para>
                <para>The ‘overflow’ property applies to elements that establish new viewports (e.g., ‘svg’ elements), ‘pattern’ elements and ‘marker’ elements. For all other elements, the property has no effect (i.e., a clipping rectangle is not created).</para>
                <para>For those elements to which the ‘overflow’ property can apply, if the ‘overflow’ property has the value hidden or scroll, the effect is that a new clipping path in the shape of a rectangle is created. The result is equivalent to defining a ‘clipPath’ element whose content is a ‘rect’ element which defines the equivalent rectangle, and then specifying the 'uri' of this ‘clipPath’ element on the ‘clip-path’ property for the given element.</para>
                <para>If the ‘overflow’ property has a value other than hidden or scroll, the property has no effect (i.e., a clipping rectangle is not created).</para>
                <para>Within SVG content, the value auto is equivalent to the value visible.</para>
                <para>When an outermost svg element is embedded inline within a parent XML grammar which uses CSS layout ([CSS2], chapter 9) or XSL formatting [XSL], if the ‘overflow’ property has the value hidden or scroll, then the user agent will establish an initial clipping path equal to the bounds of the initial viewport; otherwise, the initial clipping path is set according to the clipping rules as defined in CSS2 ([CSS2], section 11.1.1).</para>
                <para>When an outermost svg element is stand-alone or embedded inline within a parent XML grammar which does not use CSS layout or XSL formatting, the ‘overflow’ property on the outermost svg element is ignored for the purposes of visual rendering and the initial clipping path is set to the bounds of the initial viewport.</para>
                <para>The initial value for ‘overflow’ as defined in [CSS2-overflow] is 'visible', and this applies also to the root ‘svg’ element; however, for child elements of an SVG document, SVG's user agent style sheet overrides this initial value and sets the ‘overflow’ property on elements that establish new viewports (e.g., ‘svg’ elements), ‘pattern’ elements and ‘marker’ elements to the value 'hidden'.</para>
                <para>As a result of the above, the default behavior of SVG user agents is to establish a clipping path to the bounds of the initial viewport and to establish a new clipping path for each element which establishes a new viewport and each ‘pattern’ and ‘marker’ element.</para>
            </remarks>
        </member>
        <member name="F:AntdUI.Svg.SvgOverflow.Hidden">
            <summary>Overflow is not rendered.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgOverflow.Inherit">
            <summary>The value is inherited from the parent element.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgOverflow.Auto">
            <summary>The overflow is rendered - same as "visible".</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgOverflow.Visible">
            <summary>Overflow is rendered.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgOverflow.Scroll">
            <summary>Overflow causes a scrollbar to appear (horizontal, vertical or both).</summary>
        </member>
        <member name="T:AntdUI.Svg.SvgPointCollection">
            <summary>
            Represents a list of <see cref="T:AntdUI.Svg.SvgUnit"/> used with the <see cref="T:AntdUI.Svg.SvgPolyline"/> and <see cref="T:AntdUI.Svg.SvgPolygon"/>.
            </summary>
        </member>
        <member name="T:AntdUI.Svg.SvgTextDecoration">
            <summary>This property describes decorations that are added to the text of an element. Conforming SVG Viewers are not required to support the blink value.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgTextDecoration.Inherit">
            <summary>The value is inherited from the parent element.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgTextDecoration.None">
            <summary>The text is not decorated</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgTextDecoration.Underline">
            <summary>The text is underlined.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgTextDecoration.Overline">
            <summary>The text is overlined.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgTextDecoration.LineThrough">
            <summary>The text is struck through.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgTextDecoration.Blink">
            <summary>The text will blink.</summary>
        </member>
        <member name="T:AntdUI.Svg.SvgTextLengthAdjust">
            <summary>Indicates the type of adjustments which the user agent shall make to make the rendered length of the text match the value specified on the ‘textLength’ attribute.</summary>
            <remarks>
                <para>The user agent is required to achieve correct start and end positions for the text strings, but the locations of intermediate glyphs are not predictable because user agents might employ advanced algorithms to stretch or compress text strings in order to balance correct start and end positioning with optimal typography.</para>
                <para>Note that, for a text string that contains n characters, the adjustments to the advance values often occur only for n−1 characters (see description of attribute ‘textLength’), whereas stretching or compressing of the glyphs will be applied to all n characters.</para>
            </remarks>
        </member>
        <member name="F:AntdUI.Svg.SvgTextLengthAdjust.Spacing">
            <summary>Indicates that only the advance values are adjusted. The glyphs themselves are not stretched or compressed.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgTextLengthAdjust.SpacingAndGlyphs">
            <summary>Indicates that the advance values are adjusted and the glyphs themselves stretched or compressed in one axis (i.e., a direction parallel to the inline-progression-direction).</summary>
        </member>
        <member name="T:AntdUI.Svg.SvgTextPathMethod">
            <summary>Indicates the method by which text should be rendered along the path.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgTextPathMethod.Align">
            <summary>Indicates that the glyphs should be rendered using simple 2x3 transformations such that there is no stretching/warping of the glyphs. Typically, supplemental rotation, scaling and translation transformations are done for each glyph to be rendered. As a result, with align, fonts where the glyphs are designed to be connected (e.g., cursive fonts), the connections may not align properly when text is rendered along a path.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgTextPathMethod.Stretch">
            <summary>Indicates that the glyph outlines will be converted into paths, and then all end points and control points will be adjusted to be along the perpendicular vectors from the path, thereby stretching and possibly warping the glyphs. With this approach, connected glyphs, such as in cursive scripts, will maintain their connections.</summary>
        </member>
        <member name="T:AntdUI.Svg.SvgTextPathSpacing">
            <summary>Indicates how the user agent should determine the spacing between glyphs that are to be rendered along a path.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgTextPathSpacing.Exact">
            <summary>Indicates that the glyphs should be rendered exactly according to the spacing rules as specified in Text on a path layout rules.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgTextPathSpacing.Auto">
            <summary>Indicates that the user agent should use text-on-a-path layout algorithms to adjust the spacing between glyphs in order to achieve visually appealing results.</summary>
        </member>
        <member name="T:AntdUI.Svg.SvgTextTransformation">
            <summary>This property describes transformations that are added to the text of an element.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgTextTransformation.Inherit">
            <summary>The value is inherited from the parent element.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgTextTransformation.None">
            <summary>The text is not transformed.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgTextTransformation.Capitalize">
            <summary>First letter of each word of the text is converted to uppercase.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgTextTransformation.Uppercase">
            <summary>The text is converted to uppercase.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgTextTransformation.Lowercase">
            <summary>The text is converted to lowercase.</summary>
        </member>
        <member name="T:AntdUI.Svg.SvgUnit">
            <summary>
            Represents a unit in an Scalable Vector Graphics document.
            </summary>
        </member>
        <member name="F:AntdUI.Svg.SvgUnit.Empty">
            <summary>
            Gets and empty <see cref="T:AntdUI.Svg.SvgUnit"/>.
            </summary>
        </member>
        <member name="F:AntdUI.Svg.SvgUnit.None">
            <summary>
            Gets an <see cref="T:AntdUI.Svg.SvgUnit"/> with a value of none.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgUnit.IsEmpty">
            <summary>
            Gets a value to determine whether the unit is empty.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgUnit.IsNone">
            <summary>
            Gets whether this unit is none.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgUnit.Value">
            <summary>
            Gets the value of the unit.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgUnit.Type">
            <summary>
            Gets the <see cref="T:AntdUI.Svg.SvgUnitType"/> of unit.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgUnit.ToDeviceValue(AntdUI.Svg.ISvgRenderer,AntdUI.Svg.UnitRenderingType,AntdUI.Svg.SvgElement)">
            <summary>
            Converts the current unit to one that can be used at render time.
            </summary>
            <returns>The representation of the current unit in a device value (usually pixels).</returns>
        </member>
        <member name="M:AntdUI.Svg.SvgUnit.ToPercentage">
            <summary>
            Converts the current unit to a percentage, if applicable.
            </summary>
            <returns>An <see cref="T:AntdUI.Svg.SvgUnit"/> of type <see cref="F:AntdUI.Svg.SvgUnitType.Percentage"/>.</returns>
        </member>
        <member name="M:AntdUI.Svg.SvgUnit.op_Implicit(AntdUI.Svg.SvgUnit)~System.Single">
            <summary>
            Performs an implicit conversion from <see cref="T:AntdUI.Svg.SvgUnit"/> to <see cref="T:System.Single"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:AntdUI.Svg.SvgUnit.op_Implicit(System.Single)~AntdUI.Svg.SvgUnit">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Single"/> to <see cref="T:AntdUI.Svg.SvgUnit"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:AntdUI.Svg.SvgUnit.#ctor(AntdUI.Svg.SvgUnitType,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:AntdUI.Svg.SvgUnit"/> struct.
            </summary>
            <param name="type">The type.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgUnit.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:AntdUI.Svg.SvgUnit"/> struct.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="T:AntdUI.Svg.SvgUnitType">
            <summary>
            Defines the various types of unit an <see cref="T:AntdUI.Svg.SvgUnit"/> can be.
            </summary>
        </member>
        <member name="F:AntdUI.Svg.SvgUnitType.None">
            <summary>
            Indicates that the unit holds no value.
            </summary>
        </member>
        <member name="F:AntdUI.Svg.SvgUnitType.Pixel">
            <summary>
            Indicates that the unit is in pixels.
            </summary>
        </member>
        <member name="F:AntdUI.Svg.SvgUnitType.Em">
            <summary>
            Indicates that the unit is equal to the pt size of the current font.
            </summary>
        </member>
        <member name="F:AntdUI.Svg.SvgUnitType.Ex">
            <summary>
            Indicates that the unit is equal to the x-height of the current font.
            </summary>
        </member>
        <member name="F:AntdUI.Svg.SvgUnitType.Percentage">
            <summary>
            Indicates that the unit is a percentage.
            </summary>
        </member>
        <member name="F:AntdUI.Svg.SvgUnitType.User">
            <summary>
            Indicates that the unit has no unit identifier and is a value in the current user coordinate system.
            </summary>
        </member>
        <member name="F:AntdUI.Svg.SvgUnitType.Inch">
            <summary>
            Indicates the the unit is in inches.
            </summary>
        </member>
        <member name="F:AntdUI.Svg.SvgUnitType.Centimeter">
            <summary>
            Indicates that the unit is in centimeters.
            </summary>
        </member>
        <member name="F:AntdUI.Svg.SvgUnitType.Millimeter">
            <summary>
            Indicates that the unit is in millimeters.
            </summary>
        </member>
        <member name="F:AntdUI.Svg.SvgUnitType.Pica">
            <summary>
            Indicates that the unit is in picas.
            </summary>
        </member>
        <member name="F:AntdUI.Svg.SvgUnitType.Point">
            <summary>
            Indicates that the unit is in points, the smallest unit of measure, being a subdivision of the larger <see cref="F:AntdUI.Svg.SvgUnitType.Pica"/>. There are 12 points in the <see cref="F:AntdUI.Svg.SvgUnitType.Pica"/>.
            </summary>
        </member>
        <member name="T:AntdUI.Svg.SvgUnitCollection">
            <summary>
            Represents a list of <see cref="T:AntdUI.Svg.SvgUnit"/>.
            </summary>
        </member>
        <member name="T:AntdUI.Svg.SvgViewBox">
            <summary>
            It is often desirable to specify that a given set of graphics stretch to fit a particular container element. The viewBox attribute provides this capability.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgViewBox.MinX">
            <summary>
            Gets or sets the position where the viewport starts horizontally.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgViewBox.MinY">
            <summary>
            Gets or sets the position where the viewport starts vertically.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgViewBox.Width">
            <summary>
            Gets or sets the width of the viewport.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgViewBox.Height">
            <summary>
            Gets or sets the height of the viewport.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgViewBox.op_Implicit(AntdUI.Svg.SvgViewBox)~System.Drawing.RectangleF">
            <summary>
            Performs an implicit conversion from <see cref="T:AntdUI.Svg.SvgViewBox"/> to <see cref="T:System.Drawing.RectangleF"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:AntdUI.Svg.SvgViewBox.op_Implicit(System.Drawing.RectangleF)~AntdUI.Svg.SvgViewBox">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Drawing.RectangleF"/> to <see cref="T:AntdUI.Svg.SvgViewBox"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:AntdUI.Svg.SvgViewBox.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:AntdUI.Svg.SvgViewBox"/> struct.
            </summary>
            <param name="minX">The min X.</param>
            <param name="minY">The min Y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="T:AntdUI.Svg.SvgDefinitionList">
            <summary>
            Represents a list of re-usable SVG components.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgDefinitionList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AntdUI.Svg.SvgDefinitionList"/> class.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgDefinitionList.Render(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Renders the <see cref="T:AntdUI.Svg.SvgElement"/> and contents to the specified <see cref="T:AntdUI.Svg.ISvgRenderer"/> object.
            </summary>
            <param name="renderer">The <see cref="T:AntdUI.Svg.ISvgRenderer"/> object to render to.</param>
        </member>
        <member name="T:AntdUI.Svg.SvgDocumentMetadata">
            <summary>
            Represents a list of re-usable SVG components.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgDocumentMetadata.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AntdUI.Svg.SvgDocumentMetadata"/> class.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgDocumentMetadata.Render(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Renders the <see cref="T:AntdUI.Svg.SvgElement"/> and contents to the specified <see cref="T:AntdUI.Svg.ISvgRenderer"/> object.
            </summary>
            <param name="renderer">The <see cref="T:AntdUI.Svg.ISvgRenderer"/> object to render to.</param>
        </member>
        <member name="T:AntdUI.Svg.SvgFragment">
            <summary>
            An <see cref="T:AntdUI.Svg.SvgFragment"/> represents an SVG fragment that can be the root element or an embedded fragment of an SVG document.
            </summary>
        </member>
        <member name="F:AntdUI.Svg.SvgFragment.Namespace">
            <summary>
            Gets the SVG namespace string.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgFragment.X">
            <summary>
            Gets or sets the position where the left point of the svg should start.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgFragment.Y">
            <summary>
            Gets or sets the position where the top point of the svg should start.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgFragment.Width">
            <summary>
            Gets or sets the width of the fragment.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:AntdUI.Svg.SvgFragment.Height">
            <summary>
            Gets or sets the height of the fragment.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:AntdUI.Svg.SvgFragment.ViewBox">
            <summary>
            Gets or sets the viewport of the element.
            </summary>
            <value></value>
        </member>
        <member name="P:AntdUI.Svg.SvgFragment.AspectRatio">
            <summary>
            Gets or sets the aspect of the viewport.
            </summary>
            <value></value>
        </member>
        <member name="P:AntdUI.Svg.SvgFragment.FontSize">
            <summary>
            Refers to the size of the font from baseline to baseline when multiple lines of text are set solid in a multiline layout environment.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgFragment.FontFamily">
            <summary>
            Indicates which font family is to be used to render the text.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgFragment.PushTransforms(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Applies the required transforms to <see cref="T:AntdUI.Svg.ISvgRenderer"/>.
            </summary>
            <param name="renderer">The <see cref="T:AntdUI.Svg.ISvgRenderer"/> to be transformed.</param>
        </member>
        <member name="P:AntdUI.Svg.SvgFragment.Path">
            <summary>
            Gets the <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for this element.
            </summary>
            <value></value>
        </member>
        <member name="P:AntdUI.Svg.SvgFragment.Bounds">
            <summary>
            Gets the bounds of the svg element.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="M:AntdUI.Svg.SvgFragment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AntdUI.Svg.SvgFragment"/> class.
            </summary>
        </member>
        <member name="T:AntdUI.Svg.SvgGroup">
            <summary>
            An element used to group SVG shapes.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgGroup.AddMarkers">
            <summary>
            If the group has marker attributes defined, add them to all children
            that are able to display markers. Only done once.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgGroup.Render(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Add group markers to children before rendering them.
            This is only done on first rendering.
            </summary>
            <param name="renderer">The <see cref="T:AntdUI.Svg.ISvgRenderer"/> to render the child <see cref="T:AntdUI.Svg.SvgElement"/>s to.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgGroup.Path(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Gets the <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for this element.
            </summary>
            <value></value>
        </member>
        <member name="P:AntdUI.Svg.SvgGroup.Bounds">
            <summary>
            Gets the bounds of the element.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="T:AntdUI.Svg.SvgSwitch">
            <summary>
            The 'switch' element evaluates the 'requiredFeatures', 'requiredExtensions' and 'systemLanguage' attributes on its direct child elements in order, and then processes and renders the first child for which these attributes evaluate to true
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgSwitch.Path(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Gets the <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for this element.
            </summary>
            <value></value>
        </member>
        <member name="P:AntdUI.Svg.SvgSwitch.Bounds">
            <summary>
            Gets the bounds of the element.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="M:AntdUI.Svg.SvgSwitch.Render(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Renders the <see cref="T:AntdUI.Svg.SvgElement"/> and contents to the specified <see cref="T:System.Drawing.Graphics"/> object.
            </summary>
            <param name="renderer">The <see cref="T:System.Drawing.Graphics"/> object to render to.</param>
        </member>
        <member name="T:AntdUI.Svg.Document_Structure.SvgSymbol">
            <summary>
            An element used to group SVG shapes.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.Document_Structure.SvgSymbol.ViewBox">
            <summary>
            Gets or sets the viewport of the element.
            </summary>
            <value></value>
        </member>
        <member name="P:AntdUI.Svg.Document_Structure.SvgSymbol.AspectRatio">
            <summary>
            Gets or sets the aspect of the viewport.
            </summary>
            <value></value>
        </member>
        <member name="M:AntdUI.Svg.Document_Structure.SvgSymbol.Path(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Gets the <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for this element.
            </summary>
            <value></value>
        </member>
        <member name="P:AntdUI.Svg.Document_Structure.SvgSymbol.Bounds">
            <summary>
            Gets the bounds of the element.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="M:AntdUI.Svg.Document_Structure.SvgSymbol.PushTransforms(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Applies the required transforms to <see cref="T:AntdUI.Svg.ISvgRenderer"/>.
            </summary>
            <param name="renderer">The <see cref="T:AntdUI.Svg.ISvgRenderer"/> to be transformed.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgUse.HasRecursiveReference">
            <summary>
            Checks for any direct or indirect recursions in referenced elements, 
            including recursions via groups.
            </summary>
            <returns>True if any recursions are found.</returns>
        </member>
        <member name="M:AntdUI.Svg.SvgUse.PushTransforms(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Applies the required transforms to <see cref="T:AntdUI.Svg.ISvgRenderer"/>.
            </summary>
            <param name="renderer">The <see cref="T:AntdUI.Svg.ISvgRenderer"/> to be transformed.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgUse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AntdUI.Svg.SvgUse"/> class.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgUse.Location">
            <summary>
            Gets an <see cref="T:AntdUI.Svg.SvgPoint"/> representing the top left point of the rectangle.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgUse.Bounds">
            <summary>
            Gets the bounds of the element.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="T:AntdUI.Svg.SvgForeignObject">
            <summary>
            The 'foreignObject' element allows for inclusion of a foreign namespace which has its graphical content drawn by a different user agent
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgForeignObject.Path(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Gets the <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for this element.
            </summary>
            <value></value>
        </member>
        <member name="P:AntdUI.Svg.SvgForeignObject.Bounds">
            <summary>
            Gets the bounds of the element.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="T:AntdUI.Svg.FilterEffects.SvgColourMatrix">
            <summary>
            Note: this is not used in calculations to bitmap - used only to allow for svg xml output
            </summary>
        </member>
        <member name="P:AntdUI.Svg.FilterEffects.SvgColourMatrix.Type">
            <summary>
            matrix | saturate | hueRotate | luminanceToAlpha
            Indicates the type of matrix operation. The keyword 'matrix' indicates that a full 5x4 matrix of values will be provided. The other keywords represent convenience shortcuts to allow commonly used color operations to be performed without specifying a complete matrix. If attribute 憈ype?is not specified, then the effect is as if a value of matrix were specified.
            Note: this is not used in calculations to bitmap - used only to allow for svg xml output
            </summary>
        </member>
        <member name="P:AntdUI.Svg.FilterEffects.SvgColourMatrix.Values">
            <summary>
            list of numbers
            The contents of 憊alues?depends on the value of attribute 憈ype? 
            Note: this is not used in calculations to bitmap - used only to allow for svg xml output
            </summary>
        </member>
        <member name="P:AntdUI.Svg.FilterEffects.SvgGaussianBlur.StdDeviation">
            <summary>
            Gets or sets the radius of the blur (only allows for one value - not the two specified in the SVG Spec)
            </summary>
        </member>
        <member name="T:AntdUI.Svg.FilterEffects.SvgOffset">
            <summary>
            Note: this is not used in calculations to bitmap - used only to allow for svg xml output
            </summary>
        </member>
        <member name="P:AntdUI.Svg.FilterEffects.SvgOffset.Dx">
            <summary>
            The amount to offset the input graphic along the x-axis. The offset amount is expressed in the coordinate system established by attribute 憄rimitiveUnits?on the 慺ilter?element.
            If the attribute is not specified, then the effect is as if a value of 0 were specified.
            Note: this is not used in calculations to bitmap - used only to allow for svg xml output
            </summary>
        </member>
        <member name="P:AntdUI.Svg.FilterEffects.SvgOffset.Dy">
            <summary>
            The amount to offset the input graphic along the y-axis. The offset amount is expressed in the coordinate system established by attribute 憄rimitiveUnits?on the 慺ilter?element.
            If the attribute is not specified, then the effect is as if a value of 0 were specified.
            Note: this is not used in calculations to bitmap - used only to allow for svg xml output
            </summary>
        </member>
        <member name="T:AntdUI.Svg.FilterEffects.SvgFilter">
            <summary>
            A filter effect consists of a series of graphics operations that are applied to a given source graphic to produce a modified graphical result.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.FilterEffects.SvgFilter.X">
            <summary>
            Gets or sets the position where the left point of the filter.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.FilterEffects.SvgFilter.Y">
            <summary>
            Gets or sets the position where the top point of the filter.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.FilterEffects.SvgFilter.Width">
            <summary>
            Gets or sets the width of the resulting filter graphic.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.FilterEffects.SvgFilter.Height">
            <summary>
            Gets or sets the height of the resulting filter graphic.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.FilterEffects.SvgFilter.ColorInterpolationFilters">
            <summary>
            Gets or sets the color-interpolation-filters of the resulting filter graphic.
            NOT currently mapped through to bitmap
            </summary>
        </member>
        <member name="M:AntdUI.Svg.FilterEffects.SvgFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AntdUI.Svg.FilterEffects.SvgFilter"/> class.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.FilterEffects.SvgFilter.Render(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Renders the <see cref="T:AntdUI.Svg.SvgElement"/> and contents to the specified <see cref="T:AntdUI.Svg.ISvgRenderer"/> object.
            </summary>
            <param name="renderer">The <see cref="T:AntdUI.Svg.ISvgRenderer"/> object to render to.</param>
        </member>
        <member name="M:AntdUI.Svg.FilterEffects.SvgFilter.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:AntdUI.Svg.NonSvgElement.Name">
            <summary>
            Publish the element name to be able to differentiate non-svg elements.
            </summary>
        </member>
        <member name="T:AntdUI.Svg.ISvgStylable">
            <summary>
            Defines the methods and properties required for an SVG element to be styled.
            </summary>
        </member>
        <member name="F:AntdUI.Svg.SvgColourServer.NotSet">
            <summary>
            An unspecified <see cref="T:AntdUI.Svg.SvgPaintServer"/>.
            </summary>
        </member>
        <member name="F:AntdUI.Svg.SvgColourServer.Inherit">
            <summary>
            A <see cref="T:AntdUI.Svg.SvgPaintServer"/> that should inherit from its parent.
            </summary>
        </member>
        <member name="T:AntdUI.Svg.SvgDeferredPaintServer">
            <summary>
            A wrapper for a paint server which isn't defined currently in the parse process, but
            should be defined by the time the image needs to render.
            </summary>
        </member>
        <member name="T:AntdUI.Svg.SvgFallbackPaintServer">
            <summary>
            A wrapper for a paint server has a fallback if the primary server doesn't work.
            </summary>
        </member>
        <member name="T:AntdUI.Svg.SvgGradientServer">
            <summary>
            Provides the base class for all paint servers that wish to render a gradient.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgGradientServer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AntdUI.Svg.SvgGradientServer"/> class.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgGradientServer.AddElement(AntdUI.Svg.SvgElement,System.Int32)">
            <summary>
            Called by the underlying <see cref="T:AntdUI.Svg.SvgElement"/> when an element has been added to the
            'Children' collection.
            </summary>
            <param name="child">The <see cref="T:AntdUI.Svg.SvgElement"/> that has been added.</param>
            <param name="index">An <see cref="T:System.Int32"/> representing the index where the element was added to the collection.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgGradientServer.RemoveElement(AntdUI.Svg.SvgElement)">
            <summary>
            Called by the underlying <see cref="T:AntdUI.Svg.SvgElement"/> when an element has been removed from the
            'Children' collection.
            </summary>
            <param name="child">The <see cref="T:AntdUI.Svg.SvgElement"/> that has been removed.</param>
        </member>
        <member name="P:AntdUI.Svg.SvgGradientServer.Stops">
            <summary>
            Gets the ramp of colors to use on a gradient.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgGradientServer.SpreadMethod">
            <summary>
            Specifies what happens if the gradient starts or ends inside the bounds of the target rectangle.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgGradientServer.GradientUnits">
            <summary>
            Gets or sets the coordinate system of the gradient.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgGradientServer.InheritGradient">
            <summary>
            Gets or sets another gradient fill from which to inherit the stops from.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgGradientServer.GetColorBlend(AntdUI.Svg.ISvgRenderer,System.Single,System.Boolean)">
            <summary>
            Gets a <see cref="T:System.Drawing.Drawing2D.ColorBlend"/> representing the <see cref="T:AntdUI.Svg.SvgGradientServer"/>'s gradient stops.
            </summary>
            <param name="renderer">The renderer <see cref="T:AntdUI.Svg.ISvgRenderer"/>.</param>
            <param name="opacity">The opacity of the colour blend.</param>
            <param name="radial">True if it's a radial gradiant.</param>
        </member>
        <member name="T:AntdUI.Svg.SvgGradientSpreadMethod">
            <summary>Indicates what happens if the gradient starts or ends inside the bounds of the target rectangle.</summary>
            <remarks>
                <para>Possible values are: 'pad', which says to use the terminal colors of the gradient to fill the remainder of the target region, 'reflect', which says to reflect the gradient pattern start-to-end, end-to-start, start-to-end, etc. continuously until the target rectangle is filled, and repeat, which says to repeat the gradient pattern start-to-end, start-to-end, start-to-end, etc. continuously until the target region is filled.</para>
                <para>If the attribute is not specified, the effect is as if a value of 'pad' were specified.</para>
            </remarks>
        </member>
        <member name="F:AntdUI.Svg.SvgGradientSpreadMethod.Pad">
            <summary>Use the terminal colors of the gradient to fill the remainder of the target region.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgGradientSpreadMethod.Reflect">
            <summary>Reflect the gradient pattern start-to-end, end-to-start, start-to-end, etc. continuously until the target rectangle is filled.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgGradientSpreadMethod.Repeat">
            <summary>Repeat the gradient pattern start-to-end, start-to-end, start-to-end, etc. continuously until the target region is filled.</summary>
        </member>
        <member name="T:AntdUI.Svg.SvgGradientStop">
            <summary>
            Represents a colour stop in a gradient.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgGradientStop.Offset">
            <summary>
            Gets or sets the offset, i.e. where the stop begins from the beginning, of the gradient stop.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgGradientStop.StopColor">
            <summary>
            Gets or sets the colour of the gradient stop.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgGradientStop.Opacity">
            <summary>
            Gets or sets the opacity of the gradient stop (0-1).
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgGradientStop.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AntdUI.Svg.SvgGradientStop"/> class.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgGradientStop.#ctor(AntdUI.Svg.SvgUnit,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:AntdUI.Svg.SvgGradientStop"/> class.
            </summary>
            <param name="offset">The offset.</param>
            <param name="colour">The colour.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgLinearGradientServer.LineF.Intersection(AntdUI.Svg.SvgLinearGradientServer.LineF)">
            <remarks>http://community.topcoder.com/tc?module=Static&amp;d1=tutorials&amp;d2=geometry2</remarks>
        </member>
        <member name="P:AntdUI.Svg.SvgMarker.MarkerElement">
            <summary>
            Return the child element that represent the marker
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgMarker.Fill">
            <summary>
            If not set set in the marker, consider the attribute in the drawing element.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgMarker.Stroke">
            <summary>
            If not set set in the marker, consider the attribute in the drawing element.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgMarker.RenderMarker(AntdUI.Svg.ISvgRenderer,AntdUI.Svg.SvgVisualElement,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Render this marker using the slope of the given line segment
            </summary>
            <param name="pRenderer"></param>
            <param name="pOwner"></param>
            <param name="pRefPoint"></param>
            <param name="pMarkerPoint1"></param>
            <param name="pMarkerPoint2"></param>
        </member>
        <member name="M:AntdUI.Svg.SvgMarker.RenderMarker(AntdUI.Svg.ISvgRenderer,AntdUI.Svg.SvgVisualElement,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Render this marker using the average of the slopes of the two given line segments
            </summary>
            <param name="pRenderer"></param>
            <param name="pOwner"></param>
            <param name="pRefPoint"></param>
            <param name="pMarkerPoint1"></param>
            <param name="pMarkerPoint2"></param>
            <param name="pMarkerPoint3"></param>
        </member>
        <member name="M:AntdUI.Svg.SvgMarker.RenderPart2(System.Single,AntdUI.Svg.ISvgRenderer,AntdUI.Svg.SvgVisualElement,System.Drawing.PointF)">
            <summary>
            Common code for rendering a marker once the orientation angle has been calculated
            </summary>
            <param name="fAngle"></param>
            <param name="pRenderer"></param>
            <param name="pOwner"></param>
            <param name="pMarkerPoint"></param>
        </member>
        <member name="M:AntdUI.Svg.SvgMarker.CreatePen(AntdUI.Svg.SvgVisualElement,AntdUI.Svg.ISvgRenderer)">
            <summary>
            Create a pen that can be used to render this marker
            </summary>
            <returns></returns>
        </member>
        <member name="M:AntdUI.Svg.SvgMarker.GetClone(AntdUI.Svg.SvgVisualElement)">
            <summary>
            Get a clone of the current path, scaled for the stroke width
            </summary>
            <returns></returns>
        </member>
        <member name="M:AntdUI.Svg.SvgMarker.AdjustForViewBoxWidth(System.Single)">
            <summary>
            Adjust the given value to account for the width of the viewbox in the viewport
            </summary>
            <param name="fWidth"></param>
            <returns></returns>
        </member>
        <member name="M:AntdUI.Svg.SvgMarker.AdjustForViewBoxHeight(System.Single)">
            <summary>
            Adjust the given value to account for the height of the viewbox in the viewport
            </summary>
            <param name="fHeight"></param>
            <returns></returns>
        </member>
        <member name="T:AntdUI.Svg.SvgPaintServer">
            <summary>
            Represents the base class for all paint servers that are intended to be used as a fill or stroke.
            </summary>
        </member>
        <member name="F:AntdUI.Svg.SvgPaintServer.None">
            <summary>
            An unspecified <see cref="T:AntdUI.Svg.SvgPaintServer"/>.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgPaintServer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AntdUI.Svg.SvgPaintServer"/> class.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgPaintServer.Render(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Renders the <see cref="T:AntdUI.Svg.SvgElement"/> and contents to the specified <see cref="T:AntdUI.Svg.ISvgRenderer"/> object.
            </summary>
            <param name="renderer">The <see cref="T:AntdUI.Svg.ISvgRenderer"/> object to render to.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgPaintServer.GetBrush(AntdUI.Svg.SvgVisualElement,AntdUI.Svg.ISvgRenderer,System.Single,System.Boolean)">
            <summary>
            Gets a <see cref="T:System.Drawing.Brush"/> representing the current paint server.
            </summary>
            <param name="styleOwner">The owner <see cref="T:AntdUI.Svg.SvgVisualElement"/>.</param>
            <param name="renderer">The renderer object.</param>
            <param name="opacity">The opacity of the brush.</param>
            <param name="forStroke">Not used.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgPaintServer.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:AntdUI.Svg.SvgPaintServerConverter.Hsl2Rgb(System.Double,System.Double,System.Double)">
            <summary>
            Converts HSL color (with HSL specified from 0 to 1) to RGB color.
            Taken from http://www.geekymonkey.com/Programming/CSharp/RGB2HSL_HSL2RGB.htm
            </summary>
            <param name="h"></param>
            <param name="sl"></param>
            <param name="l"></param>
            <returns></returns>
        </member>
        <member name="T:AntdUI.Svg.SvgPatternServer">
            <summary>
            A pattern is used to fill or stroke an object using a pre-defined graphic object which can be replicated ("tiled") at fixed intervals in x and y to cover the areas to be painted.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgPatternServer.ViewBox">
            <summary>
            Specifies a supplemental transformation which is applied on top of any 
            transformations necessary to create a new pattern coordinate system.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgPatternServer.AspectRatio">
            <summary>
            Gets or sets the aspect of the viewport.
            </summary>
            <value></value>
        </member>
        <member name="P:AntdUI.Svg.SvgPatternServer.Width">
            <summary>
            Gets or sets the width of the pattern.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgPatternServer.PatternUnits">
            <summary>
            Gets or sets the width of the pattern.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgPatternServer.PatternContentUnits">
            <summary>
            Gets or sets the width of the pattern.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgPatternServer.Height">
            <summary>
            Gets or sets the height of the pattern.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgPatternServer.X">
            <summary>
            Gets or sets the X-axis location of the pattern.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgPatternServer.Y">
            <summary>
            Gets or sets the Y-axis location of the pattern.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgPatternServer.InheritGradient">
            <summary>
            Gets or sets another gradient fill from which to inherit the stops from.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgPatternServer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AntdUI.Svg.SvgPatternServer"/> class.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgPatternServer.GetBrush(AntdUI.Svg.SvgVisualElement,AntdUI.Svg.ISvgRenderer,System.Single,System.Boolean)">
            <summary>
            Gets a <see cref="T:System.Drawing.Brush"/> representing the current paint server.
            </summary>
            <param name="renderingElement">The owner <see cref="T:AntdUI.Svg.SvgVisualElement"/>.</param>
            <param name="renderer">The renderer object.</param>
            <param name="opacity">The opacity of the brush.</param>
            <param name="forStroke">Not used.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgRadialGradientServer.CalcScale(System.Drawing.RectangleF,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Graphics)">
            <summary>
            Determine how much (approximately) the path must be scaled to contain the rectangle
            </summary>
            <param name="bounds">Bounds that the path must contain</param>
            <param name="path">Path of the gradient</param>
            <param name="graphics">Not used</param>
            <returns>Scale factor</returns>
            <remarks>
            This method continually transforms the rectangle (fewer points) until it is contained by the path
            and returns the result of the search.  The scale factor is set to a constant 95%
            </remarks>
        </member>
        <member name="T:AntdUI.Svg.SvgStrokeLineCap">
            <summary>Specifies the shape to be used at the end of open subpaths when they are stroked.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgStrokeLineCap.Inherit">
            <summary>The value is inherited from the parent element.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgStrokeLineCap.Butt">
            <summary>The ends of the subpaths are square but do not extend past the end of the subpath.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgStrokeLineCap.Round">
            <summary>The ends of the subpaths are rounded.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgStrokeLineCap.Square">
            <summary>The ends of the subpaths are square.</summary>
        </member>
        <member name="T:AntdUI.Svg.SvgStrokeLineJoin">
            <summary>Specifies the shape to be used at the corners of paths or basic shapes when they are stroked.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgStrokeLineJoin.Inherit">
            <summary>The value is inherited from the parent element.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgStrokeLineJoin.Miter">
            <summary>The corners of the paths are joined sharply.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgStrokeLineJoin.Round">
            <summary>The corners of the paths are rounded off.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgStrokeLineJoin.Bevel">
            <summary>The corners of the paths are "flattened".</summary>
        </member>
        <member name="T:AntdUI.Svg.SvgPath">
            <summary>
            Represents an SVG path element.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgPath.PathData">
            <summary>
            Gets or sets a <see cref="T:AntdUI.Svg.Pathing.SvgPathSegmentList"/> of path data.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgPath.PathLength">
            <summary>
            Gets or sets the length of the path.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgPath.Path(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Gets the <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for this element.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgPath.Bounds">
            <summary>
            Gets the bounds of the element.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="M:AntdUI.Svg.SvgPath.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AntdUI.Svg.SvgPath"/> class.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgPathConverter.Parse(System.String)">
            <summary>
            Parses the specified string into a collection of path segments.
            </summary>
            <param name="value">A <see cref="T:System.String"/> containing path data.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgPathConverter.ToAbsolute(System.Single,System.Single,AntdUI.Svg.Pathing.SvgPathSegmentList,System.Boolean)">
            <summary>
            Creates point with absolute coorindates.
            </summary>
            <param name="x">Raw X-coordinate value.</param>
            <param name="y">Raw Y-coordinate value.</param>
            <param name="segments">Current path segments.</param>
            <param name="isRelativeBoth"><b>true</b> if <paramref name="x"/> and <paramref name="y"/> contains relative coordinate values, otherwise <b>false</b>.</param>
            <returns><see cref="T:System.Drawing.PointF"/> that contains absolute coordinates.</returns>
        </member>
        <member name="M:AntdUI.Svg.SvgPathConverter.ToAbsolute(System.Single,System.Single,AntdUI.Svg.Pathing.SvgPathSegmentList,System.Boolean,System.Boolean)">
            <summary>
            Creates point with absolute coorindates.
            </summary>
            <param name="x">Raw X-coordinate value.</param>
            <param name="y">Raw Y-coordinate value.</param>
            <param name="segments">Current path segments.</param>
            <param name="isRelativeX"><b>true</b> if <paramref name="x"/> contains relative coordinate value, otherwise <b>false</b>.</param>
            <param name="isRelativeY"><b>true</b> if <paramref name="y"/> contains relative coordinate value, otherwise <b>false</b>.</param>
            <returns><see cref="T:System.Drawing.PointF"/> that contains absolute coordinates.</returns>
        </member>
        <member name="T:AntdUI.Svg.SvgRenderer">
            <summary>
            Convenience wrapper around a graphics object
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgRenderer.#ctor(System.Drawing.Graphics,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:AntdUI.Svg.ISvgRenderer"/> class.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgRenderer.FromImage(System.Drawing.Image)">
            <summary>
            Creates a new <see cref="T:AntdUI.Svg.ISvgRenderer"/> from the specified <see cref="T:System.Drawing.Image"/>.
            </summary>
            <param name="image"><see cref="T:System.Drawing.Image"/> from which to create the new <see cref="T:AntdUI.Svg.ISvgRenderer"/>.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgRenderer.FromGraphics(System.Drawing.Graphics)">
            <summary>
            Creates a new <see cref="T:AntdUI.Svg.ISvgRenderer"/> from the specified <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="graphics">The <see cref="T:System.Drawing.Graphics"/> to create the renderer from.</param>
        </member>
        <member name="T:AntdUI.Svg.SvgShapeRendering">
            <summary>
            The creator of SVG content might want to provide a hint about what tradeoffs to make as the browser renders 'path' element or basic shapes. The shape-rendering attribute provides these hints.
            </summary>
            <references>https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering</references>
            <remarks>
            Default is <see cref="F:AntdUI.Svg.SvgShapeRendering.Inherit"/>. That means the value comes from the parent element. If parents are also not set, then the value is <see cref="F:AntdUI.Svg.SvgShapeRendering.Auto"/>.
            </remarks>
        </member>
        <member name="F:AntdUI.Svg.SvgShapeRendering.Inherit">
            <summary>
            Indicates that the SVG shape rendering properties from the parent will be used.
            </summary>
            <AnitAlias>Based of parent. If parents are also not set, then <see cref="F:AntdUI.Svg.SvgShapeRendering.Auto"/></AnitAlias>
        </member>
        <member name="F:AntdUI.Svg.SvgShapeRendering.Auto">
            <summary>
            Indicates that the user agent shall make appropriate tradeoffs to balance speed, crisp edges and geometric precision, but with geometric precision given more importance than speed and crisp edges.
            </summary>
            <AnitAlias>true</AnitAlias>
        </member>
        <member name="F:AntdUI.Svg.SvgShapeRendering.OptimizeSpeed">
            <summary>
            Indicates that the user agent shall emphasize rendering speed over geometric precision and crisp edges. This option will sometimes cause the user agent to turn off shape anti-aliasing.
            </summary>
            <AnitAlias>false</AnitAlias>
        </member>
        <member name="F:AntdUI.Svg.SvgShapeRendering.CrispEdges">
            <summary>
            Indicates that the user agent shall attempt to emphasize the contrast between clean edges of artwork over rendering speed and geometric precision. To achieve crisp edges, the user agent might turn off anti-aliasing for all lines and curves or possibly just for straight lines which are close to vertical or horizontal. Also, the user agent might adjust line positions and line widths to align edges with device pixels.
            </summary>
            <AnitAlias>false</AnitAlias>
        </member>
        <member name="F:AntdUI.Svg.SvgShapeRendering.GeometricPrecision">
            <summary>
            Indicates that the user agent shall emphasize geometric precision over speed and crisp edges.
            </summary>
            <AnitAlias>false</AnitAlias>
        </member>
        <member name="T:AntdUI.Svg.SvgTextRendering">
            <summary>
            The creator of SVG content might want to provide a hint about what tradeoffs to make as the browser renders text. The text-rendering attribute provides these hints.
            </summary>
            <references>https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/text-rendering</references>
            <remarks>Not Implemented yet.</remarks>
        </member>
        <member name="F:AntdUI.Svg.SvgTextRendering.Inherit">
            <summary>
            Indicates that the SVG shape rendering properties from the parent will be used.
            </summary>
        </member>
        <member name="F:AntdUI.Svg.SvgTextRendering.Auto">
            <summary>
            Indicates that the browser shall make appropriate tradeoffs to balance speed, legibility and geometric precision, but with legibility given more importance than speed and geometric precision.
            </summary>
        </member>
        <member name="F:AntdUI.Svg.SvgTextRendering.OptimizeSpeed">
            <summary>
            Indicates that the user agent shall emphasize rendering speed over legibility and geometric precision. This option will sometimes cause some browsers to turn off text anti-aliasing.
            </summary>
        </member>
        <member name="F:AntdUI.Svg.SvgTextRendering.OptimizeLegibility">
            <summary>
            Indicates that the browser shall emphasize legibility over rendering speed and geometric precision. The user agent will often choose whether to apply anti-aliasing techniques, built-in font hinting or both to produce the most legible text.
            </summary>
        </member>
        <member name="F:AntdUI.Svg.SvgTextRendering.GeometricPrecision">
            <summary>
            Indicates that the browser shall emphasize geometric precision over legibility and rendering speed. This option will usually cause the user agent to suspend the use of hinting so that glyph outlines are drawn with comparable geometric precision to the rendering of path data.
            </summary>
        </member>
        <member name="T:AntdUI.Svg.SvgImageRendering">
            <summary>
            The image-rendering attribute provides a hint to the browser about how to make speed vs. quality tradeoffs as it performs image processing.
            </summary>
            <references>https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/image-rendering</references>
            <remarks>Not Implemented yet.</remarks>
        </member>
        <member name="F:AntdUI.Svg.SvgImageRendering.Inherit">
            <summary>
            Indicates that the SVG shape rendering properties from the parent will be used.
            </summary>
        </member>
        <member name="F:AntdUI.Svg.SvgImageRendering.Auto">
            <summary>
            Indicates that the user agent shall make appropriate tradeoffs to balance speed and quality, but quality shall be given more importance than speed.
            </summary>
        </member>
        <member name="F:AntdUI.Svg.SvgImageRendering.OptimizeSpeed">
            <summary>
            Indicates that the user agent shall emphasize rendering speed over quality.
            </summary>
        </member>
        <member name="F:AntdUI.Svg.SvgImageRendering.OptimizeQuality">
            <summary>
            Indicates that the user agent shall emphasize quality over rendering speed.
            </summary>
        </member>
        <member name="T:AntdUI.Svg.SvgAttributeAttribute">
            <summary>
            Specifies the SVG attribute name of the associated property.
            </summary>
        </member>
        <member name="F:AntdUI.Svg.SvgAttributeAttribute.SvgNamespace">
            <summary>
            Gets a <see cref="T:System.String"/> containing the XLink namespace (http://www.w3.org/1999/xlink).
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgAttributeAttribute.Match(System.Object)">
            <summary>
            When overridden in a derived class, returns a value that indicates whether this instance equals a specified object.
            </summary>
            <param name="obj">An <see cref="T:System.Object"/> to compare with this instance of <see cref="T:System.Attribute"/>.</param>
            <returns>
            true if this instance equals <paramref name="obj"/>; otherwise, false.
            </returns>
        </member>
        <member name="P:AntdUI.Svg.SvgAttributeAttribute.NamespaceAndName">
            <summary>
            Gets the name of the SVG attribute.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgAttributeAttribute.Name">
            <summary>
            Gets the name of the SVG attribute.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgAttributeAttribute.NameSpace">
            <summary>
            Gets the namespace of the SVG attribute.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgAttributeAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AntdUI.Svg.SvgAttributeAttribute"/> class.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgAttributeAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AntdUI.Svg.SvgAttributeAttribute"/> class with the specified attribute name.
            </summary>
            <param name="name">The name of the SVG attribute.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgAttributeAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AntdUI.Svg.SvgAttributeAttribute"/> class with the specified SVG attribute name and namespace.
            </summary>
            <param name="name">The name of the SVG attribute.</param>
            <param name="nameSpace">The namespace of the SVG attribute (e.g. http://www.w3.org/2000/svg).</param>
        </member>
        <member name="T:AntdUI.Svg.SvgAttributeCollection">
            <summary>
            A collection of Scalable Vector Attributes that can be inherited from the owner elements ancestors.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgAttributeCollection.#ctor(AntdUI.Svg.SvgElement)">
            <summary>
            Initialises a new instance of a <see cref="T:AntdUI.Svg.SvgAttributeCollection"/> with the given <see cref="T:AntdUI.Svg.SvgElement"/> as the owner.
            </summary>
            <param name="owner">The <see cref="T:AntdUI.Svg.SvgElement"/> owner of the collection.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgAttributeCollection.GetAttribute``1(System.String)">
            <summary>
            Gets the attribute with the specified name.
            </summary>
            <typeparam name="TAttributeType">The type of the attribute value.</typeparam>
            <param name="attributeName">A <see cref="T:System.String"/> containing the name of the attribute.</param>
            <returns>The attribute value if available; otherwise the default value of <typeparamref name="TAttributeType"/>.</returns>
        </member>
        <member name="M:AntdUI.Svg.SvgAttributeCollection.GetAttribute``1(System.String,``0)">
            <summary>
            Gets the attribute with the specified name.
            </summary>
            <typeparam name="T">The type of the attribute value.</typeparam>
            <param name="attributeName">A <see cref="T:System.String"/> containing the name of the attribute.</param>
            <param name="defaultValue">The value to return if a value hasn't already been specified.</param>
            <returns>The attribute value if available; otherwise the default value of <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:AntdUI.Svg.SvgAttributeCollection.GetInheritedAttribute``1(System.String)">
            <summary>
            Gets the attribute with the specified name and inherits from ancestors if there is no attribute set.
            </summary>
            <typeparam name="TAttributeType">The type of the attribute value.</typeparam>
            <param name="attributeName">A <see cref="T:System.String"/> containing the name of the attribute.</param>
            <returns>The attribute value if available; otherwise the ancestors value for the same attribute; otherwise the default value of <typeparamref name="TAttributeType"/>.</returns>
        </member>
        <member name="P:AntdUI.Svg.SvgAttributeCollection.Item(System.String)">
            <summary>
            Gets the attribute with the specified name.
            </summary>
            <param name="attributeName">A <see cref="T:System.String"/> containing the attribute name.</param>
            <returns>The attribute value associated with the specified name; If there is no attribute the parent's value will be inherited.</returns>
        </member>
        <member name="E:AntdUI.Svg.SvgAttributeCollection.AttributeChanged">
            <summary>
            Fired when an Atrribute has changed
            </summary>
        </member>
        <member name="T:AntdUI.Svg.SvgCustomAttributeCollection">
            <summary>
            A collection of Custom Attributes
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgCustomAttributeCollection.#ctor(AntdUI.Svg.SvgElement)">
            <summary>
            Initialises a new instance of a <see cref="T:AntdUI.Svg.SvgAttributeCollection"/> with the given <see cref="T:AntdUI.Svg.SvgElement"/> as the owner.
            </summary>
            <param name="owner">The <see cref="T:AntdUI.Svg.SvgElement"/> owner of the collection.</param>
        </member>
        <member name="P:AntdUI.Svg.SvgCustomAttributeCollection.Item(System.String)">
            <summary>
            Gets the attribute with the specified name.
            </summary>
            <param name="attributeName">A <see cref="T:System.String"/> containing the attribute name.</param>
            <returns>The attribute value associated with the specified name; If there is no attribute the parent's value will be inherited.</returns>
        </member>
        <member name="E:AntdUI.Svg.SvgCustomAttributeCollection.AttributeChanged">
            <summary>
            Fired when an Atrribute has changed
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgContentNode.DeepCopy">
            <summary>
            Create a deep copy of this <see cref="T:AntdUI.Svg.ISvgNode"/>.
            </summary>
            <returns>A deep copy of this <see cref="T:AntdUI.Svg.ISvgNode"/></returns>
        </member>
        <member name="T:AntdUI.Svg.SvgDefaults">
            <summary>
            Holds a dictionary of the default values of the SVG specification 
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgDefaults.IsDefault(System.String,System.String,System.String)">
            <summary>
            Checks whether the property value is the default value of the svg definition.
            </summary>
            <param name="attributeName">Name of the svg attribute</param>
            <param name="componentType">Class name of the svg element</param>
            <param name="value">.NET value of the attribute</param>
        </member>
        <member name="T:AntdUI.Svg.SvgDocument">
            <summary>
            The class used to create and load SVG documents.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgDocument.IdManager">
            <summary>
            Gets an <see cref="T:AntdUI.Svg.SvgElementIdManager"/> for this document.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgDocument.OverwriteIdManager(AntdUI.Svg.SvgElementIdManager)">
            <summary>
            Overwrites the current IdManager with a custom implementation. 
            Be careful with this: If elements have been inserted into the document before,
            you have to take care that the new IdManager also knows of them.
            </summary>
            <param name="manager"></param>
        </member>
        <member name="P:AntdUI.Svg.SvgDocument.Ppi">
            <summary>
            Gets or sets the Pixels Per Inch of the rendered image.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgDocument.GetElementById(System.String)">
            <summary>
            Retrieves the <see cref="T:AntdUI.Svg.SvgElement"/> with the specified ID.
            </summary>
            <param name="id">A <see cref="T:System.String"/> containing the ID of the element to find.</param>
            <returns>An <see cref="T:AntdUI.Svg.SvgElement"/> of one exists with the specified ID; otherwise false.</returns>
        </member>
        <member name="M:AntdUI.Svg.SvgDocument.GetElementById``1(System.String)">
            <summary>
            Retrieves the <see cref="T:AntdUI.Svg.SvgElement"/> with the specified ID.
            </summary>
            <param name="id">A <see cref="T:System.String"/> containing the ID of the element to find.</param>
            <returns>An <see cref="T:AntdUI.Svg.SvgElement"/> of one exists with the specified ID; otherwise false.</returns>
        </member>
        <member name="M:AntdUI.Svg.SvgDocument.Open``1(System.String)">
            <summary>
            Opens the document at the specified path and loads the SVG contents.
            </summary>
            <param name="path">A <see cref="T:System.String"/> containing the path of the file to open.</param>
            <param name="entities">A dictionary of custom entity definitions to be used when resolving XML entities within the document.</param>
            <returns>An <see cref="T:AntdUI.Svg.SvgDocument"/> with the contents loaded.</returns>
            <exception cref="T:System.IO.FileNotFoundException">The document at the specified <paramref name="path"/> cannot be found.</exception>
        </member>
        <member name="M:AntdUI.Svg.SvgDocument.FromSvg``1(System.String)">
            <summary>
            Attempts to create an SVG document from the specified string data.
            </summary>
            <param name="svg">The SVG data.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgDocument.Open``1(System.IO.Stream)">
            <summary>
            Opens an SVG document from the specified <see cref="T:System.IO.Stream"/> and adds the specified entities.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> containing the SVG document to open.</param>
            <param name="entities">Custom entity definitions.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> parameter cannot be <c>null</c>.</exception>
        </member>
        <member name="M:AntdUI.Svg.SvgDocument.Draw(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Renders the <see cref="T:AntdUI.Svg.SvgDocument"/> to the specified <see cref="T:AntdUI.Svg.ISvgRenderer"/>.
            </summary>
            <param name="renderer">The <see cref="T:AntdUI.Svg.ISvgRenderer"/> to render the document with.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="renderer"/> parameter cannot be <c>null</c>.</exception>
        </member>
        <member name="M:AntdUI.Svg.SvgDocument.Draw(System.Drawing.Graphics)">
            <summary>
            Renders the <see cref="T:AntdUI.Svg.SvgDocument"/> to the specified <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="graphics">The <see cref="T:System.Drawing.Graphics"/> to be rendered to.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="graphics"/> parameter cannot be <c>null</c>.</exception>
        </member>
        <member name="M:AntdUI.Svg.SvgDocument.Draw(System.Drawing.Graphics,System.Nullable{System.Drawing.SizeF})">
            <summary>
            Renders the <see cref="T:AntdUI.Svg.SvgDocument"/> to the specified <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="graphics">The <see cref="T:System.Drawing.Graphics"/> to be rendered to.</param>
            <param name="size">The <see cref="T:System.Drawing.SizeF"/> to render the document. If <c>null</c> document is rendered at the default document size.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="graphics"/> parameter cannot be <c>null</c>.</exception>
        </member>
        <member name="M:AntdUI.Svg.SvgDocument.Draw">
            <summary>
            Renders the <see cref="T:AntdUI.Svg.SvgDocument"/> and returns the image as a <see cref="T:System.Drawing.Bitmap"/>.
            </summary>
            <returns>A <see cref="T:System.Drawing.Bitmap"/> containing the rendered document.</returns>
        </member>
        <member name="M:AntdUI.Svg.SvgDocument.Draw(System.Drawing.Bitmap)">
            <summary>
            Renders the <see cref="T:AntdUI.Svg.SvgDocument"/> into a given Bitmap <see cref="T:System.Drawing.Bitmap"/>.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgDocument.Draw(System.Int32,System.Int32)">
            <summary>
            Renders the <see cref="T:AntdUI.Svg.SvgDocument"/> in given size and returns the image as a <see cref="T:System.Drawing.Bitmap"/>.
            If one of rasterWidth and rasterHeight is zero, the image is scaled preserving aspect ratio,
            otherwise the aspect ratio is ignored.
            </summary>
            <returns>A <see cref="T:System.Drawing.Bitmap"/> containing the rendered document.</returns>
        </member>
        <member name="M:AntdUI.Svg.SvgDocument.RasterizeDimensions(System.Drawing.SizeF@,System.Int32,System.Int32)">
            <summary>
            If both or one of raster height and width is not given (0), calculate that missing value from original SVG size
            while keeping original SVG size ratio
            </summary>
            <param name="size"></param>
            <param name="rasterWidth"></param>
            <param name="rasterHeight"></param>
        </member>
        <member name="T:AntdUI.Svg.SvgElement">
            <summary>
            The base class of which all SVG elements are derived from.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgElement.ElementName">
            <summary>
            Gets the name of the element.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgElement.Color">
            <summary>
            Gets or sets the color <see cref="T:AntdUI.Svg.SvgPaintServer"/> of this element which drives the currentColor property.
            </summary>
        </member>
        <member name="F:AntdUI.Svg.SvgElement._content">
            <summary>
            Gets or sets the content of the element.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgElement.Events">
            <summary>
            Gets an <see cref="T:System.ComponentModel.EventHandlerList"/> of all events belonging to the element.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgElement.Children">
            <summary>
            Gets a collection of all child <see cref="T:AntdUI.Svg.SvgElement"/> objects.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgElement.HasChildren">
            <summary>
            Gets a value to determine whether the element has children.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgElement.Parent">
            <summary>
            Gets the parent <see cref="T:AntdUI.Svg.SvgElement"/>.
            </summary>
            <value>An <see cref="T:AntdUI.Svg.SvgElement"/> if one exists; otherwise null.</value>
        </member>
        <member name="P:AntdUI.Svg.SvgElement.OwnerDocument">
            <summary>
            Gets the owner <see cref="T:AntdUI.Svg.SvgDocument"/>.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgElement.Attributes">
            <summary>
            Gets a collection of element attributes.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgElement.CustomAttributes">
            <summary>
            Gets a collection of custom attributes
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgElement.PushTransforms(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Applies the required transforms to <see cref="T:AntdUI.Svg.ISvgRenderer"/>.
            </summary>
            <param name="renderer">The <see cref="T:AntdUI.Svg.ISvgRenderer"/> to be transformed.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgElement.PopTransforms(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Removes any previously applied transforms from the specified <see cref="T:AntdUI.Svg.ISvgRenderer"/>.
            </summary>
            <param name="renderer">The <see cref="T:AntdUI.Svg.ISvgRenderer"/> that should have transforms removed.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgElement.AntdUI#Svg#ISvgTransformable#PushTransforms(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Applies the required transforms to <see cref="T:AntdUI.Svg.ISvgRenderer"/>.
            </summary>
            <param name="renderer">The <see cref="T:AntdUI.Svg.ISvgRenderer"/> to be transformed.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgElement.AntdUI#Svg#ISvgTransformable#PopTransforms(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Removes any previously applied transforms from the specified <see cref="T:AntdUI.Svg.ISvgRenderer"/>.
            </summary>
            <param name="renderer">The <see cref="T:AntdUI.Svg.ISvgRenderer"/> that should have transforms removed.</param>
        </member>
        <member name="P:AntdUI.Svg.SvgElement.Transforms">
            <summary>
            Gets or sets the element transforms.
            </summary>
            <value>The transforms.</value>
        </member>
        <member name="M:AntdUI.Svg.SvgElement.TransformedBounds(System.Drawing.RectangleF)">
            <summary>
            Transforms the given rectangle with the set transformation, if any.
            Can be applied to bounds calculated without considering the element transformation. 
            </summary>
            <param name="bounds">The rectangle to be transformed.</param>
            <returns>The transformed rectangle, or the original rectangle if no transformation exists.</returns>
        </member>
        <member name="P:AntdUI.Svg.SvgElement.ID">
            <summary>
            Gets or sets the ID of the element.
            </summary>
            <exception cref="T:AntdUI.Svg.SvgException">The ID is already used within the <see cref="T:AntdUI.Svg.SvgDocument"/>.</exception>
        </member>
        <member name="P:AntdUI.Svg.SvgElement.SpaceHandling">
            <summary>
            Gets or sets the space handling.
            </summary>
            <value>The space handling.</value>
        </member>
        <member name="M:AntdUI.Svg.SvgElement.ForceUniqueID(System.String)">
            <summary>
            Only used by the ID Manager
            </summary>
            <param name="newID"></param>
        </member>
        <member name="M:AntdUI.Svg.SvgElement.AddElement(AntdUI.Svg.SvgElement,System.Int32)">
            <summary>
            Called by the underlying <see cref="T:AntdUI.Svg.SvgElement"/> when an element has been added to the
            <see cref="P:AntdUI.Svg.SvgElement.Children"/> collection.
            </summary>
            <param name="child">The <see cref="T:AntdUI.Svg.SvgElement"/> that has been added.</param>
            <param name="index">An <see cref="T:System.Int32"/> representing the index where the element was added to the collection.</param>
        </member>
        <member name="E:AntdUI.Svg.SvgElement.ChildAdded">
            <summary>
            Fired when an Element was added to the children of this Element
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgElement.OnElementAdded(AntdUI.Svg.SvgElement,System.Int32)">
            <summary>
            Calls the <see cref="M:AntdUI.Svg.SvgElement.AddElement(AntdUI.Svg.SvgElement,System.Int32)"/> method with the specified parameters.
            </summary>
            <param name="child">The <see cref="T:AntdUI.Svg.SvgElement"/> that has been added.</param>
            <param name="index">An <see cref="T:System.Int32"/> representing the index where the element was added to the collection.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgElement.RemoveElement(AntdUI.Svg.SvgElement)">
            <summary>
            Called by the underlying <see cref="T:AntdUI.Svg.SvgElement"/> when an element has been removed from the
            <see cref="P:AntdUI.Svg.SvgElement.Children"/> collection.
            </summary>
            <param name="child">The <see cref="T:AntdUI.Svg.SvgElement"/> that has been removed.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgElement.OnElementRemoved(AntdUI.Svg.SvgElement)">
            <summary>
            Calls the <see cref="M:AntdUI.Svg.SvgElement.RemoveElement(AntdUI.Svg.SvgElement)"/> method with the specified <see cref="T:AntdUI.Svg.SvgElement"/> as the parameter.
            </summary>
            <param name="child">The <see cref="T:AntdUI.Svg.SvgElement"/> that has been removed.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AntdUI.Svg.SvgElement"/> class.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgElement.RenderElement(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Renders this element to the <see cref="T:AntdUI.Svg.ISvgRenderer"/>.
            </summary>
            <param name="renderer">The <see cref="T:AntdUI.Svg.ISvgRenderer"/> that the element should use to render itself.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgElement.ShouldWriteElement">
            <summary>Derrived classes may decide that the element should not be written. For example, the text element shouldn't be written if it's empty.</summary>
        </member>
        <member name="M:AntdUI.Svg.SvgElement.Render(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Renders the <see cref="T:AntdUI.Svg.SvgElement"/> and contents to the specified <see cref="T:AntdUI.Svg.ISvgRenderer"/> object.
            </summary>
            <param name="renderer">The <see cref="T:AntdUI.Svg.ISvgRenderer"/> object to render to.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgElement.RenderChildren(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Renders the children of this <see cref="T:AntdUI.Svg.SvgElement"/>.
            </summary>
            <param name="renderer">The <see cref="T:AntdUI.Svg.ISvgRenderer"/> to render the child <see cref="T:AntdUI.Svg.SvgElement"/>s to.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgElement.AntdUI#Svg#ISvgElement#Render(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Renders the <see cref="T:AntdUI.Svg.SvgElement"/> and contents to the specified <see cref="T:AntdUI.Svg.ISvgRenderer"/> object.
            </summary>
            <param name="renderer">The <see cref="T:AntdUI.Svg.ISvgRenderer"/> object to render to.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgElement.AddPaths(AntdUI.Svg.SvgElement,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Recursive method to add up the paths of all children
            </summary>
            <param name="elem"></param>
            <param name="path"></param>
        </member>
        <member name="M:AntdUI.Svg.SvgElement.GetPaths(AntdUI.Svg.SvgElement,AntdUI.Svg.ISvgRenderer)">
            <summary>
            Recursive method to add up the paths of all children
            </summary>
            <param name="elem"></param>
            <param name="renderer"></param>
        </member>
        <member name="M:AntdUI.Svg.SvgElement.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="E:AntdUI.Svg.SvgElement.ContentChanged">
            <summary>
            Fired when an Atrribute of this Element has changed
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgElement.IsPathDirty">
            <summary>
            Gets or sets a value indicating whether this element's 'Path' is dirty.
            </summary>
            <value>
            	<c>true</c> if the path is dirty; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:AntdUI.Svg.SvgElement.InvalidateChildPaths">
            <summary>
            Force recreation of the paths for the element and it's children.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgElement.Fill">
            <summary>
            Gets or sets the fill <see cref="T:AntdUI.Svg.SvgPaintServer"/> of this element.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgElement.Stroke">
            <summary>
            Gets or sets the <see cref="T:AntdUI.Svg.SvgPaintServer"/> to be used when rendering a stroke around this element.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgElement.FillOpacity">
            <summary>
            Gets or sets the opacity of this element's <see cref="P:AntdUI.Svg.SvgElement.Fill"/>.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgElement.StrokeWidth">
            <summary>
            Gets or sets the width of the stroke (if the <see cref="P:AntdUI.Svg.SvgElement.Stroke"/> property has a valid value specified.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgElement.StrokeOpacity">
            <summary>
            Gets or sets the opacity of the stroke, if the <see cref="P:AntdUI.Svg.SvgElement.Stroke"/> property has been specified. 1.0 is fully opaque; 0.0 is transparent.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgElement.StopColor">
            <summary>
            Gets or sets the colour of the gradient stop.
            </summary>
            <remarks>Apparently this can be set on non-sensical elements.  Don't ask; just check the tests.</remarks>
        </member>
        <member name="P:AntdUI.Svg.SvgElement.Opacity">
            <summary>
            Gets or sets the opacity of the element. 1.0 is fully opaque; 0.0 is transparent.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgElement.ShapeRendering">
            <summary>
            Refers to the AnitAlias rendering of shapes.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgElement.TextAnchor">
            <summary>
            Gets or sets the text anchor.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgElement.BaselineShift">
            <summary>
            Specifies dominant-baseline positioning of text.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgElement.FontFamily">
            <summary>
            Indicates which font family is to be used to render the text.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgElement.FontSize">
            <summary>
            Refers to the size of the font from baseline to baseline when multiple lines of text are set solid in a multiline layout environment.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgElement.FontStyle">
            <summary>
            Refers to the style of the font.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgElement.FontVariant">
            <summary>
            Refers to the varient of the font.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgElement.TextDecoration">
            <summary>
            Refers to the boldness of the font.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgElement.FontWeight">
            <summary>
            Refers to the boldness of the font.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgElement.TextTransformation">
            <summary>
            Refers to the text transformation.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgElement.Font">
            <summary>
            Set all font information.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgElement.GetFont(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Get the font information based on data stored with the text object or inherited from the parent.
            </summary>
            <returns></returns>
        </member>
        <member name="T:AntdUI.Svg.AttributeEventArgs">
            <summary>
            Describes the Attribute which was set
            </summary>
        </member>
        <member name="T:AntdUI.Svg.ContentEventArgs">
            <summary>
            Content of this whas was set
            </summary>
        </member>
        <member name="T:AntdUI.Svg.ChildAddedEventArgs">
            <summary>
            Describes the Attribute which was set
            </summary>
        </member>
        <member name="T:AntdUI.Svg.StringArg">
            <summary>
            Represents a string argument
            </summary>
        </member>
        <member name="F:AntdUI.Svg.MouseScrollArg.AltKey">
            <summary>
            Alt modifier key pressed
            </summary>
        </member>
        <member name="F:AntdUI.Svg.MouseScrollArg.ShiftKey">
            <summary>
            Shift modifier key pressed
            </summary>
        </member>
        <member name="F:AntdUI.Svg.MouseScrollArg.CtrlKey">
            <summary>
            Control modifier key pressed
            </summary>
        </member>
        <member name="T:AntdUI.Svg.ISvgDescriptiveElement">
            <summary>This interface mostly indicates that a node is not to be drawn when rendering the SVG.</summary>
        </member>
        <member name="T:AntdUI.Svg.SvgElementCollection">
            <summary>
            Represents a collection of <see cref="T:AntdUI.Svg.SvgElement"/>s.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgElementCollection.#ctor(AntdUI.Svg.SvgElement)">
            <summary>
            Initialises a new instance of an <see cref="T:AntdUI.Svg.SvgElementCollection"/> class.
            </summary>
            <param name="owner">The owner <see cref="T:AntdUI.Svg.SvgElement"/> of the collection.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgElementCollection.IndexOf(AntdUI.Svg.SvgElement)">
            <summary>
            Returns the index of the specified <see cref="T:AntdUI.Svg.SvgElement"/> in the collection.
            </summary>
            <param name="item">The <see cref="T:AntdUI.Svg.SvgElement"/> to search for.</param>
            <returns>The index of the element if it is present; otherwise -1.</returns>
        </member>
        <member name="M:AntdUI.Svg.SvgElementCollection.Insert(System.Int32,AntdUI.Svg.SvgElement)">
            <summary>
            Inserts the given <see cref="T:AntdUI.Svg.SvgElement"/> to the collection at the specified index.
            </summary>
            <param name="index">The index that the <paramref name="item"/> should be added at.</param>
            <param name="item">The <see cref="T:AntdUI.Svg.SvgElement"/> to be added.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgElementCollection.FindSvgElementsOf``1">
            <summary>
            expensive recursive search for nodes of type T
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:AntdUI.Svg.SvgElementCollection.FindSvgElementOf``1">
            <summary>
            expensive recursive search for first node of type T
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:AntdUI.Svg.SvgElementFactory">
            <summary>
            Provides the methods required in order to parse and create <see cref="T:AntdUI.Svg.SvgElement"/> instances from XML.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgElementFactory.CreateDocument``1(System.Xml.XmlReader)">
            <summary>
            Creates an <see cref="T:AntdUI.Svg.SvgDocument"/> from the current node in the specified <see cref="T:System.Xml.XmlTextReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlTextReader"/> containing the node to parse into an <see cref="T:AntdUI.Svg.SvgDocument"/>.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="reader"/> parameter cannot be <c>null</c>.</exception>
            <exception cref="T:System.InvalidOperationException">The CreateDocument method can only be used to parse root &lt;svg&gt; elements.</exception>
        </member>
        <member name="M:AntdUI.Svg.SvgElementFactory.CreateElement(System.Xml.XmlReader,AntdUI.Svg.SvgDocument)">
            <summary>
            Creates an <see cref="T:AntdUI.Svg.SvgElement"/> from the current node in the specified <see cref="T:System.Xml.XmlTextReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlTextReader"/> containing the node to parse into a subclass of <see cref="T:AntdUI.Svg.SvgElement"/>.</param>
            <param name="document">The <see cref="T:AntdUI.Svg.SvgDocument"/> that the created element belongs to.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="reader"/> and <paramref name="document"/> parameters cannot be <c>null</c>.</exception>
        </member>
        <member name="T:AntdUI.Svg.SvgElementIdManager">
            <summary>
            Provides methods to ensure element ID's are valid and unique.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgElementIdManager.GetElementById(System.String)">
            <summary>
            Retrieves the <see cref="T:AntdUI.Svg.SvgElement"/> with the specified ID.
            </summary>
            <param name="id">A <see cref="T:System.String"/> containing the ID of the element to find.</param>
            <returns>An <see cref="T:AntdUI.Svg.SvgElement"/> of one exists with the specified ID; otherwise false.</returns>
        </member>
        <member name="M:AntdUI.Svg.SvgElementIdManager.Add(AntdUI.Svg.SvgElement)">
            <summary>
            Adds the specified <see cref="T:AntdUI.Svg.SvgElement"/> for ID management.
            </summary>
            <param name="element">The <see cref="T:AntdUI.Svg.SvgElement"/> to be managed.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgElementIdManager.AddAndForceUniqueID(AntdUI.Svg.SvgElement,AntdUI.Svg.SvgElement,System.Boolean,System.Action{AntdUI.Svg.SvgElement,System.String,System.String})">
            <summary>
            Adds the specified <see cref="T:AntdUI.Svg.SvgElement"/> for ID management. 
            And can auto fix the ID if it already exists or it starts with a number.
            </summary>
            <param name="element">The <see cref="T:AntdUI.Svg.SvgElement"/> to be managed.</param>
            <param name="sibling">Not used.</param>
            <param name="autoForceUniqueID">Pass true here, if you want the ID to be fixed</param>
            <param name="logElementOldIDNewID">If not null, the action is called before the id is fixed</param>
            <returns>true, if ID was altered</returns>
        </member>
        <member name="M:AntdUI.Svg.SvgElementIdManager.Remove(AntdUI.Svg.SvgElement)">
            <summary>
            Removed the specified <see cref="T:AntdUI.Svg.SvgElement"/> from ID management.
            </summary>
            <param name="element">The <see cref="T:AntdUI.Svg.SvgElement"/> to be removed from ID management.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgElementIdManager.EnsureValidId(System.String,System.Boolean)">
            <summary>
            Ensures that the specified ID is valid within the containing <see cref="T:AntdUI.Svg.SvgDocument"/>.
            </summary>
            <param name="id">A <see cref="T:System.String"/> containing the ID to validate.</param>
            <param name="autoForceUniqueID">Creates a new unique id <see cref="T:System.String"/>.</param>
            <exception cref="T:AntdUI.Svg.SvgException">
            <para>The ID cannot start with a digit.</para>
            <para>An element with the same ID already exists within the containing <see cref="T:AntdUI.Svg.SvgDocument"/>.</para>
            </exception>
        </member>
        <member name="M:AntdUI.Svg.SvgElementIdManager.#ctor(AntdUI.Svg.SvgDocument)">
            <summary>
            Initialises a new instance of an <see cref="T:AntdUI.Svg.SvgElementIdManager"/>.
            </summary>
            <param name="document">The <see cref="T:AntdUI.Svg.SvgDocument"/> containing the <see cref="T:AntdUI.Svg.SvgElement"/>s to manage.</param>
        </member>
        <member name="T:AntdUI.Svg.SvgFontManager">
            <summary>
            Manages access to <see cref="F:AntdUI.Svg.SvgFontManager.SystemFonts"/> and any privately loaded fonts.
            When a font is requested in the render process, if the font is not found as an embedded SvgFont, the render
            process will SvgFontManager.FindFont method.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgFontManager.FindFont(System.String)">
            <summary>
            This method searches a dictionary of fonts (pre loaded with the system fonts). If a
            font can't be found and a callback has been provided - then the callback should perform
            any validation and return a font (or null if not found/error).
            Where a font can't be located it is the responsibility of the caller to perform any
            exception handling.
            </summary>
            <param name="name">A <see cref="T:System.String"/> containing the FamilyName of the font.</param>
            <returns>An <see cref="T:System.Drawing.FontFamily"/> of the loaded font or null is not located.</returns>
        </member>
        <member name="T:AntdUI.Svg.Text.FontFamily">
            <summary>
            http://stackoverflow.com/questions/3633000/net-enumerate-winforms-font-styles
            </summary>
        </member>
        <member name="M:AntdUI.Svg.PathStatistics.CubicBezierSegment.GaussianQuadrature(System.Func{System.Double,System.Double},System.Double,System.Double,System.Int32)">
            <summary>
            Evaluates the integral of the function over the integral using the specified number of points
            </summary>
            <param name="func"></param>
            <param name="a"></param>
            <param name="b"></param>
            <param name="points"></param>
        </member>
        <member name="M:AntdUI.Svg.PathStatistics.CubicBezierSegment.CubicBezierCurve(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Double)">
            <remarks>http://en.wikipedia.org/wiki/B%C3%A9zier_curve</remarks>
        </member>
        <member name="M:AntdUI.Svg.PathStatistics.CubicBezierSegment.CubicBezierDerivative(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Double)">
            <remarks>http://www.cs.mtu.edu/~shene/COURSES/cs3621/NOTES/spline/Bezier/bezier-der.html</remarks>
        </member>
        <member name="P:AntdUI.Svg.SvgFontFace.FontFamily">
            <summary>
            Indicates which font family is to be used to render the text.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgFontFace.FontSize">
            <summary>
            Refers to the size of the font from baseline to baseline when multiple lines of text are set solid in a multiline layout environment.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgFontFace.FontStyle">
            <summary>
            Refers to the style of the font.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgFontFace.FontVariant">
            <summary>
            Refers to the varient of the font.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgFontFace.FontWeight">
            <summary>
            Refers to the boldness of the font.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgGlyph.PathData">
            <summary>
            Gets or sets a <see cref="T:AntdUI.Svg.Pathing.SvgPathSegmentList"/> of path data.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgGlyph.Path(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Gets the <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for this element.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgGlyph.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AntdUI.Svg.SvgGlyph"/> class.
            </summary>
        </member>
        <member name="T:AntdUI.Svg.SvgText">
            <summary>
            The <see cref="T:AntdUI.Svg.SvgText"/> element defines a graphics element consisting of text.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgText.#ctor">
            <summary>
            Initializes the <see cref="T:AntdUI.Svg.SvgText"/> class.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.SvgText.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AntdUI.Svg.SvgText"/> class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="T:AntdUI.Svg.SvgTextAnchor">
            <summary>
            Text anchor is used to align (start-, middle- or end-alignment) a string of text relative to a given point.
            </summary>
        </member>
        <member name="F:AntdUI.Svg.SvgTextAnchor.Inherit">
            <summary>The value is inherited from the parent element.</summary>
        </member>
        <member name="F:AntdUI.Svg.SvgTextAnchor.Start">
            <summary>
            The rendered characters are aligned such that the start of the text string is at the initial current text position.
            </summary>
        </member>
        <member name="F:AntdUI.Svg.SvgTextAnchor.Middle">
            <summary>
            The rendered characters are aligned such that the middle of the text string is at the current text position.
            </summary>
        </member>
        <member name="F:AntdUI.Svg.SvgTextAnchor.End">
            <summary>
            The rendered characters are aligned such that the end of the text string is at the initial current text position.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgTextBase.Text">
            <summary>
            Gets or sets the text to be rendered.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgTextBase.X">
            <summary>
            Gets or sets the X.
            </summary>
            <value>The X.</value>
        </member>
        <member name="P:AntdUI.Svg.SvgTextBase.Dx">
            <summary>
            Gets or sets the dX.
            </summary>
            <value>The dX.</value>
        </member>
        <member name="P:AntdUI.Svg.SvgTextBase.Y">
            <summary>
            Gets or sets the Y.
            </summary>
            <value>The Y.</value>
        </member>
        <member name="P:AntdUI.Svg.SvgTextBase.Dy">
            <summary>
            Gets or sets the dY.
            </summary>
            <value>The dY.</value>
        </member>
        <member name="P:AntdUI.Svg.SvgTextBase.Rotate">
            <summary>
            Gets or sets the rotate.
            </summary>
            <value>The rotate.</value>
        </member>
        <member name="P:AntdUI.Svg.SvgTextBase.TextLength">
            <summary>
            The pre-calculated length of the text
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgTextBase.LengthAdjust">
            <summary>
            Gets or sets the text anchor.
            </summary>
            <value>The text anchor.</value>
        </member>
        <member name="P:AntdUI.Svg.SvgTextBase.LetterSpacing">
            <summary>
            Specifies spacing behavior between text characters.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgTextBase.WordSpacing">
            <summary>
            Specifies spacing behavior between words.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.SvgTextBase.Fill">
            <summary>
            Gets or sets the fill.
            </summary>
            <remarks>
            <para>Unlike other <see cref="T:AntdUI.Svg.SvgVisualElement"/>s, <see cref="T:AntdUI.Svg.SvgText"/> has a default fill of black rather than transparent.</para>
            </remarks>
            <value>The fill.</value>
        </member>
        <member name="M:AntdUI.Svg.SvgTextBase.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:AntdUI.Svg.SvgTextBase.Bounds">
            <summary>
            Gets the bounds of the element.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="M:AntdUI.Svg.SvgTextBase.Render(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Renders the <see cref="T:AntdUI.Svg.SvgElement"/> and contents to the specified <see cref="T:System.Drawing.Graphics"/> object.
            </summary>
            <param name="renderer">The <see cref="T:AntdUI.Svg.ISvgRenderer"/> object to render to.</param>
            <remarks>Necessary to make sure that any internal tspan elements get rendered as well</remarks>
        </member>
        <member name="M:AntdUI.Svg.SvgTextBase.Path(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Gets the <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for this element.
            </summary>
            <value></value>
        </member>
        <member name="M:AntdUI.Svg.SvgTextBase.SetPath(AntdUI.Svg.SvgTextBase.TextDrawingState,System.Boolean)">
            <summary>
            Sets the path on this element and all child elements.  Uses the state
            object to track the state of the drawing
            </summary>
            <param name="state">State of the drawing operation</param>
            <param name="doMeasurements">If true, calculate and apply text length adjustments.</param>
        </member>
        <member name="M:AntdUI.Svg.SvgTextBase.PrepareText(System.String)">
            <summary>
            Prepare the text according to the whitespace handling rules and text transformations.  <see href="http://www.w3.org/TR/SVG/text.html">SVG Spec</see>.
            </summary>
            <param name="value">Text to be prepared</param>
            <returns>Prepared text</returns>
        </member>
        <member name="M:AntdUI.Svg.SvgTextBase.ShouldWriteElement">
            <summary>Empty text elements are not legal - only write this element if it has children.</summary>
        </member>
        <member name="T:AntdUI.Svg.SvgTextPath">
            <summary>
            The <see cref="T:AntdUI.Svg.SvgText"/> element defines a graphics element consisting of text.
            </summary>
        </member>
        <member name="T:AntdUI.Svg.ISvgTransformable">
            <summary>
            Represents and element that may be transformed.
            </summary>
        </member>
        <member name="P:AntdUI.Svg.ISvgTransformable.Transforms">
            <summary>
            Gets or sets an <see cref="T:AntdUI.Svg.Transforms.SvgTransformCollection"/> of element transforms.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.ISvgTransformable.PushTransforms(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Applies the required transforms to <see cref="T:AntdUI.Svg.ISvgRenderer"/>.
            </summary>
            <param name="renderer">The <see cref="T:AntdUI.Svg.ISvgRenderer"/> to be transformed.</param>
        </member>
        <member name="M:AntdUI.Svg.ISvgTransformable.PopTransforms(AntdUI.Svg.ISvgRenderer)">
            <summary>
            Removes any previously applied transforms from the specified <see cref="T:AntdUI.Svg.ISvgRenderer"/>.
            </summary>
            <param name="renderer">The <see cref="T:AntdUI.Svg.ISvgRenderer"/> that should have transforms removed.</param>
        </member>
        <member name="T:AntdUI.Svg.Transforms.SvgMatrix">
            <summary>
            The class which applies custom transform to this Matrix (Required for projects created by the Inkscape).
            </summary>
        </member>
        <member name="T:AntdUI.Svg.Transforms.SvgShear">
            <summary>
            The class which applies the specified shear vector to this Matrix.
            </summary>
        </member>
        <member name="T:AntdUI.Svg.Transforms.SvgSkew">
            <summary>
            The class which applies the specified skew vector to this Matrix.
            </summary>
        </member>
        <member name="M:AntdUI.Svg.Transforms.SvgTransformCollection.GetMatrix">
            <summary>
            Multiplies all matrices
            </summary>
            <returns>The result of all transforms</returns>
        </member>
        <member name="E:AntdUI.Svg.Transforms.SvgTransformCollection.TransformChanged">
            <summary>
            Fired when an SvgTransform has changed
            </summary>
        </member>
        <member name="M:AntdUI.Win32.SendMessage(System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            <para>该函数将指定的消息发送到一个或多个窗口。</para>
            <para>此函数为指定的窗口调用窗口程序直到窗口程序处理完消息再返回。</para>
            <para>而函数PostMessage不同，将一个消息寄送到一个线程的消息队列后立即返回。</para>
            return 返回值 : 指定消息处理的结果，依赖于所发送的消息。
            </summary>
            <param name="hWnd">要接收消息的那个窗口的句柄</param>
            <param name="Msg">消息的标识符</param>
            <param name="wParam">具体取决于消息</param>
            <param name="lParam">具体取决于消息</param>
        </member>
        <member name="M:AntdUI.Win32.UpdateLayeredWindow(System.IntPtr,System.IntPtr,AntdUI.Win32.Win32Point@,AntdUI.Win32.Win32Size@,System.IntPtr,AntdUI.Win32.Win32Point@,System.Int32,AntdUI.Win32.BLENDFUNCTION@,System.Int32)">
            <summary>
            
            </summary>
            <param name="hwnd">一个分层窗口的句柄。分层窗口在用CreateWindowEx函数创建窗口时应指定WS_EX_LAYERED扩展样式。 Windows 8： WS_EX_LAYERED扩展样式支持顶级窗口和子窗口。之前的Windows版本中WS_EX_LAYERED扩展样式仅支持顶级窗口</param>
            <param name="hdcDst">屏幕的设备上下文(DC)句柄。如果指定为NULL，那么将会在调用函数时自己获得。它用来在窗口内容更新时与调色板颜色匹配。如果hdcDst为NULL，将会使用默认调色板。如果hdcSrc指定为NULL，那么hdcDst必须指定为NULL。</param>
            <param name="pptDst">指向分层窗口相对于屏幕的位置的POINT结构的指针。如果保持当前位置不变，pptDst可以指定为NULL。</param>
            <param name="psize">指向分层窗口的大小的SIZE结构的指针。如果窗口的大小保持不变，psize可以指定为NULL。如果hdcSrc指定为NULL，psize必须指定为NULL。</param>
            <param name="hdcSrc">分层窗口绘图表面的设备上下文句柄。这个句柄可以通过调用函数CreateCompatibleDC获得。如果窗口的形状和可视范围保持不变，hdcSrc可以指定为NULL。</param>
            <param name="pptSrc">指向分层窗口绘图表面在设备上下文位置的POINT结构的指针。如果hdcSrc指定为NULL，pptSrc就应该指定为NULL。</param>
            <param name="crKey">指定合成分层窗口时使用的颜色值。要生成一个类型为COLORREF的值，使用RGB宏。</param>
            <param name="pblend">指向指定合成分层窗口时使用的透明度结构的指针。</param>
            <param name="dwFlags">可以是以下值之一。如果hdcSrc指定为NULL，dwFlags应该指定为0。</param>
            <returns></returns>
        </member>
        <member name="T:AntdUI.Localization">
            <summary>
            本地化
            </summary>
        </member>
        <member name="P:AntdUI.Localization.Provider">
            <summary>
            本地化提供程序
            </summary>
        </member>
        <member name="M:AntdUI.ILocalization.GetLocalizedString(System.String)">
            <summary>
            获取本地化字符串
            </summary>
            <returns>本地化字符串</returns>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.Primary">
            <summary>
            品牌色
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.PrimaryColor">
            <summary>
            文本颜色
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.PrimaryHover">
            <summary>
            主色悬浮态（按钮、开关、复选框）
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.PrimaryActive">
            <summary>
            主色激活态（按钮动画）
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.PrimaryBg">
            <summary>
            主色背景色（按钮底部、下拉激活、文本框激活、菜单激活）
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.Success">
            <summary>
            成功色
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.SuccessColor">
            <summary>
            文本颜色
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.SuccessBg">
            <summary>
            成功色的背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.SuccessBorder">
            <summary>
            成功色的描边色
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.SuccessHover">
            <summary>
            成功色的悬浮态
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.SuccessActive">
            <summary>
            成功色的激活态
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.Warning">
            <summary>
            警戒色
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.WarningColor">
            <summary>
            文本颜色
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.WarningBg">
            <summary>
            警戒色的背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.WarningBorder">
            <summary>
            警戒色的描边色
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.WarningHover">
            <summary>
            警戒色的悬浮态
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.WarningActive">
            <summary>
            警戒色的激活态
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.Error">
            <summary>
            错误色
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.ErrorColor">
            <summary>
            文本颜色
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.ErrorBg">
            <summary>
            警戒色的背景颜色（按钮底部）
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.ErrorBorder">
            <summary>
            警戒色的描边色
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.ErrorHover">
            <summary>
            错误色的悬浮态
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.ErrorActive">
            <summary>
            错误色的激活态
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.Info">
            <summary>
            信息色
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.InfoColor">
            <summary>
            文本颜色
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.InfoBg">
            <summary>
            信息色的背景颜色（按钮底部）
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.InfoBorder">
            <summary>
            信息色的描边色
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.InfoHover">
            <summary>
            信息色的悬浮态
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.InfoActive">
            <summary>
            信息色的激活态
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.TextBase">
            <summary>
            基础文本色
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.Text">
            <summary>
            一级文本色（菜单颜色、非激活下颜色、小清除按钮悬浮态）
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.TextSecondary">
            <summary>
            二级文本色
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.TextTertiary">
            <summary>
            三级文本色（小清除按钮）
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.TextQuaternary">
            <summary>
            四级文本色（禁用色）
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.BgBase">
            <summary>
            基础背景色
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.BgContainer">
            <summary>
            组件的容器背景色 例如：默认按钮、输入框等。务必不要将其与 `colorBgElevated` 混淆。
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.BgElevated">
            <summary>
            浮层容器背景色，在暗色模式下该 token 的色值会比 `colorBgContainer` 要亮一些。例如：模态框、弹出框、菜单等。
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.BgLayout">
            <summary>
            该色用于页面整体布局的背景色，只有需要在页面中处于 B1 的视觉层级时才会使用该 token，其他用法都是错误的
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.Fill">
            <summary>
            一级填充色
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.FillSecondary">
            <summary>
            二级填充色（分页悬浮态、菜单悬浮态）
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.FillTertiary">
            <summary>
            三级填充色（下拉悬浮态）
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.FillQuaternary">
            <summary>
            四级填充色（幽灵按钮底部）
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.BorderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.BorderColorDisable">
            <summary>
            禁用边框颜色
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.Split">
            <summary>
            用于作为分割线的颜色，此颜色和 BorderSecondary 的颜色一致，但是用的是透明色
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.HoverBg">
            <summary>
            选项悬浮态背景颜色
            </summary>
        </member>
        <member name="P:AntdUI.Theme.IColor`1.HoverColor">
            <summary>
            选项悬浮态文本颜色
            </summary>
        </member>
        <member name="M:AntdUI.Style.LoadCustom(AntdUI.Theme.IColor{System.Drawing.Color})">
            <summary>
            加载自定义主题
            </summary>
            <param name="style"></param>
        </member>
        <member name="M:AntdUI.Style.ColorMode(System.Drawing.Color)">
            <summary>
            色彩模式（浅色、暗色）
            </summary>
            <returns>true Light;false Dark</returns>
        </member>
        <member name="M:AntdUI.Style.GenerateColor(AntdUI.HSV,System.Int32,System.Boolean)">
            <summary>
            生成色卡
            </summary>
            <param name="h">色调</param>
            <param name="s">饱和度</param>
            <param name="v">亮度</param>
            <param name="i">序号</param>
            <param name="isLight">是否浅色</param>
        </member>
        <member name="M:AntdUI.Style.ToHSV(System.Drawing.Color)">
            <summary>
            颜色转HSV
            </summary>
        </member>
        <member name="M:AntdUI.Style.HSVToColor(AntdUI.HSV,System.Single)">
            <summary>
            HSV转颜色
            </summary>
        </member>
        <member name="M:AntdUI.Style.HSVToColor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            HSV转颜色
            </summary>
            <param name="hue">色相</param>
            <param name="saturation">饱和度</param>
            <param name="value">明度</param>
            <param name="alpha">透明度</param>
        </member>
        <member name="M:AntdUI.Style.ToHSL(System.Drawing.Color)">
            <summary>
            颜色转HSL
            </summary>
        </member>
        <member name="M:AntdUI.Style.HSLToColor(AntdUI.HSL,System.Single)">
            <summary>
            HSL转颜色
            </summary>
        </member>
        <member name="M:AntdUI.Style.HSLToColor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            HSL转颜色
            </summary>
            <param name="hue">色相</param>
            <param name="saturation">饱和度</param>
            <param name="lightness">亮度</param>
            <param name="alpha">透明度</param>
        </member>
        <member name="M:AntdUI.Style.ToColor(System.String)">
            <summary>
            颜色：16进制转成RGB
            </summary>
            <param name="hex">设置16进制颜色 [返回RGB]</param>
            <returns></returns>
        </member>
        <member name="M:AntdUI.Style.ToHex(System.Drawing.Color)">
            <summary>
            颜色：RGB转成16进制
            </summary>
            <returns></returns>
        </member>
        <member name="P:AntdUI.HSL.h">
            <summary>
            色相 取值范围为[0,360]
            </summary>
        </member>
        <member name="P:AntdUI.HSL.s">
            <summary>
            饱和度 取值范围为[0,100]，表示颜色的深浅程度
            </summary>
        </member>
        <member name="P:AntdUI.HSL.l">
            <summary>
            亮度 取值范围为[0,100]，表示颜色的明暗程度
            </summary>
        </member>
        <member name="P:AntdUI.HSV.h">
            <summary>
            色相
            </summary>
        </member>
        <member name="P:AntdUI.HSV.s">
            <summary>
            饱和度
            </summary>
        </member>
        <member name="P:AntdUI.HSV.v">
            <summary>
            明度
            </summary>
        </member>
        <member name="T:ChineseCalendar.ChineseDate">
            <summary>
            中国农历日期
            </summary>
        </member>
        <member name="M:ChineseCalendar.ChineseDate.From(System.DateTime)">
            <summary>
            转换一个公历日期为农历日期
            </summary>
            <param name="date">公历日期</param>
            <exception cref="T:System.ArgumentOutOfRangeException">日期超出范围</exception>
            <returns>农历日期</returns>
        </member>
        <member name="M:ChineseCalendar.ChineseDate.FromIndex(System.Int32,System.Int32,System.Int32)">
            <summary>
            指定年月日索引，月/日可以为负数，负数表示倒数
            </summary>
            <param name="year">年份，范围为1901-2100</param>
            <param name="month">月份，允许值：1-12（当年不含闰月），1-13（当年含闰月）</param>
            <param name="day">日期，允许值：1-30（大月），1-29（小月）</param>
            <exception cref="T:System.ArgumentOutOfRangeException">日期超出范围</exception>
            <returns>农历日期</returns>
        </member>
        <member name="M:ChineseCalendar.ChineseDate.From(System.Int32,System.Int32,System.Int32)">
            <summary>
            指定年月日，月/日可以为负数，负数表示倒数
            </summary>
            <param name="year">年份，范围为1901-2100</param>
            <param name="month">月份，允许值：1-12，正数忽略闰月，负数忽略被闰月</param>
            <param name="day">日期，允许值：1-30（大月），1-29（小月）</param>
            <exception cref="T:System.ArgumentOutOfRangeException">日期超出范围</exception>
            <returns>农历日期</returns>
        </member>
        <member name="P:ChineseCalendar.ChineseDate.Year">
            <summary> 年份 </summary>
        </member>
        <member name="P:ChineseCalendar.ChineseDate.Month">
            <summary> 月份 </summary>
        </member>
        <member name="P:ChineseCalendar.ChineseDate.MonthIndex">
            <summary> 月份顺序，含闰月 </summary>
        </member>
        <member name="P:ChineseCalendar.ChineseDate.Day">
            <summary> 日期 </summary>
        </member>
        <member name="P:ChineseCalendar.ChineseDate.IsLeapMonth">
            <summary> 当前月是闰月 </summary>
        </member>
        <member name="P:ChineseCalendar.ChineseDate.LeapMonthOfYear">
            <summary> 当年的闰月，0表示无闰月，正常范围 1-12 </summary>
        </member>
        <member name="P:ChineseCalendar.ChineseDate.Today">
            <summary> 今天 </summary>
        </member>
        <member name="P:ChineseCalendar.ChineseDate.MinValue">
            <summary> 最小值 </summary> 
        </member>
        <member name="P:ChineseCalendar.ChineseDate.MaxValue">
            <summary> 最大值 </summary>
        </member>
        <member name="M:ChineseCalendar.ChineseDate.ToDate">
            <summary>
            返回当前农历日期对应的公历日期
            </summary>
            <returns>公历日期</returns>
        </member>
        <member name="M:ChineseCalendar.ChineseDate.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ChineseCalendar.ChineseDate.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:ChineseCalendar.ChineseDate.ToString">
            <inheritdoc/>
        </member>
        <member name="F:ChineseCalendar.ChineseDate.MONTHSTRING">
            <summary>  农历月 </summary>
        </member>
        <member name="F:ChineseCalendar.ChineseDate.DAYSTRING">
            <summary> 农历日 </summary>
        </member>
        <member name="F:ChineseCalendar.ChineseDate.CELESTIAL_STEMS">
            <summary> 十天干 </summary>
        </member>
        <member name="F:ChineseCalendar.ChineseDate.TERRESTRIAL_BRANCHS">
            <summary> 十二地支 </summary>
        </member>
        <member name="F:ChineseCalendar.ChineseDate.ANIMAL_SIGNS">
            <summary> 十二生肖 </summary>
        </member>
        <member name="F:ChineseCalendar.ChineseDate.DIGITALS">
            <summary> 数字 </summary>
        </member>
        <member name="P:ChineseCalendar.ChineseDate.CelestialStem">
            <summary> 天干 </summary>
        </member>
        <member name="P:ChineseCalendar.ChineseDate.TerrestrialBranch">
            <summary> 地支 </summary>
        </member>
        <member name="P:ChineseCalendar.ChineseDate.ChineseEra">
            <summary> 干支 </summary>
        </member>
        <member name="P:ChineseCalendar.ChineseDate.AnimalSign">
            <summary> 生肖属相 </summary>
        </member>
        <member name="P:ChineseCalendar.ChineseDate.DayOfWeek">
            <summary> 星期几 </summary>
        </member>
        <member name="P:ChineseCalendar.ChineseDate.DayOfYear">
            <summary> 一年中的第几天，闰年1-384，平年1-354 </summary>
        </member>
        <member name="P:ChineseCalendar.ChineseDate.DayInMonth">
            <summary> 当月总天数 </summary>
        </member>
        <member name="P:ChineseCalendar.ChineseDate.DayInYear">
            <summary> 当年总天数 </summary>
        </member>
        <member name="P:ChineseCalendar.ChineseDate.MonthsInYear">
            <summary> 当年总月份数 </summary>
        </member>
        <member name="P:ChineseCalendar.ChineseDate.CalendarName">
            <summary> 日历名称 </summary>
        </member>
        <member name="P:ChineseCalendar.ChineseDate.YearString">
            <summary> 年的字符串 </summary>
        </member>
        <member name="P:ChineseCalendar.ChineseDate.MonthString">
            <summary> 农历月 </summary>
        </member>
        <member name="P:ChineseCalendar.ChineseDate.DayString">
            <summary> 农历日 </summary>
        </member>
        <member name="M:ChineseCalendar.ChineseDate.AddYears(System.Int32)">
            <summary>
            增加年份数值，
            结果总会是非闰月的日期
            </summary>
            <param name="value">年份数值，可为负数</param>
            <returns>增加指定年份后的日期</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">日期超出范围</exception>
        </member>
        <member name="M:ChineseCalendar.ChineseDate.AddMonths(System.Int32)">
            <summary>
            增加月数，
            </summary>
            <param name="value">月数，可为负数</param>
            <returns>增加指定月数后的日期</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">日期超出范围</exception>
        </member>
        <member name="M:ChineseCalendar.ChineseDate.AddDays(System.Int32)">
            <summary>
            增加天数，
            </summary>
            <param name="value">天数，可为负数</param>
            <returns>增加指定天数后的日期</returns>
        </member>
        <member name="T:ChineseCalendar.ChineseFestival">
            <summary>
            农历节假日
            </summary>
        </member>
        <member name="P:ChineseCalendar.ChineseFestival.First">
            <summary> 节日的第一个日期 </summary>
        </member>
        <member name="M:ChineseCalendar.ChineseFestival.#ctor(System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            定义一个农历节假日
            </summary>
            <param name="name">节日名称</param>
            <param name="month">月份</param>
            <param name="day">日期</param>
            <param name="firstYear">第一个节日的年份，0表示无永恒</param>
            <param name="description">节日描述</param>
            <exception cref="T:System.ArgumentNullException">没有名称</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">日期超出范围</exception>
        </member>
        <member name="F:ChineseCalendar.ChineseFestival.SpringFestival">
            <summary> 春节 </summary>
        </member>
        <member name="F:ChineseCalendar.ChineseFestival.LanternFestival">
            <summary> 元宵节 </summary>
        </member>
        <member name="F:ChineseCalendar.ChineseFestival.DragonHeadraisingDay">
            <summary> 龙抬头 </summary>
        </member>
        <member name="F:ChineseCalendar.ChineseFestival.DragonBoatFestival">
            <summary> 端午 </summary>
        </member>
        <member name="F:ChineseCalendar.ChineseFestival.QixiFestival">
            <summary> 七夕 </summary>
        </member>
        <member name="F:ChineseCalendar.ChineseFestival.GhostFestival">
            <summary> 中元节 </summary>
        </member>
        <member name="F:ChineseCalendar.ChineseFestival.MidAutumnFestival">
            <summary> 中秋 </summary>
        </member>
        <member name="F:ChineseCalendar.ChineseFestival.DoubleNinthFestival">
            <summary> 重阳节 </summary>
        </member>
        <member name="F:ChineseCalendar.ChineseFestival.NewYearsEve">
            <summary> 除夕 </summary>
        </member>
        <member name="M:ChineseCalendar.ChineseFestival.TryGetDate(System.Int32,System.Int32,System.Int32,System.DateTime@)">
            <inheritdoc/>
        </member>
        <member name="M:ChineseCalendar.ChineseFestival.IsThisFestival(System.DateTime)">
            <inheritdoc/>
        </member>
        <member name="T:ChineseCalendar.Festival">
            <summary>
            节日
            </summary>
        </member>
        <member name="P:ChineseCalendar.Festival.Name">
            <summary> 节日名称 </summary>
        </member>
        <member name="P:ChineseCalendar.Festival.Description">
            <summary> 描述 </summary>
        </member>
        <member name="P:ChineseCalendar.Festival.FirstYear">
            <summary> 节日设立年份 </summary>
        </member>
        <member name="P:ChineseCalendar.Festival.Month">
            <summary> 月份 </summary>
        </member>
        <member name="P:ChineseCalendar.Festival.Day">
            <summary> 日期 </summary>
        </member>
        <member name="M:ChineseCalendar.Festival.GetLastDate(System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            获取指定公历日期前一个节日
            </summary>
            <param name="date">指定公历日期</param>
            <param name="containsThisDate">是否包含指定日期</param>
            <returns>前一个节日，null表示前面没有该节日</returns>
        </member>
        <member name="M:ChineseCalendar.Festival.GetNextDate(System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            获取指定公历日期后一个节日
            </summary>
            <param name="date">指定公历日期</param>
            <param name="containsThisDate">是否包含指定日期</param>
            <returns>后一个节日，null表示后面没有该节日</returns>
        </member>
        <member name="M:ChineseCalendar.Festival.IsThisFestival(System.DateTime)">
            <summary>
            判断指定公历日期是否本节日
            </summary>
            <param name="date">指定公历日期</param>
            <returns>true该日期是当前节日，否则不是</returns>
        </member>
        <member name="M:ChineseCalendar.Festival.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ChineseCalendar.Festival.GetAllDefined">
            <summary>
            返回所有预定义的节日
            </summary>
            <returns></returns>
        </member>
        <member name="T:ChineseCalendar.FixDateFestival">
            <summary>
            固定公历日期节假日
            </summary>
        </member>
        <member name="P:ChineseCalendar.FixDateFestival.First">
            <summary> 节日的第一个日期 </summary>
        </member>
        <member name="P:ChineseCalendar.FixDateFestival.Year">
            <summary> 年份 </summary>
        </member>
        <member name="P:ChineseCalendar.FixDateFestival.Date">
            <summary> 日期 </summary>
        </member>
        <member name="M:ChineseCalendar.FixDateFestival.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            定义一个固定公历日期节假日
            </summary>
            <param name="name">节日名称</param>
            <param name="year">年份</param>
            <param name="month">月份</param>
            <param name="day">日期</param>
            <param name="description">节日描述</param>
            <exception cref="T:System.ArgumentNullException">没有名称</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">年月日超出范围</exception>
        </member>
        <member name="M:ChineseCalendar.FixDateFestival.#ctor(System.String,System.DateTime,System.String)">
            <summary>
            定义一个固定公历日期节假日
            </summary>
            <param name="name">节日名称</param>
            <param name="date">节日的公历日期</param>
            <param name="description">节日描述</param>
            <exception cref="T:System.ArgumentNullException">没有名称</exception>
        </member>
        <member name="M:ChineseCalendar.FixDateFestival.GetLastDate(System.Nullable{System.DateTime},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ChineseCalendar.FixDateFestival.GetNextDate(System.Nullable{System.DateTime},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ChineseCalendar.FixDateFestival.IsThisFestival(System.DateTime)">
            <inheritdoc/>
        </member>
        <member name="T:ChineseCalendar.GregorianFestival">
            <summary>
            公历节假日
            </summary>
        </member>
        <member name="P:ChineseCalendar.GregorianFestival.First">
            <summary> 节日的第一个日期 </summary>
        </member>
        <member name="M:ChineseCalendar.GregorianFestival.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            定义一个公历节日
            </summary>
            <param name="name">节日名称</param>
            <param name="month">月份</param>
            <param name="day">日期</param>
            <param name="firstYear">第一个节日的年份，0表示无永恒</param>
            <param name="description">节日描述</param>
            <exception cref="T:System.ArgumentNullException">没有名称</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">日期超出范围</exception>
        </member>
        <member name="F:ChineseCalendar.GregorianFestival.NewYearsDay">
            <summary> 元旦 </summary>
        </member>
        <member name="F:ChineseCalendar.GregorianFestival.ArborDay">
            <summary> 植树节 </summary>
        </member>
        <member name="F:ChineseCalendar.GregorianFestival.TheTombWeepingDay">
            <summary> 清明 </summary>
        </member>
        <member name="F:ChineseCalendar.GregorianFestival.InternationalWorkersDay">
            <summary> 劳动节 </summary>
        </member>
        <member name="F:ChineseCalendar.GregorianFestival.TheNationalDay">
            <summary> 国庆节 </summary>
        </member>
        <member name="M:ChineseCalendar.GregorianFestival.IsThisFestival(System.DateTime)">
            <inheritdoc/>
        </member>
        <member name="T:ChineseCalendar.LoopFestival">
            <summary>
            循环节假日
            </summary>
        </member>
        <member name="M:ChineseCalendar.LoopFestival.TryGetDate(System.Int32,System.Int32,System.Int32,System.DateTime@)">
            <summary>
            尝试根据年月日获取一个日期
            </summary>
            <param name="year">年</param>
            <param name="month">月</param>
            <param name="day">日</param>
            <param name="date">返回日期</param>
            <returns>是否取到合法日期</returns>
        </member>
        <member name="M:ChineseCalendar.LoopFestival.GetLastDate(System.Nullable{System.DateTime},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ChineseCalendar.LoopFestival.GetNextDate(System.Nullable{System.DateTime},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ChineseCalendar.LoopFestival.IsThisFestival(System.DateTime)">
            <inheritdoc/>
        </member>
        <member name="T:Vanara.Extensions.StringHelper">
            <summary>A safe class that represents an object that is pinned in memory.</summary>
            <seealso cref="T:System.IDisposable"/>
        </member>
        <member name="M:Vanara.Extensions.StringHelper.AllocChars(System.UInt32,System.Func{System.Int32,System.IntPtr},System.Runtime.InteropServices.CharSet)">
            <summary>Allocates a block of memory allocated from the unmanaged COM task allocator sufficient to hold the number of specified characters.</summary>
            <param name="count">The number of characters, inclusive of the null terminator.</param>
            <param name="memAllocator">The method used to allocate the memory.</param>
            <param name="charSet">The character set.</param>
            <returns>The address of the block of memory allocated.</returns>
        </member>
        <member name="M:Vanara.Extensions.StringHelper.AllocChars(System.UInt32,System.Runtime.InteropServices.CharSet)">
            <summary>Allocates a block of memory allocated from the unmanaged COM task allocator sufficient to hold the number of specified characters.</summary>
            <param name="count">The number of characters, inclusive of the null terminator.</param>
            <param name="charSet">The character set.</param>
            <returns>The address of the block of memory allocated.</returns>
        </member>
        <member name="M:Vanara.Extensions.StringHelper.AllocSecureString(System.Security.SecureString,System.Runtime.InteropServices.CharSet)">
            <summary>Copies the contents of a managed <see cref="T:System.Security.SecureString"/> object to a block of memory allocated from the unmanaged COM task allocator.</summary>
            <param name="s">The managed object to copy.</param>
            <param name="charSet">The character set.</param>
            <returns>The address, in unmanaged memory, where the <paramref name="s"/> parameter was copied to, or 0 if a null object was supplied.</returns>
        </member>
        <member name="M:Vanara.Extensions.StringHelper.AllocSecureString(System.Security.SecureString,System.Runtime.InteropServices.CharSet,System.Func{System.Int32,System.IntPtr})">
            <summary>Copies the contents of a managed <see cref="T:System.Security.SecureString"/> object to a block of memory allocated from a supplied allocation method.</summary>
            <param name="s">The managed object to copy.</param>
            <param name="charSet">The character set.</param>
            <param name="memAllocator">The method used to allocate the memory.</param>
            <returns>The address, in unmanaged memory, where the <paramref name="s"/> parameter was copied to, or 0 if a null object was supplied.</returns>
        </member>
        <member name="M:Vanara.Extensions.StringHelper.AllocSecureString(System.Security.SecureString,System.Runtime.InteropServices.CharSet,System.Func{System.Int32,System.IntPtr},System.Int32@)">
            <summary>Copies the contents of a managed <see cref="T:System.Security.SecureString"/> object to a block of memory allocated from a supplied allocation method.</summary>
            <param name="s">The managed object to copy.</param>
            <param name="charSet">The character set.</param>
            <param name="memAllocator">The method used to allocate the memory.</param>
            <param name="allocatedBytes">Returns the number of allocated bytes for the string.</param>
            <returns>The address, in unmanaged memory, where the <paramref name="s"/> parameter was copied to, or 0 if a null object was supplied.</returns>
        </member>
        <member name="M:Vanara.Extensions.StringHelper.AllocString(System.String,System.Runtime.InteropServices.CharSet)">
            <summary>Copies the contents of a managed String to a block of memory allocated from the unmanaged COM task allocator.</summary>
            <param name="s">A managed string to be copied.</param>
            <param name="charSet">The character set.</param>
            <returns>The allocated memory block, or 0 if <paramref name="s"/> is null.</returns>
        </member>
        <member name="M:Vanara.Extensions.StringHelper.AllocString(System.String,System.Runtime.InteropServices.CharSet,System.Func{System.Int32,System.IntPtr})">
            <summary>Copies the contents of a managed String to a block of memory allocated from a supplied allocation method.</summary>
            <param name="s">A managed string to be copied.</param>
            <param name="charSet">The character set.</param>
            <param name="memAllocator">The method used to allocate the memory.</param>
            <returns>The allocated memory block, or 0 if <paramref name="s"/> is null.</returns>
        </member>
        <member name="M:Vanara.Extensions.StringHelper.AllocString(System.String,System.Runtime.InteropServices.CharSet,System.Func{System.Int32,System.IntPtr},System.Int32@)">
            <summary>
            Copies the contents of a managed String to a block of memory allocated from a supplied allocation method.
            </summary>
            <param name="s">A managed string to be copied.</param>
            <param name="charSet">The character set.</param>
            <param name="memAllocator">The method used to allocate the memory.</param>
            <param name="allocatedBytes">Returns the number of allocated bytes for the string.</param>
            <returns>The allocated memory block, or 0 if <paramref name="s" /> is null.</returns>
        </member>
        <member name="M:Vanara.Extensions.StringHelper.FreeSecureString(System.IntPtr,System.Int32,System.Action{System.IntPtr})">
            <summary>
            Zeros out the allocated memory behind a secure string and then frees that memory.
            </summary>
            <param name="ptr">The address of the memory to be freed.</param>
            <param name="sizeInBytes">The size in bytes of the memory pointed to by <paramref name="ptr"/>.</param>
            <param name="memFreer">The memory freer.</param>
        </member>
        <member name="M:Vanara.Extensions.StringHelper.FreeString(System.IntPtr,System.Runtime.InteropServices.CharSet)">
            <summary>Frees a block of memory allocated by the unmanaged COM task memory allocator for a string.</summary>
            <param name="ptr">The address of the memory to be freed.</param>
            <param name="charSet">The character set of the string.</param>
        </member>
        <member name="M:Vanara.Extensions.StringHelper.GetBytes(System.String,System.Boolean,System.Runtime.InteropServices.CharSet)">
            <summary>Gets the encoded bytes for a string including an optional null terminator.</summary>
            <param name="value">The string value to convert.</param>
            <param name="nullTerm">if set to <c>true</c> include a null terminator at the end of the string in the resulting byte array.</param>
            <param name="charSet">The character set.</param>
            <returns>A byte array including <paramref name="value"/> encoded as per <paramref name="charSet"/> and the optional null terminator.</returns>
        </member>
        <member name="M:Vanara.Extensions.StringHelper.GetByteCount(System.String,System.Boolean,System.Runtime.InteropServices.CharSet)">
            <summary>Gets the number of bytes required to store the string.</summary>
            <param name="value">The string value.</param>
            <param name="nullTerm">if set to <c>true</c> include a null terminator at the end of the string in the count if <paramref name="value"/> does not equal <c>null</c>.</param>
            <param name="charSet">The character set.</param>
            <returns>The number of bytes required to store <paramref name="value"/>. Returns 0 if <paramref name="value"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Vanara.Extensions.StringHelper.GetCharSize(System.Runtime.InteropServices.CharSet)">
            <summary>Gets the size of a character defined by the supplied <see cref="T:System.Runtime.InteropServices.CharSet"/>.</summary>
            <param name="charSet">The character set to size.</param>
            <returns>The size of a standard character, in bytes, from <paramref name="charSet"/>.</returns>
        </member>
        <member name="M:Vanara.Extensions.StringHelper.GetString(System.IntPtr,System.Runtime.InteropServices.CharSet,System.Int64)">
            <summary>
            Allocates a managed String and copies all characters up to the first null character or the end of the allocated memory pool from a string stored in unmanaged memory into it.
            </summary>
            <param name="ptr">The address of the first character.</param>
            <param name="charSet">The character set of the string.</param>
            <param name="allocatedBytes">If known, the total number of bytes allocated to the native memory in <paramref name="ptr"/>.</param>
            <returns>
            A managed string that holds a copy of the unmanaged string if the value of the <paramref name="ptr"/> parameter is not null;
            otherwise, this method returns null.
            </returns>
        </member>
        <member name="M:Vanara.Extensions.StringHelper.GetString(System.IntPtr,System.Int32,System.Runtime.InteropServices.CharSet)">
            <summary>
            Allocates a managed String and copies all characters up to the first null character or at most <paramref name="length"/> characters from a string stored in unmanaged memory into it.
            </summary>
            <param name="ptr">The address of the first character.</param>
            <param name="length">The number of characters to copy.</param>
            <param name="charSet">The character set of the string.</param>
            <returns>
            A managed string that holds a copy of the unmanaged string if the value of the <paramref name="ptr"/> parameter is not null;
            otherwise, this method returns null.
            </returns>
        </member>
        <member name="M:Vanara.Extensions.StringHelper.RefreshString(System.IntPtr@,System.UInt32@,System.String,System.Runtime.InteropServices.CharSet)">
            <summary>Refreshes the memory block from the unmanaged COM task allocator and copies the contents of a new managed String.</summary>
            <param name="ptr">The address of the first character.</param>
            <param name="charLen">Receives the new character length of the allocated memory block.</param>
            <param name="s">A managed string to be copied.</param>
            <param name="charSet">The character set of the string.</param>
            <returns><c>true</c> if the memory block was reallocated; <c>false</c> if set to null.</returns>
        </member>
        <member name="M:Vanara.Extensions.StringHelper.Write(System.String,System.IntPtr,System.Int32@,System.Boolean,System.Runtime.InteropServices.CharSet,System.Int64)">
            <summary>Writes the specified string to a pointer to allocated memory.</summary>
            <param name="value">The string value.</param>
            <param name="ptr">The pointer to the allocated memory.</param>
            <param name="byteCnt">The resulting number of bytes written.</param>
            <param name="nullTerm">if set to <c>true</c> include a null terminator at the end of the string in the count if <paramref name="value"/> does not equal <c>null</c>.</param>
            <param name="charSet">The character set of the string.</param>
            <param name="allocatedBytes">If known, the total number of bytes allocated to the native memory in <paramref name="ptr"/>.</param>
        </member>
        <member name="T:Vanara.PInvoke.DwmApi">
            <summary>Encapsulates classes exposed by DWNAPI.DLL</summary>
        </member>
        <member name="M:Vanara.PInvoke.DwmApi.DwmExtendFrameIntoClientArea(Vanara.PInvoke.HWND,Vanara.PInvoke.DwmApi.MARGINS@)">
            <summary>Extends the window frame into the client area.</summary>
            <param name="hWnd">The handle to the window in which the frame will be extended into the client area.</param>
            <param name="pMarInset">
            A pointer to a MARGINS structure that describes the margins to use when extending the frame into the client area.
            </param>
            <returns>If this function succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
        </member>
        <member name="T:Vanara.PInvoke.DwmApi.MARGINS">
            <summary>Returned by the GetThemeMargins function to define the margins of windows that have visual styles applied.</summary>
        </member>
        <member name="F:Vanara.PInvoke.DwmApi.MARGINS.cxLeftWidth">
            <summary>Width of the left border that retains its size.</summary>
        </member>
        <member name="F:Vanara.PInvoke.DwmApi.MARGINS.cxRightWidth">
            <summary>Width of the right border that retains its size.</summary>
        </member>
        <member name="F:Vanara.PInvoke.DwmApi.MARGINS.cyTopHeight">
            <summary>Height of the top border that retains its size.</summary>
        </member>
        <member name="F:Vanara.PInvoke.DwmApi.MARGINS.cyBottomHeight">
            <summary>Height of the bottom border that retains its size.</summary>
        </member>
        <member name="F:Vanara.PInvoke.DwmApi.MARGINS.Empty">
            <summary>Retrieves a <see cref="T:Vanara.PInvoke.DwmApi.MARGINS"/> instance with all values set to 0.</summary>
        </member>
        <member name="F:Vanara.PInvoke.DwmApi.MARGINS.Infinite">
            <summary>Retrieves a <see cref="T:Vanara.PInvoke.DwmApi.MARGINS"/> instance with all values set to -1.</summary>
        </member>
        <member name="M:Vanara.PInvoke.DwmApi.MARGINS.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.DwmApi.MARGINS"/> struct.</summary>
            <param name="left">The left border value.</param>
            <param name="right">The right border value.</param>
            <param name="top">The top border value.</param>
            <param name="bottom">The bottom border value.</param>
        </member>
        <member name="M:Vanara.PInvoke.DwmApi.MARGINS.#ctor(System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.DwmApi.MARGINS"/> struct.</summary>
            <param name="allMargins">Value to assign to all margins.</param>
        </member>
        <member name="P:Vanara.PInvoke.DwmApi.MARGINS.Left">
            <summary>Gets or sets the left border value.</summary>
            <value>The left border.</value>
        </member>
        <member name="P:Vanara.PInvoke.DwmApi.MARGINS.Right">
            <summary>Gets or sets the right border value.</summary>
            <value>The right border.</value>
        </member>
        <member name="P:Vanara.PInvoke.DwmApi.MARGINS.Top">
            <summary>Gets or sets the top border value.</summary>
            <value>The top border.</value>
        </member>
        <member name="P:Vanara.PInvoke.DwmApi.MARGINS.Bottom">
            <summary>Gets or sets the bottom border value.</summary>
            <value>The bottom border.</value>
        </member>
        <member name="M:Vanara.PInvoke.DwmApi.MARGINS.op_Inequality(Vanara.PInvoke.DwmApi.MARGINS,Vanara.PInvoke.DwmApi.MARGINS)">
            <summary>Determines if two <see cref="T:Vanara.PInvoke.DwmApi.MARGINS"/> values are not equal.</summary>
            <param name="m1">The first margin.</param>
            <param name="m2">The second margin.</param>
            <returns><c>true</c> if the values are unequal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Vanara.PInvoke.DwmApi.MARGINS.op_Equality(Vanara.PInvoke.DwmApi.MARGINS,Vanara.PInvoke.DwmApi.MARGINS)">
            <summary>Determines if two <see cref="T:Vanara.PInvoke.DwmApi.MARGINS"/> values are equal.</summary>
            <param name="m1">The first margin.</param>
            <param name="m2">The second margin.</param>
            <returns><c>true</c> if the values are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Vanara.PInvoke.DwmApi.MARGINS.Equals(System.Object)">
            <summary>Determines whether the specified <see cref="T:System.Object"/>, is equal to this instance.</summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Vanara.PInvoke.DwmApi.MARGINS.GetHashCode">
            <summary>Returns a hash code for this instance.</summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Vanara.PInvoke.DwmApi.MARGINS.ToString">
            <summary>Returns a <see cref="T:System.String"/> that represents this instance.</summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="T:Vanara.PInvoke.IGraphicsObjectHandle">
            <summary>Signals that a structure or class holds a handle to a synchronization object.</summary>
        </member>
        <member name="T:Vanara.PInvoke.IHandle">
            <summary>Signals that a structure or class holds a HANDLE.</summary>
        </member>
        <member name="M:Vanara.PInvoke.IHandle.DangerousGetHandle">
            <summary>Returns the value of the handle field.</summary>
            <returns>An IntPtr representing the value of the handle field.</returns>
        </member>
        <member name="T:Vanara.PInvoke.IKernelHandle">
            <summary>Signals that a structure or class holds a handle to a synchronization object.</summary>
        </member>
        <member name="T:Vanara.PInvoke.IUserHandle">
            <summary>Signals that a structure or class holds a handle to a synchronization object.</summary>
        </member>
        <member name="T:Vanara.PInvoke.HCURSOR">
            <summary>Provides a handle to a Windows cursor.</summary>
        </member>
        <member name="M:Vanara.PInvoke.HCURSOR.#ctor(System.IntPtr)">
            <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.HCURSOR"/> struct.</summary>
            <param name="preexistingHandle">An <see cref="T:System.IntPtr"/> object that represents the pre-existing handle to use.</param>
        </member>
        <member name="P:Vanara.PInvoke.HCURSOR.NULL">
            <summary>Returns an invalid handle by instantiating a <see cref="T:Vanara.PInvoke.HCURSOR"/> object with <see cref="F:System.IntPtr.Zero"/>.</summary>
        </member>
        <member name="P:Vanara.PInvoke.HCURSOR.IsNull">
            <summary>Gets a value indicating whether this instance is a null handle.</summary>
        </member>
        <member name="M:Vanara.PInvoke.HCURSOR.op_Explicit(Vanara.PInvoke.HCURSOR)~System.IntPtr">
            <summary>Performs an explicit conversion from <see cref="T:Vanara.PInvoke.HCURSOR"/> to <see cref="T:System.IntPtr"/>.</summary>
            <param name="h">The handle.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Vanara.PInvoke.HCURSOR.op_Implicit(System.IntPtr)~Vanara.PInvoke.HCURSOR">
            <summary>Performs an implicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:Vanara.PInvoke.HCURSOR"/>.</summary>
            <param name="h">The pointer to a handle.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Vanara.PInvoke.HCURSOR.op_Inequality(Vanara.PInvoke.HCURSOR,Vanara.PInvoke.HCURSOR)">
            <summary>Implements the operator !=.</summary>
            <param name="h1">The first handle.</param>
            <param name="h2">The second handle.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Vanara.PInvoke.HCURSOR.op_Equality(Vanara.PInvoke.HCURSOR,Vanara.PInvoke.HCURSOR)">
            <summary>Implements the operator ==.</summary>
            <param name="h1">The first handle.</param>
            <param name="h2">The second handle.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Vanara.PInvoke.HCURSOR.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Vanara.PInvoke.HCURSOR.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Vanara.PInvoke.HCURSOR.DangerousGetHandle">
            <inheritdoc/>
        </member>
        <member name="T:Vanara.PInvoke.HINSTANCE">
            <summary>Provides a handle to a module or library instance.</summary>
        </member>
        <member name="M:Vanara.PInvoke.HINSTANCE.#ctor(System.IntPtr)">
            <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.HINSTANCE"/> struct.</summary>
            <param name="preexistingHandle">An <see cref="T:System.IntPtr"/> object that represents the pre-existing handle to use.</param>
        </member>
        <member name="P:Vanara.PInvoke.HINSTANCE.NULL">
            <summary>Returns an invalid handle by instantiating a <see cref="T:Vanara.PInvoke.HINSTANCE"/> object with <see cref="F:System.IntPtr.Zero"/>.</summary>
        </member>
        <member name="P:Vanara.PInvoke.HINSTANCE.IsNull">
            <summary>Gets a value indicating whether this instance is a null handle.</summary>
        </member>
        <member name="M:Vanara.PInvoke.HINSTANCE.op_Explicit(Vanara.PInvoke.HINSTANCE)~System.IntPtr">
            <summary>Performs an explicit conversion from <see cref="T:Vanara.PInvoke.HINSTANCE"/> to <see cref="T:System.IntPtr"/>.</summary>
            <param name="h">The handle.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Vanara.PInvoke.HINSTANCE.op_Implicit(System.IntPtr)~Vanara.PInvoke.HINSTANCE">
            <summary>Performs an implicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:Vanara.PInvoke.HINSTANCE"/>.</summary>
            <param name="h">The pointer to a handle.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Vanara.PInvoke.HINSTANCE.op_Inequality(Vanara.PInvoke.HINSTANCE,Vanara.PInvoke.HINSTANCE)">
            <summary>Implements the operator !=.</summary>
            <param name="h1">The first handle.</param>
            <param name="h2">The second handle.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Vanara.PInvoke.HINSTANCE.op_Equality(Vanara.PInvoke.HINSTANCE,Vanara.PInvoke.HINSTANCE)">
            <summary>Implements the operator ==.</summary>
            <param name="h1">The first handle.</param>
            <param name="h2">The second handle.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Vanara.PInvoke.HINSTANCE.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Vanara.PInvoke.HINSTANCE.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Vanara.PInvoke.HINSTANCE.DangerousGetHandle">
            <inheritdoc/>
        </member>
        <member name="T:Vanara.PInvoke.HWND">
            <summary>Provides a handle to a window or dialog.</summary>
        </member>
        <member name="M:Vanara.PInvoke.HWND.#ctor(System.IntPtr)">
            <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.HWND"/> struct.</summary>
            <param name="preexistingHandle">An <see cref="T:System.IntPtr"/> object that represents the pre-existing handle to use.</param>
        </member>
        <member name="F:Vanara.PInvoke.HWND.HWND_BOTTOM">
            <summary>
            Places the window at the bottom of the Z order. If the hWnd parameter identifies a topmost window, the window loses its
            topmost status and is placed at the bottom of all other windows.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.HWND.HWND_MESSAGE">
            <summary>Use as parent in CreateWindow or CreateWindowEx call to indicate a message-only window.</summary>
        </member>
        <member name="F:Vanara.PInvoke.HWND.HWND_NOTOPMOST">
            <summary>
            Places the window above all non-topmost windows (that is, behind all topmost windows). This flag has no effect if the window
            is already a non-topmost window.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.HWND.HWND_TOP">
            <summary>Places the window at the top of the Z order.</summary>
        </member>
        <member name="F:Vanara.PInvoke.HWND.HWND_TOPMOST">
            <summary>Places the window above all non-topmost windows. The window maintains its topmost position even when it is deactivated.</summary>
        </member>
        <member name="P:Vanara.PInvoke.HWND.NULL">
            <summary>Returns an invalid handle by instantiating a <see cref="T:Vanara.PInvoke.HWND"/> object with <see cref="F:System.IntPtr.Zero"/>.</summary>
        </member>
        <member name="P:Vanara.PInvoke.HWND.IsNull">
            <summary>Gets a value indicating whether this instance is a null handle.</summary>
        </member>
        <member name="M:Vanara.PInvoke.HWND.op_Explicit(Vanara.PInvoke.HWND)~System.IntPtr">
            <summary>Performs an explicit conversion from <see cref="T:Vanara.PInvoke.HWND"/> to <see cref="T:System.IntPtr"/>.</summary>
            <param name="h">The handle.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Vanara.PInvoke.HWND.op_Implicit(System.IntPtr)~Vanara.PInvoke.HWND">
            <summary>Performs an implicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:Vanara.PInvoke.HWND"/>.</summary>
            <param name="h">The pointer to a handle.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Vanara.PInvoke.HWND.op_Inequality(Vanara.PInvoke.HWND,Vanara.PInvoke.HWND)">
            <summary>Implements the operator !=.</summary>
            <param name="h1">The first handle.</param>
            <param name="h2">The second handle.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Vanara.PInvoke.HWND.op_Equality(Vanara.PInvoke.HWND,Vanara.PInvoke.HWND)">
            <summary>Implements the operator ==.</summary>
            <param name="h1">The first handle.</param>
            <param name="h2">The second handle.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Vanara.PInvoke.HWND.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Vanara.PInvoke.HWND.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Vanara.PInvoke.HWND.DangerousGetHandle">
            <inheritdoc/>
        </member>
        <member name="T:Vanara.PInvoke.SafeHANDLE">
            <summary>Base class for all native handles.</summary>
            <seealso cref="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid"/>
            <seealso cref="T:System.IEquatable`1"/>
            <seealso cref="T:Vanara.PInvoke.IHandle"/>
        </member>
        <member name="M:Vanara.PInvoke.SafeHANDLE.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.SafeHANDLE"/> class.</summary>
        </member>
        <member name="M:Vanara.PInvoke.SafeHANDLE.#ctor(System.IntPtr,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.SafeHANDLE"/> class and assigns an existing handle.</summary>
            <param name="preexistingHandle">An <see cref="T:System.IntPtr"/> object that represents the pre-existing handle to use.</param>
            <param name="ownsHandle">
            <see langword="true"/> to reliably release the handle during the finalization phase; otherwise, <see langword="false"/> (not recommended).
            </param>
        </member>
        <member name="P:Vanara.PInvoke.SafeHANDLE.IsNull">
            <summary>Gets a value indicating whether this instance is null.</summary>
            <value><c>true</c> if this instance is null; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Vanara.PInvoke.SafeHANDLE.op_Inequality(Vanara.PInvoke.SafeHANDLE,Vanara.PInvoke.IHandle)">
            <summary>Implements the operator !=.</summary>
            <param name="h1">The first handle.</param>
            <param name="h2">The second handle.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Vanara.PInvoke.SafeHANDLE.op_Equality(Vanara.PInvoke.SafeHANDLE,Vanara.PInvoke.IHandle)">
            <summary>Implements the operator ==.</summary>
            <param name="h1">The first handle.</param>
            <param name="h2">The second handle.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Vanara.PInvoke.SafeHANDLE.op_Inequality(Vanara.PInvoke.SafeHANDLE,System.IntPtr)">
            <summary>Implements the operator !=.</summary>
            <param name="h1">The first handle.</param>
            <param name="h2">The second handle.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Vanara.PInvoke.SafeHANDLE.op_Equality(Vanara.PInvoke.SafeHANDLE,System.IntPtr)">
            <summary>Implements the operator ==.</summary>
            <param name="h1">The first handle.</param>
            <param name="h2">The second handle.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Vanara.PInvoke.SafeHANDLE.Equals(Vanara.PInvoke.SafeHANDLE)">
            <summary>Determines whether the specified <see cref="T:Vanara.PInvoke.SafeHANDLE"/>, is equal to this instance.</summary>
            <param name="other">The <see cref="T:Vanara.PInvoke.SafeHANDLE"/> to compare with this instance.</param>
            <returns><c>true</c> if the specified <see cref="T:Vanara.PInvoke.SafeHANDLE"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Vanara.PInvoke.SafeHANDLE.Equals(System.Object)">
            <summary>Determines whether the specified <see cref="T:System.Object"/>, is equal to this instance.</summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Vanara.PInvoke.SafeHANDLE.GetHashCode">
            <summary>Returns a hash code for this instance.</summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Vanara.PInvoke.SafeHANDLE.ReleaseOwnership">
            <summary>Releases the ownership of the underlying handle and returns the current handle.</summary>
            <returns>The value of the current handle.</returns>
        </member>
        <member name="M:Vanara.PInvoke.SafeHANDLE.InternalReleaseHandle">
            <summary>
            Internal method that actually releases the handle. This is called by <see cref="M:Vanara.PInvoke.SafeHANDLE.ReleaseHandle"/> for valid handles and afterwards
            zeros the handle.
            </summary>
            <returns><c>true</c> to indicate successful release of the handle; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Vanara.PInvoke.SafeHANDLE.ReleaseHandle">
            <inheritdoc/>
        </member>
        <member name="T:Vanara.PInvoke.PInvokeClient">
            <summary>Flags that determine the minimum supported client(s) for a P/Invoke function.</summary>
        </member>
        <member name="F:Vanara.PInvoke.PInvokeClient.None">
            <summary>No minimum (default).</summary>
        </member>
        <member name="F:Vanara.PInvoke.PInvokeClient.Windows2000">
            <summary>Windows 2000</summary>
        </member>
        <member name="F:Vanara.PInvoke.PInvokeClient.WindowsXP">
            <summary>Windows XP</summary>
        </member>
        <member name="F:Vanara.PInvoke.PInvokeClient.WindowsXP_SP2">
            <summary>Windows XP SP2</summary>
        </member>
        <member name="F:Vanara.PInvoke.PInvokeClient.WindowsVista">
            <summary>Windows Vista</summary>
        </member>
        <member name="F:Vanara.PInvoke.PInvokeClient.WindowsVista_SP2">
            <summary>Windows Vista SP2</summary>
        </member>
        <member name="F:Vanara.PInvoke.PInvokeClient.Windows7">
            <summary>Windows 7</summary>
        </member>
        <member name="F:Vanara.PInvoke.PInvokeClient.Windows8">
            <summary>Windows 8</summary>
        </member>
        <member name="F:Vanara.PInvoke.PInvokeClient.Windows81">
            <summary>Windows 8.1</summary>
        </member>
        <member name="F:Vanara.PInvoke.PInvokeClient.Windows10">
            <summary>Windows 10</summary>
        </member>
        <member name="F:Vanara.PInvoke.PInvokeClient.Windows11">
            <summary>Windows 11</summary>
        </member>
        <member name="T:Vanara.PInvoke.PInvokeDataAttribute">
            <summary>Captures information about P/Invoke calls.</summary>
            <seealso cref="T:System.Attribute"/>
        </member>
        <member name="M:Vanara.PInvoke.PInvokeDataAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.PInvokeDataAttribute"/> class.</summary>
            <param name="header">The header.</param>
        </member>
        <member name="P:Vanara.PInvoke.PInvokeDataAttribute.Dll">
            <summary>Gets or sets the DLL in which this element is defined.</summary>
            <value>The DLL file name without the path (e.g. "advapi32.dll").</value>
        </member>
        <member name="P:Vanara.PInvoke.PInvokeDataAttribute.Header">
            <summary>Gets or sets the header in which this element is defined.</summary>
            <value>The header file name without the path (e.g. "winuser.h").</value>
        </member>
        <member name="P:Vanara.PInvoke.PInvokeDataAttribute.MinClient">
            <summary>Gets or sets the minimum supported client.</summary>
            <value>The minimum supported client.</value>
        </member>
        <member name="P:Vanara.PInvoke.PInvokeDataAttribute.MSDNShortId">
            <summary>Gets or sets the MSDN short identifier.</summary>
            <value>The MSDN short identifier. This is a unique 8-character alphanumeric string used for Microsoft documentation.</value>
        </member>
        <member name="T:Vanara.PInvoke.ResourceId">
            <summary>Helper structure to use for a pointer that can morph into a string, pointer or integer.</summary>
        </member>
        <member name="P:Vanara.PInvoke.ResourceId.id">
            <summary>Gets or sets an integer identifier.</summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Vanara.PInvoke.ResourceId.IsIntResource">
            <summary>Determines whether this value is an integer identifier for a resource.</summary>
            <returns>If the value is a resource identifier, the return value is <see langword="true"/>. Otherwise, the return value is <see langword="false"/>.</returns>
        </member>
        <member name="F:Vanara.PInvoke.ResourceId.NULL">
            <summary>Represent a NULL value.</summary>
        </member>
        <member name="M:Vanara.PInvoke.ResourceId.op_Implicit(Vanara.PInvoke.ResourceId)~System.Int32">
            <summary>Performs an implicit conversion from <see cref="!:SafeResourceId"/> to <see cref="T:System.Int32"/>.</summary>
            <param name="r">The r.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Vanara.PInvoke.ResourceId.op_Implicit(Vanara.PInvoke.ResourceId)~System.IntPtr">
            <summary>Performs an implicit conversion from <see cref="T:Vanara.PInvoke.ResourceId"/> to <see cref="T:System.IntPtr"/>.</summary>
            <param name="r">The r.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Vanara.PInvoke.ResourceId.op_Implicit(System.Int32)~Vanara.PInvoke.ResourceId">
            <summary>Performs an implicit conversion from <see cref="T:System.Int32"/> to <see cref="T:Vanara.PInvoke.ResourceId"/>.</summary>
            <param name="resId">The resource identifier.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Vanara.PInvoke.ResourceId.op_Implicit(System.IntPtr)~Vanara.PInvoke.ResourceId">
            <summary>Performs an implicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:Vanara.PInvoke.ResourceId"/>.</summary>
            <param name="p">The PTR.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Vanara.PInvoke.ResourceId.op_Explicit(Vanara.PInvoke.ResourceId)~System.String">
            <summary>Performs an implicit conversion from <see cref="T:Vanara.PInvoke.ResourceId"/> to <see cref="T:System.String"/>.</summary>
            <param name="r">The r.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Vanara.PInvoke.ResourceId.Equals(System.Object)">
            <summary>Determines whether the specified <see cref="T:System.Object"/>, is equal to this instance.</summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Vanara.PInvoke.ResourceId.GetHashCode">
            <summary>Returns a hash code for this instance.</summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Vanara.PInvoke.ResourceId.ToString">
            <summary>Returns a <see cref="T:System.String"/> that represents this instance.</summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="M:Vanara.PInvoke.ResourceId.Equals(System.Int32)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.</returns>
        </member>
        <member name="M:Vanara.PInvoke.ResourceId.Equals(System.String)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Vanara.PInvoke.ResourceId.Equals(System.IntPtr)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.</returns>
        </member>
        <member name="M:Vanara.PInvoke.ResourceId.Equals(Vanara.PInvoke.ResourceId)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Vanara.PInvoke.ResourceId.DangerousGetHandle">
            <inheritdoc/>
        </member>
        <member name="T:Vanara.PInvoke.RECT">
            <summary>Defines the coordinates of the upper-left and lower-right corners of a rectangle.</summary>
            <remarks>
            By convention, the right and bottom edges of the rectangle are normally considered exclusive. In other words, the pixel whose
            coordinates are ( right, bottom ) lies immediately outside of the rectangle. For example, when RECT is passed to the FillRect
            function, the rectangle is filled up to, but not including, the right column and bottom row of pixels. This structure is identical to
            the RECT structure.
            </remarks>
        </member>
        <member name="F:Vanara.PInvoke.RECT.left">
            <summary>The x-coordinate of the upper-left corner of the rectangle.</summary>
        </member>
        <member name="F:Vanara.PInvoke.RECT.top">
            <summary>The y-coordinate of the upper-left corner of the rectangle.</summary>
        </member>
        <member name="F:Vanara.PInvoke.RECT.right">
            <summary>he x-coordinate of the lower-right corner of the rectangle.</summary>
        </member>
        <member name="F:Vanara.PInvoke.RECT.bottom">
            <summary>he y-coordinate of the lower-right corner of the rectangle.</summary>
        </member>
        <member name="M:Vanara.PInvoke.RECT.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.RECT"/> struct.</summary>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="right">The right.</param>
            <param name="bottom">The bottom.</param>
        </member>
        <member name="M:Vanara.PInvoke.RECT.#ctor(System.Drawing.Rectangle)">
            <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.RECT"/> struct.</summary>
            <param name="r">The rectangle.</param>
        </member>
        <member name="P:Vanara.PInvoke.RECT.X">
            <summary>Gets or sets the x-coordinate of the upper-left corner of this <see cref="T:Vanara.PInvoke.RECT"/> structure.</summary>
            <value>The x-coordinate of the upper-left corner of this <see cref="T:Vanara.PInvoke.RECT"/> structure. The default is 0.</value>
        </member>
        <member name="P:Vanara.PInvoke.RECT.Y">
            <summary>Gets or sets the y-coordinate of the upper-left corner of this <see cref="T:Vanara.PInvoke.RECT"/> structure.</summary>
            <value>The y-coordinate of the upper-left corner of this <see cref="T:Vanara.PInvoke.RECT"/> structure. The default is 0.</value>
        </member>
        <member name="P:Vanara.PInvoke.RECT.Height">
            <summary>Gets or sets the height of this <see cref="T:Vanara.PInvoke.RECT"/> structure.</summary>
            <value>The height of this <see cref="T:Vanara.PInvoke.RECT"/> structure. The default is 0.</value>
        </member>
        <member name="P:Vanara.PInvoke.RECT.Width">
            <summary>Gets or sets the width of this <see cref="T:Vanara.PInvoke.RECT"/> structure.</summary>
            <value>The width of this <see cref="T:Vanara.PInvoke.RECT"/> structure. The default is 0.</value>
        </member>
        <member name="P:Vanara.PInvoke.RECT.Location">
            <summary>Gets or sets the coordinates of the upper-left corner of this <see cref="T:Vanara.PInvoke.RECT"/> structure.</summary>
            <value>A Point that represents the upper-left corner of this <see cref="T:Vanara.PInvoke.RECT"/> structure.</value>
        </member>
        <member name="P:Vanara.PInvoke.RECT.Size">
            <summary>Gets or sets the size of this <see cref="T:Vanara.PInvoke.RECT"/> structure.</summary>
            <value>A Size that represents the width and height of this <see cref="T:Vanara.PInvoke.RECT"/> structure.</value>
        </member>
        <member name="P:Vanara.PInvoke.RECT.IsEmpty">
            <summary>Tests whether all numeric properties of this <see cref="T:Vanara.PInvoke.RECT"/> have values of zero.</summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Vanara.PInvoke.RECT.op_Implicit(Vanara.PInvoke.RECT)~System.Drawing.Rectangle">
            <summary>Performs an implicit conversion from <see cref="T:Vanara.PInvoke.RECT"/> to <see cref="T:System.Drawing.Rectangle"/>.</summary>
            <param name="r">The <see cref="T:Vanara.PInvoke.RECT"/> structure.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Vanara.PInvoke.RECT.op_Implicit(System.Drawing.Rectangle)~Vanara.PInvoke.RECT">
            <summary>Performs an implicit conversion from <see cref="T:System.Drawing.Rectangle"/> to <see cref="T:Vanara.PInvoke.RECT"/>.</summary>
            <param name="r">The Rectangle structure.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Vanara.PInvoke.RECT.op_Equality(Vanara.PInvoke.RECT,Vanara.PInvoke.RECT)">
            <summary>Tests whether two <see cref="T:Vanara.PInvoke.RECT"/> structures have equal values.</summary>
            <param name="r1">The r1.</param>
            <param name="r2">The r2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Vanara.PInvoke.RECT.op_Inequality(Vanara.PInvoke.RECT,Vanara.PInvoke.RECT)">
            <summary>Tests whether two <see cref="T:Vanara.PInvoke.RECT"/> structures have different values.</summary>
            <param name="r1">The first <see cref="T:Vanara.PInvoke.RECT"/> structure.</param>
            <param name="r2">The second <see cref="T:Vanara.PInvoke.RECT"/> structure.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Vanara.PInvoke.RECT.Equals(Vanara.PInvoke.RECT)">
            <summary>Determines whether the specified <see cref="T:Vanara.PInvoke.RECT"/>, is equal to this instance.</summary>
            <param name="r">The <see cref="T:Vanara.PInvoke.RECT"/> to compare with this instance.</param>
            <returns><c>true</c> if the specified <see cref="T:Vanara.PInvoke.RECT"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Vanara.PInvoke.RECT.Equals(Vanara.PInvoke.PRECT)">
            <summary>Determines whether the specified <see cref="T:Vanara.PInvoke.PRECT"/>, is equal to this instance.</summary>
            <param name="r">The <see cref="T:Vanara.PInvoke.PRECT"/> to compare with this instance.</param>
            <returns><c>true</c> if the specified <see cref="T:Vanara.PInvoke.PRECT"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Vanara.PInvoke.RECT.Equals(System.Drawing.Rectangle)">
            <summary>Determines whether the specified <see cref="T:System.Drawing.Rectangle"/>, is equal to this instance.</summary>
            <param name="r">The <see cref="T:System.Drawing.Rectangle"/> to compare with this instance.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Drawing.Rectangle"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Vanara.PInvoke.RECT.Equals(System.Object)">
            <summary>Determines whether the specified <see cref="T:System.Object"/>, is equal to this instance.</summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Vanara.PInvoke.RECT.GetHashCode">
            <summary>Returns a hash code for this instance.</summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Vanara.PInvoke.RECT.ToString">
            <summary>Returns a <see cref="T:System.String"/> that represents this instance.</summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="F:Vanara.PInvoke.RECT.Empty">
            <summary>Represents an empty instance where all values are set to 0.</summary>
        </member>
        <member name="T:Vanara.PInvoke.PRECT">
            <summary>Defines the coordinates of the upper-left and lower-right corners of a rectangle.</summary>
            <remarks>
            By convention, the right and bottom edges of the rectangle are normally considered exclusive. In other words, the pixel whose
            coordinates are ( right, bottom ) lies immediately outside of the rectangle. For example, when RECT is passed to the FillRect
            function, the rectangle is filled up to, but not including, the right column and bottom row of pixels. This structure is identical to
            the RECT structure.
            </remarks>
        </member>
        <member name="M:Vanara.PInvoke.PRECT.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.PRECT"/> class with all values set to 0.</summary>
        </member>
        <member name="M:Vanara.PInvoke.PRECT.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.PRECT"/> class.</summary>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="right">The right.</param>
            <param name="bottom">The bottom.</param>
        </member>
        <member name="M:Vanara.PInvoke.PRECT.#ctor(System.Drawing.Rectangle)">
            <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.PRECT"/> class.</summary>
            <param name="r">The <see cref="T:System.Drawing.Rectangle"/> structure.</param>
        </member>
        <member name="M:Vanara.PInvoke.PRECT.#ctor(Vanara.PInvoke.RECT)">
            <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.PRECT"/> class.</summary>
            <param name="r">The r.</param>
        </member>
        <member name="P:Vanara.PInvoke.PRECT.left">
            <summary>The x-coordinate of the upper-left corner of the rectangle.</summary>
        </member>
        <member name="P:Vanara.PInvoke.PRECT.top">
            <summary>The y-coordinate of the upper-left corner of the rectangle.</summary>
        </member>
        <member name="P:Vanara.PInvoke.PRECT.right">
            <summary>he x-coordinate of the lower-right corner of the rectangle.</summary>
        </member>
        <member name="P:Vanara.PInvoke.PRECT.bottom">
            <summary>he y-coordinate of the lower-right corner of the rectangle.</summary>
        </member>
        <member name="P:Vanara.PInvoke.PRECT.X">
            <summary>Gets or sets the x-coordinate of the upper-left corner of this <see cref="T:Vanara.PInvoke.PRECT"/> structure.</summary>
            <value>The x-coordinate of the upper-left corner of this <see cref="T:Vanara.PInvoke.PRECT"/> structure. The default is 0.</value>
        </member>
        <member name="P:Vanara.PInvoke.PRECT.Y">
            <summary>Gets or sets the y-coordinate of the upper-left corner of this <see cref="T:Vanara.PInvoke.PRECT"/> structure.</summary>
            <value>The y-coordinate of the upper-left corner of this <see cref="T:Vanara.PInvoke.PRECT"/> structure. The default is 0.</value>
        </member>
        <member name="P:Vanara.PInvoke.PRECT.Height">
            <summary>Gets or sets the height of this <see cref="T:Vanara.PInvoke.PRECT"/> structure.</summary>
            <value>The height of this <see cref="T:Vanara.PInvoke.PRECT"/> structure. The default is 0.</value>
        </member>
        <member name="P:Vanara.PInvoke.PRECT.Width">
            <summary>Gets or sets the width of this <see cref="T:Vanara.PInvoke.PRECT"/> structure.</summary>
            <value>The width of this <see cref="T:Vanara.PInvoke.PRECT"/> structure. The default is 0.</value>
        </member>
        <member name="P:Vanara.PInvoke.PRECT.Location">
            <summary>Gets or sets the coordinates of the upper-left corner of this <see cref="T:Vanara.PInvoke.PRECT"/> structure.</summary>
            <value>A Point that represents the upper-left corner of this <see cref="T:Vanara.PInvoke.PRECT"/> structure.</value>
        </member>
        <member name="P:Vanara.PInvoke.PRECT.Size">
            <summary>Gets or sets the size of this <see cref="T:Vanara.PInvoke.PRECT"/> structure.</summary>
            <value>A Size that represents the width and height of this <see cref="T:Vanara.PInvoke.PRECT"/> structure.</value>
        </member>
        <member name="P:Vanara.PInvoke.PRECT.IsEmpty">
            <summary>Tests whether all numeric properties of this <see cref="T:Vanara.PInvoke.RECT"/> have values of zero.</summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Vanara.PInvoke.PRECT.op_Implicit(Vanara.PInvoke.PRECT)~System.Drawing.Rectangle">
            <summary>Performs an implicit conversion from <see cref="T:Vanara.PInvoke.PRECT"/> to <see cref="T:System.Drawing.Rectangle"/>.</summary>
            <param name="r">The r.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Vanara.PInvoke.PRECT.op_Implicit(System.Nullable{System.Drawing.Rectangle})~Vanara.PInvoke.PRECT">
            <summary>Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:Vanara.PInvoke.PRECT"/>.</summary>
            <param name="r">The r.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Vanara.PInvoke.PRECT.op_Implicit(System.Drawing.Rectangle)~Vanara.PInvoke.PRECT">
            <summary>Performs an implicit conversion from <see cref="T:System.Drawing.Rectangle"/> to <see cref="T:Vanara.PInvoke.PRECT"/>.</summary>
            <param name="r">The r.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Vanara.PInvoke.PRECT.op_Implicit(Vanara.PInvoke.RECT)~Vanara.PInvoke.PRECT">
            <summary>Performs an implicit conversion from <see cref="T:Vanara.PInvoke.RECT"/> to <see cref="T:Vanara.PInvoke.PRECT"/>.</summary>
            <param name="r">The r.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Vanara.PInvoke.PRECT.op_Equality(Vanara.PInvoke.PRECT,Vanara.PInvoke.PRECT)">
            <summary>Implements the operator ==.</summary>
            <param name="r1">The r1.</param>
            <param name="r2">The r2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Vanara.PInvoke.PRECT.op_Inequality(Vanara.PInvoke.PRECT,Vanara.PInvoke.PRECT)">
            <summary>Implements the operator !=.</summary>
            <param name="r1">The r1.</param>
            <param name="r2">The r2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Vanara.PInvoke.PRECT.Equals(Vanara.PInvoke.PRECT)">
            <summary>Determines whether the specified <see cref="T:Vanara.PInvoke.PRECT"/>, is equal to this instance.</summary>
            <param name="r">The <see cref="T:Vanara.PInvoke.PRECT"/> to compare with this instance.</param>
            <returns><c>true</c> if the specified <see cref="T:Vanara.PInvoke.PRECT"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Vanara.PInvoke.PRECT.Equals(Vanara.PInvoke.RECT)">
            <summary>Determines whether the specified <see cref="T:Vanara.PInvoke.RECT"/>, is equal to this instance.</summary>
            <param name="r">The <see cref="T:Vanara.PInvoke.RECT"/> to compare with this instance.</param>
            <returns><c>true</c> if the specified <see cref="T:Vanara.PInvoke.RECT"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Vanara.PInvoke.PRECT.Equals(System.Drawing.Rectangle)">
            <summary>Determines whether the specified <see cref="T:System.Drawing.Rectangle"/>, is equal to this instance.</summary>
            <param name="r">The <see cref="T:System.Drawing.Rectangle"/> to compare with this instance.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Drawing.Rectangle"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Vanara.PInvoke.PRECT.Equals(System.Object)">
            <summary>Determines whether the specified <see cref="T:System.Object"/>, is equal to this instance.</summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Vanara.PInvoke.PRECT.GetHashCode">
            <summary>Returns a hash code for this instance.</summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Vanara.PInvoke.PRECT.ToString">
            <summary>Returns a <see cref="T:System.String"/> that represents this instance.</summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="T:Vanara.PInvoke.Macros">
            <summary>Platform invokable enumerated types, constants and functions from windows.h</summary>
        </member>
        <member name="M:Vanara.PInvoke.Macros.IS_INTRESOURCE(System.IntPtr)">
            <summary>Determines whether a value is an integer identifier for a resource.</summary>
            <param name="ptr">The pointer to be tested whether it contains an integer resource identifier.</param>
            <returns>If the value is a resource identifier, the return value is TRUE. Otherwise, the return value is FALSE.</returns>
        </member>
        <member name="M:Vanara.PInvoke.Macros.LOBYTE(System.UInt16)">
            <summary>Retrieves the low-order byte from the given 16-bit value.</summary>
            <param name="wValue">The value to be converted.</param>
            <returns>The return value is the low-order byte of the specified value.</returns>
        </member>
        <member name="M:Vanara.PInvoke.Macros.LowPart(System.Int64)">
            <summary>Gets the lower 8-bytes from a <see cref="T:System.Int64"/> value.</summary>
            <param name="lValue">The <see cref="T:System.Int64"/> value.</param>
            <returns>The lower 8-bytes as a <see cref="T:System.UInt32"/>.</returns>
        </member>
        <member name="M:Vanara.PInvoke.Macros.LOWORD(System.UInt32)">
            <summary>Retrieves the low-order word from the specified 32-bit value.</summary>
            <param name="dwValue">The value to be converted.</param>
            <returns>The return value is the low-order word of the specified value.</returns>
        </member>
        <member name="M:Vanara.PInvoke.Macros.LOWORD(System.IntPtr)">
            <summary>Retrieves the low-order word from the specified 32-bit value.</summary>
            <param name="dwValue">The value to be converted.</param>
            <returns>The return value is the low-order word of the specified value.</returns>
        </member>
        <member name="M:Vanara.PInvoke.Macros.LOWORD(System.UIntPtr)">
            <summary>Retrieves the low-order word from the specified 32-bit value.</summary>
            <param name="dwValue">The value to be converted.</param>
            <returns>The return value is the low-order word of the specified value.</returns>
        </member>
        <member name="M:Vanara.PInvoke.Macros.MAKEINTRESOURCE(System.Int32)">
            <summary>
            Converts an integer value to a resource type compatible with the resource-management functions. This macro is used in place of a
            string containing the name of the resource.
            </summary>
            <param name="id">The integer value to be converted.</param>
            <returns>The return value is string representation of the integer value.</returns>
        </member>
        <member name="M:Vanara.PInvoke.Macros.MAKELONG(System.Int32,System.Int32)">
            <summary>Creates a LONG value by concatenating the specified values.</summary>
            <param name="wLow">The low-order word of the new value.</param>
            <param name="wHigh">The high-order word of the new value.</param>
            <returns>The return value is a LONG value.</returns>
        </member>
        <member name="M:Vanara.PInvoke.Macros.MAKELONG64(System.Int64,System.Int64)">
            <summary>Creates a LONG64 value by concatenating the specified values.</summary>
            <param name="dwLow">The low-order double word of the new value.</param>
            <param name="dwHigh">The high-order double word of the new value.</param>
            <returns>The return value is a LONG64 value.</returns>
        </member>
        <member name="M:Vanara.PInvoke.Macros.MAKELPARAM(System.Int32,System.Int32)">
            <summary>Creates a value for use as an lParam parameter in a message. The macro concatenates the specified values.</summary>
            <param name="wLow">The low-order word of the new value.</param>
            <param name="wHigh">The high-order word of the new value.</param>
            <returns>The return value is an LPARAM value.</returns>
        </member>
        <member name="T:Vanara.PInvoke.User32">
            <summary>User32.dll function with GDI params.</summary>
        </member>
        <member name="T:Vanara.PInvoke.User32.WindowMessage">
            <summary>Windows Messages</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_NULL">
            <summary>
            The WM_NULL message performs no operation. An application sends the WM_NULL message if it wants to post a message that the
            recipient window will ignore.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_CREATE">
            <summary>
            The WM_CREATE message is sent when an application requests that a window be created by calling the CreateWindowEx or
            CreateWindow function. (The message is sent before the function returns.) The window procedure of the new window receives
            this message after the window is created, but before the window becomes visible.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_DESTROY">
            <summary>
            The WM_DESTROY message is sent when a window is being destroyed. It is sent to the window procedure of the window being
            destroyed after the window is removed from the screen. This message is sent first to the window being destroyed and then to
            the child windows (if any) as they are destroyed. During the processing of the message, it can be assumed that all child
            windows still exist. ///
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_MOVE">
            <summary>The WM_MOVE message is sent after a window has been moved.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_SIZE">
            <summary>The WM_SIZE message is sent to a window after its size has changed.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_ACTIVATE">
            <summary>
            The WM_ACTIVATE message is sent to both the window being activated and the window being deactivated. If the windows use the
            same input queue, the message is sent synchronously, first to the window procedure of the top-level window being deactivated,
            then to the window procedure of the top-level window being activated. If the windows use different input queues, the message
            is sent asynchronously, so the window is activated immediately.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_SETFOCUS">
            <summary>The WM_SETFOCUS message is sent to a window after it has gained the keyboard focus.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_KILLFOCUS">
            <summary>The WM_KILLFOCUS message is sent to a window immediately before it loses the keyboard focus.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_ENABLE">
            <summary>
            The WM_ENABLE message is sent when an application changes the enabled state of a window. It is sent to the window whose
            enabled state is changing. This message is sent before the EnableWindow function returns, but after the enabled state
            (WS_DISABLED style bit) of the window has changed.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_SETREDRAW">
            <summary>
            An application sends the WM_SETREDRAW message to a window to allow changes in that window to be redrawn or to prevent changes
            in that window from being redrawn.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_SETTEXT">
            <summary>An application sends a WM_SETTEXT message to set the text of a window.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_GETTEXT">
            <summary>
            An application sends a WM_GETTEXT message to copy the text that corresponds to a window into a buffer provided by the caller.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_GETTEXTLENGTH">
            <summary>
            An application sends a WM_GETTEXTLENGTH message to determine the length, in characters, of the text associated with a window.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_PAINT">
            <summary>
            The WM_PAINT message is sent when the system or another application makes a request to paint a portion of an application's
            window. The message is sent when the UpdateWindow or RedrawWindow function is called, or by the DispatchMessage function when
            the application obtains a WM_PAINT message by using the GetMessage or PeekMessage function.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_CLOSE">
            <summary>The WM_CLOSE message is sent as a signal that a window or an application should terminate.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_QUERYENDSESSION">
            <summary>
            The WM_QUERYENDSESSION message is sent when the user chooses to end the session or when an application calls one of the
            system shutdown functions. If any application returns zero, the session is not ended. The system stops sending
            WM_QUERYENDSESSION messages as soon as one application returns zero. After processing this message, the system sends the
            WM_ENDSESSION message with the wParam parameter set to the results of the WM_QUERYENDSESSION message.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_QUERYOPEN">
            <summary>
            The WM_QUERYOPEN message is sent to an icon when the user requests that the window be restored to its previous size and position.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_ENDSESSION">
            <summary>
            The WM_ENDSESSION message is sent to an application after the system processes the results of the WM_QUERYENDSESSION message.
            The WM_ENDSESSION message informs the application whether the session is ending.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_QUIT">
            <summary>
            The WM_QUIT message indicates a request to terminate an application and is generated when the application calls the
            PostQuitMessage function. It causes the GetMessage function to return zero.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_ERASEBKGND">
            <summary>
            The WM_ERASEBKGND message is sent when the window background must be erased (for example, when a window is resized). The
            message is sent to prepare an invalidated portion of a window for painting.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_SYSCOLORCHANGE">
            <summary>This message is sent to all top-level windows when a change is made to a system color setting.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_SHOWWINDOW">
            <summary>The WM_SHOWWINDOW message is sent to a window when the window is about to be hidden or shown.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_WININICHANGE">
            <summary>
            An application sends the WM_WININICHANGE message to all top-level windows after making a change to the WIN.INI file. The
            SystemParametersInfo function sends this message after an application uses the function to change a setting in WIN.INI. Note
            The WM_WININICHANGE message is provided only for compatibility with earlier versions of the system. Applications should use
            the WM_SETTINGCHANGE message.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_SETTINGCHANGE">
            <summary>
            An application sends the WM_WININICHANGE message to all top-level windows after making a change to the WIN.INI file. The
            SystemParametersInfo function sends this message after an application uses the function to change a setting in WIN.INI. Note
            The WM_WININICHANGE message is provided only for compatibility with earlier versions of the system. Applications should use
            the WM_SETTINGCHANGE message.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_DEVMODECHANGE">
            <summary>The WM_DEVMODECHANGE message is sent to all top-level windows whenever the user changes device-mode settings.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_ACTIVATEAPP">
            <summary>
            The WM_ACTIVATEAPP message is sent when a window belonging to a different application than the active window is about to be
            activated. The message is sent to the application whose window is being activated and to the application whose window is
            being deactivated.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_FONTCHANGE">
            <summary>
            An application sends the WM_FONTCHANGE message to all top-level windows in the system after changing the pool of font resources.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_TIMECHANGE">
            <summary>A message that is sent whenever there is a change in the system time.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_CANCELMODE">
            <summary>
            The WM_CANCELMODE message is sent to cancel certain modes, such as mouse capture. For example, the system sends this message
            to the active window when a dialog box or message box is displayed. Certain functions also send this message explicitly to
            the specified window regardless of whether it is the active window. For example, the EnableWindow function sends this message
            when disabling the specified window.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_SETCURSOR">
            <summary>
            The WM_SETCURSOR message is sent to a window if the mouse causes the cursor to move within a window and mouse input is not captured.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_MOUSEACTIVATE">
            <summary>
            The WM_MOUSEACTIVATE message is sent when the cursor is in an inactive window and the user presses a mouse button. The parent
            window receives this message only if the child window passes it to the DefWindowProc function.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_CHILDACTIVATE">
            <summary>
            The WM_CHILDACTIVATE message is sent to a child window when the user clicks the window's title bar or when the window is
            activated, moved, or sized.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_QUEUESYNC">
            <summary>
            The WM_QUEUESYNC message is sent by a computer-based training (CBT) application to separate user-input messages from other
            messages sent through the WH_JOURNALPLAYBACK Hook procedure.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_GETMINMAXINFO">
            <summary>
            The WM_GETMINMAXINFO message is sent to a window when the size or position of the window is about to change. An application
            can use this message to override the window's default maximized size and position, or its default minimum or maximum tracking size.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_PAINTICON">
            <summary>
            Windows NT 3.51 and earlier: The WM_PAINTICON message is sent to a minimized window when the icon is to be painted. This
            message is not sent by newer versions of Microsoft Windows, except in unusual circumstances explained in the Remarks.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_ICONERASEBKGND">
            <summary>
            Windows NT 3.51 and earlier: The WM_ICONERASEBKGND message is sent to a minimized window when the background of the icon must
            be filled before painting the icon. A window receives this message only if a class icon is defined for the window; otherwise,
            WM_ERASEBKGND is sent. This message is not sent by newer versions of Windows.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_NEXTDLGCTL">
            <summary>
            The WM_NEXTDLGCTL message is sent to a dialog box procedure to set the keyboard focus to a different control in the dialog box.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_SPOOLERSTATUS">
            <summary>
            The WM_SPOOLERSTATUS message is sent from Print Manager whenever a job is added to or removed from the Print Manager queue.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_DRAWITEM">
            <summary>
            The WM_DRAWITEM message is sent to the parent window of an owner-drawn button, combo box, list box, or menu when a visual
            aspect of the button, combo box, list box, or menu has changed.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_MEASUREITEM">
            <summary>
            The WM_MEASUREITEM message is sent to the owner window of a combo box, list box, list view control, or menu item when the
            control or menu is created.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_DELETEITEM">
            <summary>
            Sent to the owner of a list box or combo box when the list box or combo box is destroyed or when items are removed by the
            LB_DELETESTRING, LB_RESETCONTENT, CB_DELETESTRING, or CB_RESETCONTENT message. The system sends a WM_DELETEITEM message for
            each deleted item. The system sends the WM_DELETEITEM message for any deleted list box or combo box item with nonzero item data.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_VKEYTOITEM">
            <summary>Sent by a list box with the LBS_WANTKEYBOARDINPUT style to its owner in response to a WM_KEYDOWN message.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_CHARTOITEM">
            <summary>Sent by a list box with the LBS_WANTKEYBOARDINPUT style to its owner in response to a WM_CHAR message.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_SETFONT">
            <summary>An application sends a WM_SETFONT message to specify the font that a control is to use when drawing text.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_GETFONT">
            <summary>
            An application sends a WM_GETFONT message to a control to retrieve the font with which the control is currently drawing its text.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_SETHOTKEY">
            <summary>
            An application sends a WM_SETHOTKEY message to a window to associate a hot key with the window. When the user presses the hot
            key, the system activates the window.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_GETHOTKEY">
            <summary>An application sends a WM_GETHOTKEY message to determine the hot key associated with a window.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_QUERYDRAGICON">
            <summary>
            The WM_QUERYDRAGICON message is sent to a minimized (iconic) window. The window is about to be dragged by the user but does
            not have an icon defined for its class. An application can return a handle to an icon or cursor. The system displays this
            cursor or icon while the user drags the icon.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_COMPAREITEM">
            <summary>
            The system sends the WM_COMPAREITEM message to determine the relative position of a new item in the sorted list of an
            owner-drawn combo box or list box. Whenever the application adds a new item, the system sends this message to the owner of a
            combo box or list box created with the CBS_SORT or LBS_SORT style.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_GETOBJECT">
            <summary>
            Active Accessibility sends the WM_GETOBJECT message to obtain information about an accessible object contained in a server
            application. Applications never send this message directly. It is sent only by Active Accessibility in response to calls to
            AccessibleObjectFromPoint, AccessibleObjectFromEvent, or AccessibleObjectFromWindow. However, server applications handle this message.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_COMPACTING">
            <summary>
            The WM_COMPACTING message is sent to all top-level windows when the system detects more than 12.5 percent of system time over
            a 30- to 60-second interval is being spent compacting memory. This indicates that system memory is low.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_COMMNOTIFY">
            <summary>WM_COMMNOTIFY is Obsolete for Win32-Based Applications</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_WINDOWPOSCHANGING">
            <summary>
            The WM_WINDOWPOSCHANGING message is sent to a window whose size, position, or place in the Z order is about to change as a
            result of a call to the SetWindowPos function or another window-management function.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_WINDOWPOSCHANGED">
            <summary>
            The WM_WINDOWPOSCHANGED message is sent to a window whose size, position, or place in the Z order has changed as a result of
            a call to the SetWindowPos function or another window-management function.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_POWER">
            <summary>
            Notifies applications that the system, typically a battery-powered personal computer, is about to enter a suspended mode.
            Use: POWERBROADCAST
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_COPYDATA">
            <summary>An application sends the WM_COPYDATA message to pass data to another application.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_CANCELJOURNAL">
            <summary>
            The WM_CANCELJOURNAL message is posted to an application when a user cancels the application's journaling activities. The
            message is posted with a NULL window handle.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_NOTIFY">
            <summary>Sent by a common control to its parent window when an event has occurred or the control requires some information.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_INPUTLANGCHANGEREQUEST">
            <summary>
            The WM_INPUTLANGCHANGEREQUEST message is posted to the window with the focus when the user chooses a new input language,
            either with the hotkey (specified in the Keyboard control panel application) or from the indicator on the system taskbar. An
            application can accept the change by passing the message to the DefWindowProc function or reject the change (and prevent it
            from taking place) by returning immediately.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_INPUTLANGCHANGE">
            <summary>
            The WM_INPUTLANGCHANGE message is sent to the topmost affected window after an application's input language has been changed.
            You should make any application-specific settings and pass the message to the DefWindowProc function, which passes the
            message to all first-level child windows. These child windows can pass the message to DefWindowProc to have it pass the
            message to their child windows, and so on.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_TCARD">
            <summary>
            Sent to an application that has initiated a training card with Microsoft Windows Help. The message informs the application
            when the user clicks an authorable button. An application initiates a training card by specifying the HELP_TCARD command in a
            call to the WinHelp function.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_HELP">
            <summary>
            Indicates that the user pressed the F1 key. If a menu is active when F1 is pressed, WM_HELP is sent to the window associated
            with the menu; otherwise, WM_HELP is sent to the window that has the keyboard focus. If no window has the keyboard focus,
            WM_HELP is sent to the currently active window.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_USERCHANGED">
            <summary>
            The WM_USERCHANGED message is sent to all windows after the user has logged on or off. When the user logs on or off, the
            system updates the user-specific settings. The system sends this message immediately after updating the settings.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_NOTIFYFORMAT">
            <summary>
            Determines if a window accepts ANSI or Unicode structures in the WM_NOTIFY notification message. WM_NOTIFYFORMAT messages are
            sent from a common control to its parent window and from the parent window to the common control.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_CONTEXTMENU">
            <summary>
            The WM_CONTEXTMENU message notifies a window that the user clicked the right mouse button (right-clicked) in the window.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_STYLECHANGING">
            <summary>
            The WM_STYLECHANGING message is sent to a window when the SetWindowLong function is about to change one or more of the
            window's styles.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_STYLECHANGED">
            <summary>
            The WM_STYLECHANGED message is sent to a window after the SetWindowLong function has changed one or more of the window's styles
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_DISPLAYCHANGE">
            <summary>The WM_DISPLAYCHANGE message is sent to all windows when the display resolution has changed.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_GETICON">
            <summary>
            The WM_GETICON message is sent to a window to retrieve a handle to the large or small icon associated with a window. The
            system displays the large icon in the ALT+TAB dialog, and the small icon in the window caption.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_SETICON">
            <summary>
            An application sends the WM_SETICON message to associate a new large or small icon with a window. The system displays the
            large icon in the ALT+TAB dialog box, and the small icon in the window caption.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_NCCREATE">
            <summary>The WM_NCCREATE message is sent prior to the WM_CREATE message when a window is first created.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_NCDESTROY">
            <summary>
            The WM_NCDESTROY message informs a window that its nonclient area is being destroyed. The DestroyWindow function sends the
            WM_NCDESTROY message to the window following the WM_DESTROY message. WM_DESTROY is used to free the allocated memory object
            associated with the window. The WM_NCDESTROY message is sent after the child windows have been destroyed. In contrast,
            WM_DESTROY is sent before the child windows are destroyed.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_NCCALCSIZE">
            <summary>
            The WM_NCCALCSIZE message is sent when the size and position of a window's client area must be calculated. By processing this
            message, an application can control the content of the window's client area when the size or position of the window changes.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_NCHITTEST">
            <summary>
            The WM_NCHITTEST message is sent to a window when the cursor moves, or when a mouse button is pressed or released. If the
            mouse is not captured, the message is sent to the window beneath the cursor. Otherwise, the message is sent to the window
            that has captured the mouse.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_NCPAINT">
            <summary>The WM_NCPAINT message is sent to a window when its frame must be painted.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_NCACTIVATE">
            <summary>
            The WM_NCACTIVATE message is sent to a window when its nonclient area needs to be changed to indicate an active or inactive state.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_GETDLGCODE">
            <summary>
            The WM_GETDLGCODE message is sent to the window procedure associated with a control. By default, the system handles all
            keyboard input to the control; the system interprets certain types of keyboard input as dialog box navigation keys. To
            override this default behavior, the control can respond to the WM_GETDLGCODE message to indicate the types of input it wants
            to process itself.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_SYNCPAINT">
            <summary>The WM_SYNCPAINT message is used to synchronize painting while avoiding linking independent GUI threads.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_UAHDESTROYWINDOW">
            <summary/>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_UAHDRAWMENU">
            <summary/>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_UAHDRAWMENUITEM">
            <summary/>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_UAHINITMENU">
            <summary/>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_UAHMEASUREMENUITEM">
            <summary/>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_UAHNCPAINTMENUPOPUP">
            <summary/>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_NCMOUSEMOVE">
            <summary>
            The WM_NCMOUSEMOVE message is posted to a window when the cursor is moved within the nonclient area of the window. This
            message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_NCLBUTTONDOWN">
            <summary>
            The WM_NCLBUTTONDOWN message is posted when the user presses the left mouse button while the cursor is within the nonclient
            area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this
            message is not posted.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_NCLBUTTONUP">
            <summary>
            The WM_NCLBUTTONUP message is posted when the user releases the left mouse button while the cursor is within the nonclient
            area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this
            message is not posted.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_NCLBUTTONDBLCLK">
            <summary>
            The WM_NCLBUTTONDBLCLK message is posted when the user double-clicks the left mouse button while the cursor is within the
            nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the
            mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_NCRBUTTONDOWN">
            <summary>
            The WM_NCRBUTTONDOWN message is posted when the user presses the right mouse button while the cursor is within the nonclient
            area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this
            message is not posted.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_NCRBUTTONUP">
            <summary>
            The WM_NCRBUTTONUP message is posted when the user releases the right mouse button while the cursor is within the nonclient
            area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this
            message is not posted.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_NCRBUTTONDBLCLK">
            <summary>
            The WM_NCRBUTTONDBLCLK message is posted when the user double-clicks the right mouse button while the cursor is within the
            nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the
            mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_NCMBUTTONDOWN">
            <summary>
            The WM_NCMBUTTONDOWN message is posted when the user presses the middle mouse button while the cursor is within the nonclient
            area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this
            message is not posted.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_NCMBUTTONUP">
            <summary>
            The WM_NCMBUTTONUP message is posted when the user releases the middle mouse button while the cursor is within the nonclient
            area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this
            message is not posted.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_NCMBUTTONDBLCLK">
            <summary>
            The WM_NCMBUTTONDBLCLK message is posted when the user double-clicks the middle mouse button while the cursor is within the
            nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the
            mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_NCXBUTTONDOWN">
            <summary>
            The WM_NCXBUTTONDOWN message is posted when the user presses the first or second X button while the cursor is in the
            nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the
            mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_NCXBUTTONUP">
            <summary>
            The WM_NCXBUTTONUP message is posted when the user releases the first or second X button while the cursor is in the nonclient
            area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this
            message is not posted.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_NCXBUTTONDBLCLK">
            <summary>
            The WM_NCXBUTTONDBLCLK message is posted when the user double-clicks the first or second X button while the cursor is in the
            nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the
            mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_BM_CLICK">
            <summary>
            The WM_INPUT_DEVICE_CHANGE message is sent to the window that registered to receive raw input. A window receives this message
            through its WindowProc function.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_INPUT_DEVICE_CHANGE">
            <summary>
            The WM_INPUT_DEVICE_CHANGE message is sent to the window that registered to receive raw input. A window receives this message
            through its WindowProc function.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_INPUT">
            <summary>The WM_INPUT message is sent to the window that is getting raw input.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_KEYFIRST">
            <summary>This message filters for keyboard messages.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_KEYDOWN">
            <summary>
            The WM_KEYDOWN message is posted to the window with the keyboard focus when a nonsystem key is pressed. A nonsystem key is a
            key that is pressed when the ALT key is not pressed.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_KEYUP">
            <summary>
            The WM_KEYUP message is posted to the window with the keyboard focus when a nonsystem key is released. A nonsystem key is a
            key that is pressed when the ALT key is not pressed, or a keyboard key that is pressed when a window has the keyboard focus.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_CHAR">
            <summary>
            The WM_CHAR message is posted to the window with the keyboard focus when a WM_KEYDOWN message is translated by the
            TranslateMessage function. The WM_CHAR message contains the character code of the key that was pressed.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_DEADCHAR">
            <summary>
            The WM_DEADCHAR message is posted to the window with the keyboard focus when a WM_KEYUP message is translated by the
            TranslateMessage function. WM_DEADCHAR specifies a character code generated by a dead key. A dead key is a key that generates
            a character, such as the umlaut (double-dot), that is combined with another character to form a composite character. For
            example, the umlaut-O character (Ö) is generated by typing the dead key for the umlaut character, and then typing the O key.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_SYSKEYDOWN">
            <summary>
            The WM_SYSKEYDOWN message is posted to the window with the keyboard focus when the user presses the F10 key (which activates
            the menu bar) or holds down the ALT key and then presses another key. It also occurs when no window currently has the
            keyboard focus; in this case, the WM_SYSKEYDOWN message is sent to the active window. The window that receives the message
            can distinguish between these two contexts by checking the context code in the lParam parameter.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_SYSKEYUP">
            <summary>
            The WM_SYSKEYUP message is posted to the window with the keyboard focus when the user releases a key that was pressed while
            the ALT key was held down. It also occurs when no window currently has the keyboard focus; in this case, the WM_SYSKEYUP
            message is sent to the active window. The window that receives the message can distinguish between these two contexts by
            checking the context code in the lParam parameter.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_SYSCHAR">
            <summary>
            The WM_SYSCHAR message is posted to the window with the keyboard focus when a WM_SYSKEYDOWN message is translated by the
            TranslateMessage function. It specifies the character code of a system character key — that is, a character key that is
            pressed while the ALT key is down.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_SYSDEADCHAR">
            <summary>
            The WM_SYSDEADCHAR message is sent to the window with the keyboard focus when a WM_SYSKEYDOWN message is translated by the
            TranslateMessage function. WM_SYSDEADCHAR specifies the character code of a system dead key — that is, a dead key that is
            pressed while holding down the ALT key.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_UNICHAR">
            <summary>
            The WM_UNICHAR message is posted to the window with the keyboard focus when a WM_KEYDOWN message is translated by the
            TranslateMessage function. The WM_UNICHAR message contains the character code of the key that was pressed. The WM_UNICHAR
            message is equivalent to WM_CHAR, but it uses Unicode Transformation Format (UTF)-32, whereas WM_CHAR uses UTF-16. It is
            designed to send or post Unicode characters to ANSI windows and it can can handle Unicode Supplementary Plane characters.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_KEYLAST">
            <summary>This message filters for keyboard messages.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_IME_STARTCOMPOSITION">
            <summary>
            Sent immediately before the IME generates the composition string as a result of a keystroke. A window receives this message
            through its WindowProc function.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_IME_ENDCOMPOSITION">
            <summary>
            Sent to an application when the IME ends composition. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_IME_COMPOSITION">
            <summary>
            Sent to an application when the IME changes composition status as a result of a keystroke. A window receives this message
            through its WindowProc function.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_IME_KEYLAST">
            <summary/>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_INITDIALOG">
            <summary>
            The WM_INITDIALOG message is sent to the dialog box procedure immediately before a dialog box is displayed. Dialog box
            procedures typically use this message to initialize controls and carry out any other initialization tasks that affect the
            appearance of the dialog box.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_COMMAND">
            <summary>
            The WM_COMMAND message is sent when the user selects a command item from a menu, when a control sends a notification message
            to its parent window, or when an accelerator keystroke is translated.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_SYSCOMMAND">
            <summary>
            A window receives this message when the user chooses a command from the Window menu, clicks the maximize button, minimize
            button, restore button, close button, or moves the form. You can stop the form from moving by filtering this out.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_TIMER">
            <summary>
            The WM_TIMER message is posted to the installing thread's message queue when a timer expires. The message is posted by the
            GetMessage or PeekMessage function.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_HSCROLL">
            <summary>
            The WM_HSCROLL message is sent to a window when a scroll event occurs in the window's standard horizontal scroll bar. This
            message is also sent to the owner of a horizontal scroll bar control when a scroll event occurs in the control.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_VSCROLL">
            <summary>
            The WM_VSCROLL message is sent to a window when a scroll event occurs in the window's standard vertical scroll bar. This
            message is also sent to the owner of a vertical scroll bar control when a scroll event occurs in the control.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_INITMENU">
            <summary>
            The WM_INITMENU message is sent when a menu is about to become active. It occurs when the user clicks an item on the menu bar
            or presses a menu key. This allows the application to modify the menu before it is displayed.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_INITMENUPOPUP">
            <summary>
            The WM_INITMENUPOPUP message is sent when a drop-down menu or submenu is about to become active. This allows an application
            to modify the menu before it is displayed, without changing the entire menu.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_MENUSELECT">
            <summary>The WM_MENUSELECT message is sent to a menu's owner window when the user selects a menu item.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_MENUCHAR">
            <summary>
            The WM_MENUCHAR message is sent when a menu is active and the user presses a key that does not correspond to any mnemonic or
            accelerator key. This message is sent to the window that owns the menu.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_ENTERIDLE">
            <summary>
            The WM_ENTERIDLE message is sent to the owner window of a modal dialog box or menu that is entering an idle state. A modal
            dialog box or menu enters an idle state when no messages are waiting in its queue after it has processed one or more previous messages.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_MENURBUTTONUP">
            <summary>
            The WM_MENURBUTTONUP message is sent when the user releases the right mouse button while the cursor is on a menu item.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_MENUDRAG">
            <summary>The WM_MENUDRAG message is sent to the owner of a drag-and-drop menu when the user drags a menu item.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_MENUGETOBJECT">
            <summary>
            The WM_MENUGETOBJECT message is sent to the owner of a drag-and-drop menu when the mouse cursor enters a menu item or moves
            from the center of the item to the top or bottom of the item.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_UNINITMENUPOPUP">
            <summary>The WM_UNINITMENUPOPUP message is sent when a drop-down menu or submenu has been destroyed.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_MENUCOMMAND">
            <summary>The WM_MENUCOMMAND message is sent when the user makes a selection from a menu.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_CHANGEUISTATE">
            <summary>An application sends the WM_CHANGEUISTATE message to indicate that the user interface (UI) state should be changed.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_UPDATEUISTATE">
            <summary>
            An application sends the WM_UPDATEUISTATE message to change the user interface (UI) state for the specified window and all
            its child windows.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_QUERYUISTATE">
            <summary>An application sends the WM_QUERYUISTATE message to retrieve the user interface (UI) state for a window.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_CTLCOLORMSGBOX">
            <summary>
            The WM_CTLCOLORMSGBOX message is sent to the owner window of a message box before Windows draws the message box. By
            responding to this message, the owner window can set the text and background colors of the message box by using the given
            display device context handle.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_CTLCOLOREDIT">
            <summary>
            An edit control that is not read-only or disabled sends the WM_CTLCOLOREDIT message to its parent window when the control is
            about to be drawn. By responding to this message, the parent window can use the specified device context handle to set the
            text and background colors of the edit control.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_CTLCOLORLISTBOX">
            <summary>
            Sent to the parent window of a list box before the system draws the list box. By responding to this message, the parent
            window can set the text and background colors of the list box by using the specified display device context handle.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_CTLCOLORBTN">
            <summary>
            The WM_CTLCOLORBTN message is sent to the parent window of a button before drawing the button. The parent window can change
            the button's text and background colors. However, only owner-drawn buttons respond to the parent window processing this message.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_CTLCOLORDLG">
            <summary>
            The WM_CTLCOLORDLG message is sent to a dialog box before the system draws the dialog box. By responding to this message, the
            dialog box can set its text and background colors using the specified display device context handle.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_CTLCOLORSCROLLBAR">
            <summary>
            The WM_CTLCOLORSCROLLBAR message is sent to the parent window of a scroll bar control when the control is about to be drawn.
            By responding to this message, the parent window can use the display context handle to set the background color of the scroll
            bar control.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_CTLCOLORSTATIC">
            <summary>
            A static control, or an edit control that is read-only or disabled, sends the WM_CTLCOLORSTATIC message to its parent window
            when the control is about to be drawn. By responding to this message, the parent window can use the specified device context
            handle to set the text and background colors of the static control.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_MOUSEFIRST">
            <summary>Use WM_MOUSEFIRST to specify the first mouse message. Use the PeekMessage() Function.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_MOUSEMOVE">
            <summary>
            The WM_MOUSEMOVE message is posted to a window when the cursor moves. If the mouse is not captured, the message is posted to
            the window that contains the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_LBUTTONDOWN">
            <summary>
            The WM_LBUTTONDOWN message is posted when the user presses the left mouse button while the cursor is in the client area of a
            window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is
            posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_LBUTTONUP">
            <summary>
            The WM_LBUTTONUP message is posted when the user releases the left mouse button while the cursor is in the client area of a
            window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is
            posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_LBUTTONDBLCLK">
            <summary>
            The WM_LBUTTONDBLCLK message is posted when the user double-clicks the left mouse button while the cursor is in the client
            area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the
            message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_RBUTTONDOWN">
            <summary>
            The WM_RBUTTONDOWN message is posted when the user presses the right mouse button while the cursor is in the client area of a
            window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is
            posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_RBUTTONUP">
            <summary>
            The WM_RBUTTONUP message is posted when the user releases the right mouse button while the cursor is in the client area of a
            window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is
            posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_RBUTTONDBLCLK">
            <summary>
            The WM_RBUTTONDBLCLK message is posted when the user double-clicks the right mouse button while the cursor is in the client
            area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the
            message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_MBUTTONDOWN">
            <summary>
            The WM_MBUTTONDOWN message is posted when the user presses the middle mouse button while the cursor is in the client area of
            a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is
            posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_MBUTTONUP">
            <summary>
            The WM_MBUTTONUP message is posted when the user releases the middle mouse button while the cursor is in the client area of a
            window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is
            posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_MBUTTONDBLCLK">
            <summary>
            The WM_MBUTTONDBLCLK message is posted when the user double-clicks the middle mouse button while the cursor is in the client
            area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the
            message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_MOUSEWHEEL">
            <summary>
            The WM_MOUSEWHEEL message is sent to the focus window when the mouse wheel is rotated. The DefWindowProc function propagates
            the message to the window's parent. There should be no internal forwarding of the message, since DefWindowProc propagates it
            up the parent chain until it finds a window that processes it.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_XBUTTONDOWN">
            <summary>
            The WM_XBUTTONDOWN message is posted when the user presses the first or second X button while the cursor is in the client
            area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the
            message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_XBUTTONUP">
            <summary>
            The WM_XBUTTONUP message is posted when the user releases the first or second X button while the cursor is in the client area
            of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is
            posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_XBUTTONDBLCLK">
            <summary>
            The WM_XBUTTONDBLCLK message is posted when the user double-clicks the first or second X button while the cursor is in the
            client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the
            message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_MOUSEHWHEEL">
            <summary>
            The WM_MOUSEHWHEEL message is sent to the focus window when the mouse's horizontal scroll wheel is tilted or rotated. The
            DefWindowProc function propagates the message to the window's parent. There should be no internal forwarding of the message,
            since DefWindowProc propagates it up the parent chain until it finds a window that processes it.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_MOUSELAST">
            <summary>Use WM_MOUSELAST to specify the last mouse message. Used with PeekMessage() Function.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_PARENTNOTIFY">
            <summary>
            The WM_PARENTNOTIFY message is sent to the parent of a child window when the child window is created or destroyed, or when
            the user clicks a mouse button while the cursor is over the child window. When the child window is being created, the system
            sends WM_PARENTNOTIFY just before the CreateWindow or CreateWindowEx function that creates the window returns. When the child
            window is being destroyed, the system sends the message before any processing to destroy the window takes place.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_ENTERMENULOOP">
            <summary>
            The WM_ENTERMENULOOP message informs an application's main window procedure that a menu modal loop has been entered.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_EXITMENULOOP">
            <summary>The WM_EXITMENULOOP message informs an application's main window procedure that a menu modal loop has been exited.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_NEXTMENU">
            <summary>
            The WM_NEXTMENU message is sent to an application when the right or left arrow key is used to switch between the menu bar and
            the system menu.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_SIZING">
            <summary>
            The WM_SIZING message is sent to a window that the user is resizing. By processing this message, an application can monitor
            the size and position of the drag rectangle and, if needed, change its size or position.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_CAPTURECHANGED">
            <summary>The WM_CAPTURECHANGED message is sent to the window that is losing the mouse capture.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_MOVING">
            <summary>
            The WM_MOVING message is sent to a window that the user is moving. By processing this message, an application can monitor the
            position of the drag rectangle and, if needed, change its position.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_POWERBROADCAST">
            <summary>Notifies applications that a power-management event has occurred.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_DEVICECHANGE">
            <summary>Notifies an application of a change to the hardware configuration of a device or the computer.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_MDICREATE">
            <summary>
            An application sends the WM_MDICREATE message to a multiple-document interface (MDI) client window to create an MDI child window.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_MDIDESTROY">
            <summary>
            An application sends the WM_MDIDESTROY message to a multiple-document interface (MDI) client window to close an MDI child window.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_MDIACTIVATE">
            <summary>
            An application sends the WM_MDIACTIVATE message to a multiple-document interface (MDI) client window to instruct the client
            window to activate a different MDI child window.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_MDIRESTORE">
            <summary>
            An application sends the WM_MDIRESTORE message to a multiple-document interface (MDI) client window to restore an MDI child
            window from maximized or minimized size.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_MDINEXT">
            <summary>
            An application sends the WM_MDINEXT message to a multiple-document interface (MDI) client window to activate the next or
            previous child window.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_MDIMAXIMIZE">
            <summary>
            An application sends the WM_MDIMAXIMIZE message to a multiple-document interface (MDI) client window to maximize an MDI child
            window. The system resizes the child window to make its client area fill the client window. The system places the child
            window's window menu icon in the rightmost position of the frame window's menu bar, and places the child window's restore
            icon in the leftmost position. The system also appends the title bar text of the child window to that of the frame window.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_MDITILE">
            <summary>
            An application sends the WM_MDITILE message to a multiple-document interface (MDI) client window to arrange all of its MDI
            child windows in a tile format.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_MDICASCADE">
            <summary>
            An application sends the WM_MDICASCADE message to a multiple-document interface (MDI) client window to arrange all its child
            windows in a cascade format.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_MDIICONARRANGE">
            <summary>
            An application sends the WM_MDIICONARRANGE message to a multiple-document interface (MDI) client window to arrange all
            minimized MDI child windows. It does not affect child windows that are not minimized.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_MDIGETACTIVE">
            <summary>
            An application sends the WM_MDIGETACTIVE message to a multiple-document interface (MDI) client window to retrieve the handle
            to the active MDI child window.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_MDISETMENU">
            <summary>
            An application sends the WM_MDISETMENU message to a multiple-document interface (MDI) client window to replace the entire
            menu of an MDI frame window, to replace the window menu of the frame window, or both.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_ENTERSIZEMOVE">
            <summary>
            The WM_ENTERSIZEMOVE message is sent one time to a window after it enters the moving or sizing modal loop. The window enters
            the moving or sizing modal loop when the user clicks the window's title bar or sizing border, or when the window passes the
            WM_SYSCOMMAND message to the DefWindowProc function and the wParam parameter of the message specifies the SC_MOVE or SC_SIZE
            value. The operation is complete when DefWindowProc returns. The system sends the WM_ENTERSIZEMOVE message regardless of
            whether the dragging of full windows is enabled.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_EXITSIZEMOVE">
            <summary>
            The WM_EXITSIZEMOVE message is sent one time to a window, after it has exited the moving or sizing modal loop. The window
            enters the moving or sizing modal loop when the user clicks the window's title bar or sizing border, or when the window
            passes the WM_SYSCOMMAND message to the DefWindowProc function and the wParam parameter of the message specifies the SC_MOVE
            or SC_SIZE value. The operation is complete when DefWindowProc returns.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_DROPFILES">
            <summary>
            Sent when the user drops a file on the window of an application that has registered itself as a recipient of dropped files.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_MDIREFRESHMENU">
            <summary>
            An application sends the WM_MDIREFRESHMENU message to a multiple-document interface (MDI) client window to refresh the window
            menu of the MDI frame window.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_IME_SETCONTEXT">
            <summary>Sent to an application when a window is activated. A window receives this message through its WindowProc function.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_IME_NOTIFY">
            <summary>
            Sent to an application to notify it of changes to the IME window. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_IME_CONTROL">
            <summary>
            Sent by an application to direct the IME window to carry out the requested command. The application uses this message to
            control the IME window that it has created. To send this message, the application calls the SendMessage function with the
            following parameters.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_IME_COMPOSITIONFULL">
            <summary>
            Sent to an application when the IME window finds no space to extend the area for the composition window. A window receives
            this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_IME_SELECT">
            <summary>
            Sent to an application when the operating system is about to change the current IME. A window receives this message through
            its WindowProc function.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_IME_CHAR">
            <summary>
            Sent to an application when the IME gets a character of the conversion result. A window receives this message through its
            WindowProc function.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_IME_REQUEST">
            <summary>
            Sent to an application to provide commands and request information. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_IME_KEYDOWN">
            <summary>
            Sent to an application by the IME to notify the application of a key press and to keep message order. A window receives this
            message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_IME_KEYUP">
            <summary>
            Sent to an application by the IME to notify the application of a key release and to keep message order. A window receives
            this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_MOUSEHOVER">
            <summary>
            The WM_MOUSEHOVER message is posted to a window when the cursor hovers over the client area of the window for the period of
            time specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_MOUSELEAVE">
            <summary>
            The WM_MOUSELEAVE message is posted to a window when the cursor leaves the client area of the window specified in a prior
            call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_NCMOUSEHOVER">
            <summary>
            The WM_NCMOUSEHOVER message is posted to a window when the cursor hovers over the nonclient area of the window for the period
            of time specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_NCMOUSELEAVE">
            <summary>
            The WM_NCMOUSELEAVE message is posted to a window when the cursor leaves the nonclient area of the window specified in a
            prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_WTSSESSION_CHANGE">
            <summary>The WM_WTSSESSION_CHANGE message notifies applications of changes in session state.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_TABLET_FIRST">
            <summary/>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_TABLET_LAST">
            <summary/>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_DPICHANGED">
            <summary>
            The WM_DISPLAYCHANGE message is sent when the effective dots per inch (dpi) for a window has changed. The DPI is the scale
            factor for a window.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_CUT">
            <summary>
            An application sends a WM_CUT message to an edit control or combo box to delete (cut) the current selection, if any, in the
            edit control and copy the deleted text to the clipboard in CF_TEXT format.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_COPY">
            <summary>
            An application sends the WM_COPY message to an edit control or combo box to copy the current selection to the clipboard in
            CF_TEXT format.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_PASTE">
            <summary>
            An application sends a WM_PASTE message to an edit control or combo box to copy the current content of the clipboard to the
            edit control at the current caret position. Data is inserted only if the clipboard contains data in CF_TEXT format.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_CLEAR">
            <summary>
            An application sends a WM_CLEAR message to an edit control or combo box to delete (clear) the current selection, if any, from
            the edit control.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_UNDO">
            <summary>
            An application sends a WM_UNDO message to an edit control to undo the last operation. When this message is sent to an edit
            control, the previously deleted text is restored or the previously added text is deleted.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_RENDERFORMAT">
            <summary>
            The WM_RENDERFORMAT message is sent to the clipboard owner if it has delayed rendering a specific clipboard format and if an
            application has requested data in that format. The clipboard owner must render data in the specified format and place it on
            the clipboard by calling the SetClipboardData function.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_RENDERALLFORMATS">
            <summary>
            The WM_RENDERALLFORMATS message is sent to the clipboard owner before it is destroyed, if the clipboard owner has delayed
            rendering one or more clipboard formats. For the content of the clipboard to remain available to other applications, the
            clipboard owner must render data in all the formats it is capable of generating, and place the data on the clipboard by
            calling the SetClipboardData function.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_DESTROYCLIPBOARD">
            <summary>
            The WM_DESTROYCLIPBOARD message is sent to the clipboard owner when a call to the EmptyClipboard function empties the clipboard.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_DRAWCLIPBOARD">
            <summary>
            The WM_DRAWCLIPBOARD message is sent to the first window in the clipboard viewer chain when the content of the clipboard
            changes. This enables a clipboard viewer window to display the new content of the clipboard.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_PAINTCLIPBOARD">
            <summary>
            The WM_PAINTCLIPBOARD message is sent to the clipboard owner by a clipboard viewer window when the clipboard contains data in
            the CF_OWNERDISPLAY format and the clipboard viewer's client area needs repainting.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_VSCROLLCLIPBOARD">
            <summary>
            The WM_VSCROLLCLIPBOARD message is sent to the clipboard owner by a clipboard viewer window when the clipboard contains data
            in the CF_OWNERDISPLAY format and an event occurs in the clipboard viewer's vertical scroll bar. The owner should scroll the
            clipboard image and update the scroll bar values.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_SIZECLIPBOARD">
            <summary>
            The WM_SIZECLIPBOARD message is sent to the clipboard owner by a clipboard viewer window when the clipboard contains data in
            the CF_OWNERDISPLAY format and the clipboard viewer's client area has changed size.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_ASKCBFORMATNAME">
            <summary>
            The WM_ASKCBFORMATNAME message is sent to the clipboard owner by a clipboard viewer window to request the name of a
            CF_OWNERDISPLAY clipboard format.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_CHANGECBCHAIN">
            <summary>
            The WM_CHANGECBCHAIN message is sent to the first window in the clipboard viewer chain when a window is being removed from
            the chain.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_HSCROLLCLIPBOARD">
            <summary>
            The WM_HSCROLLCLIPBOARD message is sent to the clipboard owner by a clipboard viewer window. This occurs when the clipboard
            contains data in the CF_OWNERDISPLAY format and an event occurs in the clipboard viewer's horizontal scroll bar. The owner
            should scroll the clipboard image and update the scroll bar values.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_QUERYNEWPALETTE">
            <summary>
            This message informs a window that it is about to receive the keyboard focus, giving the window the opportunity to realize
            its logical palette when it receives the focus.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_PALETTEISCHANGING">
            <summary>The WM_PALETTEISCHANGING message informs applications that an application is going to realize its logical palette.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_PALETTECHANGED">
            <summary>
            This message is sent by the OS to all top-level and overlapped windows after the window with the keyboard focus realizes its
            logical palette. This message enables windows that do not have the keyboard focus to realize their logical palettes and
            update their client areas.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_HOTKEY">
            <summary>
            The WM_HOTKEY message is posted when the user presses a hot key registered by the RegisterHotKey function. The message is
            placed at the top of the message queue associated with the thread that registered the hot key.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_PRINT">
            <summary>
            The WM_PRINT message is sent to a window to request that it draw itself in the specified device context, most commonly in a
            printer device context.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_PRINTCLIENT">
            <summary>
            The WM_PRINTCLIENT message is sent to a window to request that it draw its client area in the specified device context, most
            commonly in a printer device context.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_APPCOMMAND">
            <summary>
            The WM_APPCOMMAND message notifies a window that the user generated an application command event, for example, by clicking an
            application command button using the mouse or typing an application command key on the keyboard.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_THEMECHANGED">
            <summary>
            The WM_THEMECHANGED message is broadcast to every window following a theme change event. Examples of theme change events are
            the activation of a theme, the deactivation of a theme, or a transition from one theme to another.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_CLIPBOARDUPDATE">
            <summary>Sent when the contents of the clipboard have changed.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_DWMCOMPOSITIONCHANGED">
            <summary>
            The system will send a window the WM_DWMCOMPOSITIONCHANGED message to indicate that the availability of desktop composition
            has changed.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_DWMNCRENDERINGCHANGED">
            <summary>
            WM_DWMNCRENDERINGCHANGED is called when the non-client area rendering status of a window has changed. Only windows that have
            set the flag DWM_BLURBEHIND.fTransitionOnMaximized to true will get this message.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_DWMCOLORIZATIONCOLORCHANGED">
            <summary>Sent to all top-level windows when the colorization color has changed.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_DWMWINDOWMAXIMIZEDCHANGE">
            <summary>
            WM_DWMWINDOWMAXIMIZEDCHANGE will let you know when a DWM composed window is maximized. You also have to register for this
            message as well. You'd have other window go opaque when this message is sent.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_GETTITLEBARINFOEX">
            <summary>Sent to request extended title bar information. A window receives this message through its WindowProc function.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_HANDHELDFIRST">
            <summary/>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_HANDHELDLAST">
            <summary/>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_AFXFIRST">
            <summary/>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_AFXLAST">
            <summary/>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_PENWINFIRST">
            <summary/>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_PENWINLAST">
            <summary/>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_APP">
            <summary>
            The WM_APP constant is used by applications to help define private messages, usually of the form WM_APP+X, where X is an
            integer value.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_USER">
            <summary>
            The WM_USER constant is used by applications to help define private messages for use by private window classes, usually of
            the form WM_USER+X, where X is an integer value.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_CPL_LAUNCH">
            <summary>
            An application sends the WM_CPL_LAUNCH message to Windows Control Panel to request that a Control Panel application be started.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_CPL_LAUNCHED">
            <summary>
            The WM_CPL_LAUNCHED message is sent when a Control Panel application, started by the WM_CPL_LAUNCH message, has closed. The
            WM_CPL_LAUNCHED message is sent to the window identified by the wParam parameter of the WM_CPL_LAUNCH message that started
            the application.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_REFLECT">
            <summary>
            Reflects messages back to child controls. Sometimes you want to write a self-contained control based on standard Windows
            control, typically by using subclassing or superclassing. Unfortunately, most standard controls send interesting
            notifications to their parents, not to themselves, so your window proc won't normally receive them. A parent window could
            help by reflecting (sending) those messages back to the child window so that your window proc could process them. By
            convention, a message WM_X is reflected back as (OCM__BASE + WM_X). This is mainly to avoid conflicts with real notifications
            coming from the child windows of the control (e.g. a list view control has a header control as its child window, and receives
            WM_NOTIFY from the header. It would be inconvenient if you had to figure out every time whether WM_NOTIFY came from the
            header or reflected from your parent).
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowMessage.WM_SYSTIMER">
            <summary>
            WM_SYSTIMER is a well-known yet still undocumented message. Windows uses WM_SYSTIMER for internal actions like scrolling.
            </summary>
        </member>
        <member name="T:Vanara.PInvoke.User32.WindowStyles">
            <summary>
            Window Styles. The following styles can be specified wherever a window style is required. After the control has been created,
            these styles cannot be modified, except as noted.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStyles.WS_BORDER">
            <summary>The window has a thin-line border.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStyles.WS_CAPTION">
            <summary>The window has a title bar (includes the WS_BORDER style).</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStyles.WS_CHILD">
            <summary>
            The window is a child window. A window with this style cannot have a menu bar. This style cannot be used with the WS_POPUP style.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStyles.WS_CLIPCHILDREN">
            <summary>
            Excludes the area occupied by child windows when drawing occurs within the parent window. This style is used when creating
            the parent window.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStyles.WS_CLIPSIBLINGS">
            <summary>
            Clips child windows relative to each other; that is, when a particular child window receives a WM_PAINT message, the
            WS_CLIPSIBLINGS style clips all other overlapping child windows out of the region of the child window to be updated. If
            WS_CLIPSIBLINGS is not specified and child windows overlap, it is possible, when drawing within the client area of a child
            window, to draw within the client area of a neighboring child window.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStyles.WS_DISABLED">
            <summary>
            The window is initially disabled. A disabled window cannot receive input from the user. To change this after a window has
            been created, use the EnableWindow function.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStyles.WS_DLGFRAME">
            <summary>
            The window has a border of a style typically used with dialog boxes. A window with this style cannot have a title bar.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStyles.WS_GROUP">
            <summary>
            The window is the first control of a group of controls. The group consists of this first control and all controls defined
            after it, up to the next control with the WS_GROUP style. The first control in each group usually has the WS_TABSTOP style so
            that the user can move from group to group. The user can subsequently change the keyboard focus from one control in the group
            to the next control in the group by using the direction keys. You can turn this style on and off to change dialog box
            navigation. To change this style after a window has been created, use the SetWindowLong function.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStyles.WS_HSCROLL">
            <summary>The window has a horizontal scroll bar.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStyles.WS_MAXIMIZE">
            <summary>The window is initially maximized.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStyles.WS_MAXIMIZEBOX">
            <summary>
            The window has a maximize button. Cannot be combined with the WS_EX_CONTEXTHELP style. The WS_SYSMENU style must also be specified.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStyles.WS_MINIMIZE">
            <summary>The window is initially minimized.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStyles.WS_MINIMIZEBOX">
            <summary>
            The window has a minimize button. Cannot be combined with the WS_EX_CONTEXTHELP style. The WS_SYSMENU style must also be specified.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStyles.WS_OVERLAPPED">
            <summary>The window is an overlapped window. An overlapped window has a title bar and a border.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStyles.WS_OVERLAPPEDWINDOW">
            <summary>The window is an overlapped window.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStyles.WS_POPUP">
            <summary>The window is a pop-up window. This style cannot be used with the WS_CHILD style.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStyles.WS_POPUPWINDOW">
            <summary>
            The window is a pop-up window. The WS_CAPTION and WS_POPUPWINDOW styles must be combined to make the window menu visible.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStyles.WS_THICKFRAME">
            <summary>The window has a sizing border.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStyles.WS_SYSMENU">
            <summary>The window has a window menu on its title bar. The WS_CAPTION style must also be specified.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStyles.WS_TABSTOP">
            <summary>
            The window is a control that can receive the keyboard focus when the user presses the TAB key. Pressing the TAB key changes
            the keyboard focus to the next control with the WS_TABSTOP style. You can turn this style on and off to change dialog box
            navigation. To change this style after a window has been created, use the SetWindowLong function. For user-created windows
            and modeless dialogs to work with tab stops, alter the message loop to call the IsDialogMessage function.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStyles.WS_VISIBLE">
            <summary>
            The window is initially visible. This style can be turned on and off by using the ShowWindow or SetWindowPos function.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStyles.WS_VSCROLL">
            <summary>The window has a vertical scroll bar.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStyles.WS_TILED">
            <summary>
            The window is an overlapped window. An overlapped window has a title bar and a border. Same as the WS_OVERLAPPED style.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStyles.WS_ICONIC">
            <summary>The window is initially minimized. Same as the WS_MINIMIZE style.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStyles.WS_SIZEBOX">
            <summary>The window has a sizing border. Same as the WS_THICKFRAME style.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStyles.WS_TILEDWINDOW">
            <summary>The window is an overlapped window. Same as the WS_OVERLAPPEDWINDOW style.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStyles.WS_CHILDWINDOW">
            <summary>Same as the WS_CHILD style.</summary>
        </member>
        <member name="T:Vanara.PInvoke.User32.WindowStylesEx">
            <summary>Extended window styles.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStylesEx.WS_EX_ACCEPTFILES">
            <summary>Specifies a window that accepts drag-drop files.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStylesEx.WS_EX_APPWINDOW">
            <summary>Forces a top-level window onto the taskbar when the window is visible.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStylesEx.WS_EX_CLIENTEDGE">
            <summary>Specifies a window that has a border with a sunken edge.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStylesEx.WS_EX_COMPOSITED">
            <summary>
            Specifies a window that paints all descendants in bottom-to-top painting order using double-buffering. This cannot be used if
            the window has a class style of either CS_OWNDC or CS_CLASSDC. This style is not supported in Windows 2000.
            </summary>
            <remarks>
            With WS_EX_COMPOSITED set, all descendants of a window get bottom-to-top painting order using double-buffering. Bottom-to-top
            painting order allows a descendent window to have translucency (alpha) and transparency (color-key) effects, but only if the
            descendent window also has the WS_EX_TRANSPARENT bit set. Double-buffering allows the window and its descendents to be
            painted without flicker.
            </remarks>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStylesEx.WS_EX_CONTEXTHELP">
            <summary>
            Specifies a window that includes a question mark in the title bar. When the user clicks the question mark, the cursor changes
            to a question mark with a pointer. If the user then clicks a child window, the child receives a WM_HELP message. The child
            window should pass the message to the parent window procedure, which should call the WinHelp function using the HELP_WM_HELP
            command. The Help application displays a pop-up window that typically contains help for the child window. WS_EX_CONTEXTHELP
            cannot be used with the WS_MAXIMIZEBOX or WS_MINIMIZEBOX styles.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStylesEx.WS_EX_CONTROLPARENT">
            <summary>
            Specifies a window which contains child windows that should take part in dialog box navigation. If this style is specified,
            the dialog manager recurses into children of this window when performing navigation operations such as handling the TAB key,
            an arrow key, or a keyboard mnemonic.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStylesEx.WS_EX_DLGMODALFRAME">
            <summary>Specifies a window that has a double border.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStylesEx.WS_EX_LAYERED">
            <summary>
            Specifies a window that is a layered window. This cannot be used for child windows or if the window has a class style of
            either CS_OWNDC or CS_CLASSDC.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStylesEx.WS_EX_LAYOUTRTL">
            <summary>
            Specifies a window with the horizontal origin on the right edge. Increasing horizontal values advance to the left. The shell
            language must support reading-order alignment for this to take effect.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStylesEx.WS_EX_LEFT">
            <summary>Specifies a window that has generic left-aligned properties. This is the default.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStylesEx.WS_EX_LEFTSCROLLBAR">
            <summary>
            Specifies a window with the vertical scroll bar (if present) to the left of the client area. The shell language must support
            reading-order alignment for this to take effect.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStylesEx.WS_EX_LTRREADING">
            <summary>Specifies a window that displays text using left-to-right reading-order properties. This is the default.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStylesEx.WS_EX_MDICHILD">
            <summary>Specifies a multiple-document interface (MDI) child window.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStylesEx.WS_EX_NOACTIVATE">
            <summary>
            Specifies a top-level window created with this style does not become the foreground window when the user clicks it. The
            system does not bring this window to the foreground when the user minimizes or closes the foreground window. The window does
            not appear on the taskbar by default. To force the window to appear on the taskbar, use the WS_EX_APPWINDOW style. To
            activate the window, use the SetActiveWindow or SetForegroundWindow function.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStylesEx.WS_EX_NOINHERITLAYOUT">
            <summary>Specifies a window which does not pass its window layout to its child windows.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStylesEx.WS_EX_NOPARENTNOTIFY">
            <summary>
            Specifies that a child window created with this style does not send the WM_PARENTNOTIFY message to its parent window when it
            is created or destroyed.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStylesEx.WS_EX_NOREDIRECTIONBITMAP">
            <summary>
            The window does not render to a redirection surface. This is for windows that do not have visible content or that use
            mechanisms other than surfaces to provide their visual.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStylesEx.WS_EX_OVERLAPPEDWINDOW">
            <summary>Specifies an overlapped window.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStylesEx.WS_EX_PALETTEWINDOW">
            <summary>Specifies a palette window, which is a modeless dialog box that presents an array of commands.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStylesEx.WS_EX_RIGHT">
            <summary>
            Specifies a window that has generic "right-aligned" properties. This depends on the window class. The shell language must
            support reading-order alignment for this to take effect. Using the WS_EX_RIGHT style has the same effect as using the
            SS_RIGHT (static), ES_RIGHT (edit), and BS_RIGHT/BS_RIGHTBUTTON (button) control styles.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStylesEx.WS_EX_RIGHTSCROLLBAR">
            <summary>Specifies a window with the vertical scroll bar (if present) to the right of the client area. This is the default.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStylesEx.WS_EX_RTLREADING">
            <summary>
            Specifies a window that displays text using right-to-left reading-order properties. The shell language must support
            reading-order alignment for this to take effect.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStylesEx.WS_EX_STATICEDGE">
            <summary>
            Specifies a window with a three-dimensional border style intended to be used for items that do not accept user input.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStylesEx.WS_EX_TOOLWINDOW">
            <summary>
            Specifies a window that is intended to be used as a floating toolbar. A tool window has a title bar that is shorter than a
            normal title bar, and the window title is drawn using a smaller font. A tool window does not appear in the taskbar or in the
            dialog that appears when the user presses ALT+TAB. If a tool window has a system menu, its icon is not displayed on the title
            bar. However, you can display the system menu by right-clicking or by typing ALT+SPACE.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStylesEx.WS_EX_TOPMOST">
            <summary>
            Specifies a window that should be placed above all non-topmost windows and should stay above them, even when the window is
            deactivated. To add or remove this style, use the SetWindowPos function.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStylesEx.WS_EX_TRANSPARENT">
            <summary>
            Specifies a window that should not be painted until siblings beneath the window (that were created by the same thread) have
            been painted. The window appears transparent because the bits of underlying sibling windows have already been painted. To
            achieve transparency without these restrictions, use the SetWindowRgn function.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WindowStylesEx.WS_EX_WINDOWEDGE">
            <summary>Specifies a window that has a border with a raised edge.</summary>
        </member>
        <member name="M:Vanara.PInvoke.User32.ClientToScreen(Vanara.PInvoke.HWND,System.Drawing.Point@)">
            <summary>The <c>ClientToScreen</c> function converts the client-area coordinates of a specified point to screen coordinates.</summary>
            <param name="hWnd">A handle to the window whose client area is used for the conversion.</param>
            <param name="lpPoint">
            A pointer to a POINT structure that contains the client coordinates to be converted. The new screen coordinates are copied into
            this structure if the function succeeds.
            </param>
            <returns>
            <para>If the function succeeds, the return value is nonzero.</para>
            <para>If the function fails, the return value is zero.</para>
            </returns>
            <remarks>
            <para>
            The <c>ClientToScreen</c> function replaces the client-area coordinates in the POINT structure with the screen coordinates. The
            screen coordinates are relative to the upper-left corner of the screen. Note, a screen-coordinate point that is above the
            window's client area has a negative y-coordinate. Similarly, a screen coordinate to the left of a client area has a negative x-coordinate.
            </para>
            <para>All coordinates are device coordinates.</para>
            <para>Examples</para>
            <para>For an example, see "Drawing Lines with the Mouse" in Using Mouse Input.</para>
            </remarks>
        </member>
        <member name="M:Vanara.PInvoke.User32.ScreenToClient(Vanara.PInvoke.HWND,System.Drawing.Point@)">
            <summary>The ScreenToClient function converts the screen coordinates of a specified point on the screen to client-area coordinates.</summary>
            <param name="hWnd">A handle to the window whose client area will be used for the conversion.</param>
            <param name="lpPoint">A pointer to a POINT structure that specifies the screen coordinates to be converted.</param>
            <returns>
            If the function succeeds, the return value is true. If the function fails, the return value is false. To get extended error
            information, call GetLastError.
            </returns>
        </member>
        <member name="M:Vanara.PInvoke.User32.ClipCursor(Vanara.PInvoke.RECT@)">
            <summary>
            <para>
            Confines the cursor to a rectangular area on the screen. If a subsequent cursor position (set by the SetCursorPos function or the
            mouse) lies outside the rectangle, the system automatically adjusts the position to keep the cursor inside the rectangular area.
            </para>
            </summary>
            <param name="lpRect">
            <para>Type: <c>const RECT*</c></para>
            <para>
            A pointer to the structure that contains the screen coordinates of the upper-left and lower-right corners of the confining
            rectangle. If this parameter is <c>NULL</c>, the cursor is free to move anywhere on the screen.
            </para>
            </param>
            <returns>
            <para>Type: <c>BOOL</c></para>
            <para>If the function succeeds, the return value is nonzero.</para>
            <para>If the function fails, the return value is zero. To get extended error information, call GetLastError.</para>
            </returns>
            <remarks>
            <para>
            The cursor is a shared resource. If an application confines the cursor, it must release the cursor by using <c>ClipCursor</c>
            before relinquishing control to another application.
            </para>
            <para>The calling process must have <c>WINSTA_WRITEATTRIBUTES</c> access to the window station.</para>
            <para>Examples</para>
            <para>For an example, see Confining a Cursor.</para>
            </remarks>
        </member>
        <member name="M:Vanara.PInvoke.User32.CreateCursor(Vanara.PInvoke.HINSTANCE,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            <para>Creates a cursor having the specified size, bit patterns, and hot spot.</para>
            </summary>
            <param name="hInst">
            <para>Type: <c>HINSTANCE</c></para>
            <para>A handle to the current instance of the application creating the cursor.</para>
            </param>
            <param name="xHotSpot">
            <para>Type: <c>int</c></para>
            <para>The horizontal position of the cursor's hot spot.</para>
            </param>
            <param name="yHotSpot">
            <para>Type: <c>int</c></para>
            <para>The vertical position of the cursor's hot spot.</para>
            </param>
            <param name="nWidth">
            <para>Type: <c>int</c></para>
            <para>The width of the cursor, in pixels.</para>
            </param>
            <param name="nHeight">
            <para>Type: <c>int</c></para>
            <para>The height of the cursor, in pixels.</para>
            </param>
            <param name="pvANDPlane">
            <para>Type: <c>const VOID*</c></para>
            <para>An array of bytes that contains the bit values for the AND mask of the cursor, as in a device-dependent monochrome bitmap.</para>
            </param>
            <param name="pvXORPlane">
            <para>Type: <c>const VOID*</c></para>
            <para>An array of bytes that contains the bit values for the XOR mask of the cursor, as in a device-dependent monochrome bitmap.</para>
            </param>
            <returns>
            <para>Type: <c>HCURSOR</c></para>
            <para>If the function succeeds, the return value is a handle to the cursor.</para>
            <para>If the function fails, the return value is <c>NULL</c>. To get extended error information, call GetLastError.</para>
            </returns>
            <remarks>
            <para>
            The nWidth and nHeight parameters must specify a width and height that are supported by the current display driver, because the
            system cannot create cursors of other sizes. To determine the width and height supported by the display driver, use the
            GetSystemMetrics function, specifying the <c>SM_CXCURSOR</c> or <c>SM_CYCURSOR</c> value.
            </para>
            <para>Before closing, an application must call the DestroyCursor function to free any system resources associated with the cursor.</para>
            <para>DPI Virtualization</para>
            <para>
            This API does not participate in DPI virtualization. The output returned is in terms of physical coordinates, and is not affected
            by the DPI of the calling thread. Note that the cursor created may still be scaled to match the DPI of any given window it is
            drawn into.
            </para>
            <para>Examples</para>
            <para>For an example, see Creating a Cursor.</para>
            </remarks>
        </member>
        <member name="M:Vanara.PInvoke.User32.DestroyCursor(Vanara.PInvoke.HCURSOR)">
            <summary>
            <para>Destroys a cursor and frees any memory the cursor occupied. Do not use this function to destroy a shared cursor.</para>
            </summary>
            <param name="hCursor">
            <para>Type: <c>HCURSOR</c></para>
            <para>A handle to the cursor to be destroyed. The cursor must not be in use.</para>
            </param>
            <returns>
            <para>Type: <c>BOOL</c></para>
            <para>If the function succeeds, the return value is nonzero.</para>
            <para>If the function fails, the return value is zero. To get extended error information, call GetLastError.</para>
            </returns>
            <remarks>
            <para>
            The <c>DestroyCursor</c> function destroys a nonshared cursor. Do not use this function to destroy a shared cursor. A shared
            cursor is valid as long as the module from which it was loaded remains in memory. The following functions obtain a shared cursor:
            </para>
            <list type="bullet">
            <item>
            <term>LoadCursor</term>
            </item>
            <item>
            <term>LoadCursorFromFile</term>
            </item>
            <item>
            <term>LoadImage (if you use the <c>LR_SHARED</c> flag)</term>
            </item>
            <item>
            <term>CopyImage (if you use the <c>LR_COPYRETURNORG</c> flag and the hImage parameter is a shared cursor)</term>
            </item>
            </list>
            </remarks>
        </member>
        <member name="M:Vanara.PInvoke.User32.GetClipCursor(Vanara.PInvoke.RECT@)">
            <summary>
            <para>Retrieves the screen coordinates of the rectangular area to which the cursor is confined.</para>
            </summary>
            <param name="lpRect">
            <para>Type: <c>LPRECT</c></para>
            <para>
            A pointer to a RECT structure that receives the screen coordinates of the confining rectangle. The structure receives the
            dimensions of the screen if the cursor is not confined to a rectangle.
            </para>
            </param>
            <returns>
            <para>Type: <c>BOOL</c></para>
            <para>If the function succeeds, the return value is nonzero.</para>
            <para>If the function fails, the return value is zero. To get extended error information, call GetLastError.</para>
            </returns>
            <remarks>
            <para>
            The cursor is a shared resource. If an application confines the cursor with the ClipCursor function, it must later release the
            cursor by using <c>ClipCursor</c> before relinquishing control to another application.
            </para>
            <para>The calling process must have <c>WINSTA_READATTRIBUTES</c> access to the window station.</para>
            <para>Examples</para>
            <para>For an example, see Confining a Cursor.</para>
            </remarks>
        </member>
        <member name="M:Vanara.PInvoke.User32.GetCursor">
            <summary>
            <para>Retrieves a handle to the current cursor.</para>
            <para>To get information on the global cursor, even if it is not owned by the current thread, use GetCursorInfo.</para>
            </summary>
            <returns>
            <para>Type: <c>HCURSOR</c></para>
            <para>The return value is the handle to the current cursor. If there is no cursor, the return value is <c>NULL</c>.</para>
            </returns>
        </member>
        <member name="M:Vanara.PInvoke.User32.GetCursorPos(System.Drawing.Point@)">
            <summary>
            <para>Retrieves the position of the mouse cursor, in screen coordinates.</para>
            </summary>
            <param name="lpPoint">
            <para>Type: <c>LPPOINT</c></para>
            <para>A pointer to a POINT structure that receives the screen coordinates of the cursor.</para>
            </param>
            <returns>
            <para>Type: <c>BOOL</c></para>
            <para>Returns nonzero if successful or zero otherwise. To get extended error information, call GetLastError.</para>
            </returns>
            <remarks>
            <para>
            The cursor position is always specified in screen coordinates and is not affected by the mapping mode of the window that contains
            the cursor.
            </para>
            <para>The calling process must have <c>WINSTA_READATTRIBUTES</c> access to the window station.</para>
            <para>
            The input desktop must be the current desktop when you call <c>GetCursorPos</c>. Call OpenInputDesktop to determine whether the
            current desktop is the input desktop. If it is not, call SetThreadDesktop with the <c>HDESK</c> returned by
            <c>OpenInputDesktop</c> to switch to that desktop.
            </para>
            <para>Examples</para>
            <para>For an example, see Using the Keyboard to Move the Cursor.</para>
            </remarks>
        </member>
        <member name="M:Vanara.PInvoke.User32.GetPhysicalCursorPos(System.Drawing.Point@)">
            <summary>
            <para>Retrieves the position of the cursor in physical coordinates.</para>
            </summary>
            <param name="lpPoint">
            <para>Type: <c>LPPOINT</c></para>
            <para>The position of the cursor, in physical coordinates.</para>
            </param>
            <returns>
            <para>Type: <c>BOOL</c></para>
            <para><c>TRUE</c> if successful; otherwise <c>FALSE</c>.</para>
            <para>GetLastError can be called to get more information about any error that is generated.</para>
            </returns>
            <remarks>
            <para>For a description of the difference between logicial coordinates and physical coordinates, see PhysicalToLogicalPoint.</para>
            </remarks>
        </member>
        <member name="M:Vanara.PInvoke.User32.LoadCursor(Vanara.PInvoke.HINSTANCE,System.String)">
            <summary>
            <para>Loads the specified cursor resource from the executable (.EXE) file associated with an application instance.</para>
            <para><c>Note</c> This function has been superseded by the LoadImage function.</para>
            </summary>
            <param name="hInstance">
            <para>Type: <c>HINSTANCE</c></para>
            <para>A handle to an instance of the module whose executable file contains the cursor to be loaded.</para>
            </param>
            <param name="lpCursorName">
            <para>Type: <c>LPCTSTR</c></para>
            <para>
            The name of the cursor resource to be loaded. Alternatively, this parameter can consist of the resource identifier in the
            low-order word and zero in the high-order word. The MAKEINTRESOURCE macro can also be used to create this value. To use one of
            the predefined cursors, the application must set the hInstance parameter to <c>NULL</c> and the lpCursorName parameter to one the
            following values.
            </para>
            <list type="table">
            <listheader>
            <term>Value</term>
            <term>Meaning</term>
            </listheader>
            <item>
            <term>IDC_APPSTARTING MAKEINTRESOURCE(32650)</term>
            <term>Standard arrow and small hourglass</term>
            </item>
            <item>
            <term>IDC_ARROW MAKEINTRESOURCE(32512)</term>
            <term>Standard arrow</term>
            </item>
            <item>
            <term>IDC_CROSS MAKEINTRESOURCE(32515)</term>
            <term>Crosshair</term>
            </item>
            <item>
            <term>IDC_HAND MAKEINTRESOURCE(32649)</term>
            <term>Hand</term>
            </item>
            <item>
            <term>IDC_HELP MAKEINTRESOURCE(32651)</term>
            <term>Arrow and question mark</term>
            </item>
            <item>
            <term>IDC_IBEAM MAKEINTRESOURCE(32513)</term>
            <term>I-beam</term>
            </item>
            <item>
            <term>IDC_ICON MAKEINTRESOURCE(32641)</term>
            <term>Obsolete for applications marked version 4.0 or later.</term>
            </item>
            <item>
            <term>IDC_NO MAKEINTRESOURCE(32648)</term>
            <term>Slashed circle</term>
            </item>
            <item>
            <term>IDC_SIZE MAKEINTRESOURCE(32640)</term>
            <term>Obsolete for applications marked version 4.0 or later. Use IDC_SIZEALL.</term>
            </item>
            <item>
            <term>IDC_SIZEALL MAKEINTRESOURCE(32646)</term>
            <term>Four-pointed arrow pointing north, south, east, and west</term>
            </item>
            <item>
            <term>IDC_SIZENESW MAKEINTRESOURCE(32643)</term>
            <term>Double-pointed arrow pointing northeast and southwest</term>
            </item>
            <item>
            <term>IDC_SIZENS MAKEINTRESOURCE(32645)</term>
            <term>Double-pointed arrow pointing north and south</term>
            </item>
            <item>
            <term>IDC_SIZENWSE MAKEINTRESOURCE(32642)</term>
            <term>Double-pointed arrow pointing northwest and southeast</term>
            </item>
            <item>
            <term>IDC_SIZEWE MAKEINTRESOURCE(32644)</term>
            <term>Double-pointed arrow pointing west and east</term>
            </item>
            <item>
            <term>IDC_UPARROW MAKEINTRESOURCE(32516)</term>
            <term>Vertical arrow</term>
            </item>
            <item>
            <term>IDC_WAIT MAKEINTRESOURCE(32514)</term>
            <term>Hourglass</term>
            </item>
            </list>
            </param>
            <returns>
            <para>Type: <c>HCURSOR</c></para>
            <para>If the function succeeds, the return value is the handle to the newly loaded cursor.</para>
            <para>If the function fails, the return value is <c>NULL</c>. To get extended error information, call GetLastError.</para>
            </returns>
            <remarks>
            <para>
            The <c>LoadCursor</c> function loads the cursor resource only if it has not been loaded; otherwise, it retrieves the handle to
            the existing resource. This function returns a valid cursor handle only if the lpCursorName parameter is a pointer to a cursor
            resource. If lpCursorName is a pointer to any type of resource other than a cursor (such as an icon), the return value is not
            <c>NULL</c>, even though it is not a valid cursor handle.
            </para>
            <para>
            The <c>LoadCursor</c> function searches the cursor resource most appropriate for the cursor for the current display device. The
            cursor resource can be a color or monochrome bitmap.
            </para>
            <para>DPI Virtualization</para>
            <para>This API does not participate in DPI virtualization. The output returned is not affected by the DPI of the calling thread.</para>
            <para>Examples</para>
            <para>For an example, see Creating a Cursor.</para>
            </remarks>
        </member>
        <member name="M:Vanara.PInvoke.User32.LoadCursor(Vanara.PInvoke.HINSTANCE,Vanara.PInvoke.ResourceId)">
            <summary>
            <para>Loads the specified cursor resource from the executable (.EXE) file associated with an application instance.</para>
            <para><c>Note</c> This function has been superseded by the LoadImage function.</para>
            </summary>
            <param name="hInstance">
            <para>Type: <c>HINSTANCE</c></para>
            <para>A handle to an instance of the module whose executable file contains the cursor to be loaded.</para>
            </param>
            <param name="lpCursorName">
            <para>Type: <c>LPCTSTR</c></para>
            <para>
            The name of the cursor resource to be loaded. Alternatively, this parameter can consist of the resource identifier in the
            low-order word and zero in the high-order word. The MAKEINTRESOURCE macro can also be used to create this value. To use one of
            the predefined cursors, the application must set the hInstance parameter to <c>NULL</c> and the lpCursorName parameter to one the
            following values.
            </para>
            <list type="table">
            <listheader>
            <term>Value</term>
            <term>Meaning</term>
            </listheader>
            <item>
            <term>IDC_APPSTARTING MAKEINTRESOURCE(32650)</term>
            <term>Standard arrow and small hourglass</term>
            </item>
            <item>
            <term>IDC_ARROW MAKEINTRESOURCE(32512)</term>
            <term>Standard arrow</term>
            </item>
            <item>
            <term>IDC_CROSS MAKEINTRESOURCE(32515)</term>
            <term>Crosshair</term>
            </item>
            <item>
            <term>IDC_HAND MAKEINTRESOURCE(32649)</term>
            <term>Hand</term>
            </item>
            <item>
            <term>IDC_HELP MAKEINTRESOURCE(32651)</term>
            <term>Arrow and question mark</term>
            </item>
            <item>
            <term>IDC_IBEAM MAKEINTRESOURCE(32513)</term>
            <term>I-beam</term>
            </item>
            <item>
            <term>IDC_ICON MAKEINTRESOURCE(32641)</term>
            <term>Obsolete for applications marked version 4.0 or later.</term>
            </item>
            <item>
            <term>IDC_NO MAKEINTRESOURCE(32648)</term>
            <term>Slashed circle</term>
            </item>
            <item>
            <term>IDC_SIZE MAKEINTRESOURCE(32640)</term>
            <term>Obsolete for applications marked version 4.0 or later. Use IDC_SIZEALL.</term>
            </item>
            <item>
            <term>IDC_SIZEALL MAKEINTRESOURCE(32646)</term>
            <term>Four-pointed arrow pointing north, south, east, and west</term>
            </item>
            <item>
            <term>IDC_SIZENESW MAKEINTRESOURCE(32643)</term>
            <term>Double-pointed arrow pointing northeast and southwest</term>
            </item>
            <item>
            <term>IDC_SIZENS MAKEINTRESOURCE(32645)</term>
            <term>Double-pointed arrow pointing north and south</term>
            </item>
            <item>
            <term>IDC_SIZENWSE MAKEINTRESOURCE(32642)</term>
            <term>Double-pointed arrow pointing northwest and southeast</term>
            </item>
            <item>
            <term>IDC_SIZEWE MAKEINTRESOURCE(32644)</term>
            <term>Double-pointed arrow pointing west and east</term>
            </item>
            <item>
            <term>IDC_UPARROW MAKEINTRESOURCE(32516)</term>
            <term>Vertical arrow</term>
            </item>
            <item>
            <term>IDC_WAIT MAKEINTRESOURCE(32514)</term>
            <term>Hourglass</term>
            </item>
            </list>
            </param>
            <returns>
            <para>Type: <c>HCURSOR</c></para>
            <para>If the function succeeds, the return value is the handle to the newly loaded cursor.</para>
            <para>If the function fails, the return value is <c>NULL</c>. To get extended error information, call GetLastError.</para>
            </returns>
            <remarks>
            <para>
            The <c>LoadCursor</c> function loads the cursor resource only if it has not been loaded; otherwise, it retrieves the handle to
            the existing resource. This function returns a valid cursor handle only if the lpCursorName parameter is a pointer to a cursor
            resource. If lpCursorName is a pointer to any type of resource other than a cursor (such as an icon), the return value is not
            <c>NULL</c>, even though it is not a valid cursor handle.
            </para>
            <para>
            The <c>LoadCursor</c> function searches the cursor resource most appropriate for the cursor for the current display device. The
            cursor resource can be a color or monochrome bitmap.
            </para>
            <para>DPI Virtualization</para>
            <para>This API does not participate in DPI virtualization. The output returned is not affected by the DPI of the calling thread.</para>
            <para>Examples</para>
            <para>For an example, see Creating a Cursor.</para>
            </remarks>
        </member>
        <member name="M:Vanara.PInvoke.User32.LoadCursorFromFile(System.String)">
            <summary>
            <para>Creates a cursor based on data contained in a file.</para>
            </summary>
            <param name="lpFileName">
            <para>Type: <c>LPCTSTR</c></para>
            <para>The source of the file data to be used to create the cursor. The data in the file must be in either .CUR or .ANI format.</para>
            <para>
            If the high-order word of lpFileName is nonzero, it is a pointer to a string that is a fully qualified name of a file containing
            cursor data.
            </para>
            </param>
            <returns>
            <para>Type: <c>HCURSOR</c></para>
            <para>If the function is successful, the return value is a handle to the new cursor.</para>
            <para>
            If the function fails, the return value is <c>NULL</c>. To get extended error information, call GetLastError. <c>GetLastError</c>
            may return the following value.
            </para>
            <list type="table">
            <listheader>
            <term>Return code</term>
            <term>Description</term>
            </listheader>
            <item>
            <term>ERROR_FILE_NOT_FOUND</term>
            <term>The specified file cannot be found.</term>
            </item>
            </list>
            </returns>
            <remarks>
            <para>DPI Virtualization</para>
            <para>This API does not participate in DPI virtualization. The output returned is not affected by the DPI of the calling thread.</para>
            </remarks>
        </member>
        <member name="M:Vanara.PInvoke.User32.SetCursor(Vanara.PInvoke.User32.SafeHCURSOR)">
            <summary>
            <para>Sets the cursor shape.</para>
            </summary>
            <param name="hCursor">
            <para>Type: <c>HCURSOR</c></para>
            <para>
            A handle to the cursor. The cursor must have been created by the CreateCursor function or loaded by the LoadCursor or LoadImage
            function. If this parameter is <c>NULL</c>, the cursor is removed from the screen.
            </para>
            </param>
            <returns>
            <para>Type: <c>HCURSOR</c></para>
            <para>The return value is the handle to the previous cursor, if there was one.</para>
            <para>If there was no previous cursor, the return value is <c>NULL</c>.</para>
            </returns>
            <remarks>
            <para>The cursor is set only if the new cursor is different from the previous cursor; otherwise, the function returns immediately.</para>
            <para>
            The cursor is a shared resource. A window should set the cursor shape only when the cursor is in its client area or when the
            window is capturing mouse input. In systems without a mouse, the window should restore the previous cursor before the cursor
            leaves the client area or before it relinquishes control to another window.
            </para>
            <para>
            If your application must set the cursor while it is in a window, make sure the class cursor for the specified window's class is
            set to <c>NULL</c>. If the class cursor is not <c>NULL</c>, the system restores the class cursor each time the mouse is moved.
            </para>
            <para>
            The cursor is not shown on the screen if the internal cursor display count is less than zero. This occurs if the application uses
            the ShowCursor function to hide the cursor more times than to show the cursor.
            </para>
            <para>Examples</para>
            <para>For an example, see Displaying a Cursor.</para>
            </remarks>
        </member>
        <member name="M:Vanara.PInvoke.User32.SetCursorPos(System.Int32,System.Int32)">
            <summary>
            <para>
            Moves the cursor to the specified screen coordinates. If the new coordinates are not within the screen rectangle set by the most
            recent ClipCursor function call, the system automatically adjusts the coordinates so that the cursor stays within the rectangle.
            </para>
            </summary>
            <param name="X">
            <para>Type: <c>int</c></para>
            <para>The new x-coordinate of the cursor, in screen coordinates.</para>
            </param>
            <param name="Y">
            <para>Type: <c>int</c></para>
            <para>The new y-coordinate of the cursor, in screen coordinates.</para>
            </param>
            <returns>
            <para>Type: <c>BOOL</c></para>
            <para>Returns nonzero if successful or zero otherwise. To get extended error information, call GetLastError.</para>
            </returns>
            <remarks>
            <para>The cursor is a shared resource. A window should move the cursor only when the cursor is in the window's client area.</para>
            <para>The calling process must have <c>WINSTA_WRITEATTRIBUTES</c> access to the window station.</para>
            <para>
            The input desktop must be the current desktop when you call <c>SetCursorPos</c>. Call OpenInputDesktop to determine whether the
            current desktop is the input desktop. If it is not, call SetThreadDesktop with the <c>HDESK</c> returned by
            <c>OpenInputDesktop</c> to switch to that desktop.
            </para>
            <para>Examples</para>
            <para>For an example, see Using the Keyboard to Move the Cursor.</para>
            </remarks>
        </member>
        <member name="M:Vanara.PInvoke.User32.SetPhysicalCursorPos(System.Int32,System.Int32)">
            <summary>
            <para>Sets the position of the cursor in physical coordinates.</para>
            </summary>
            <param name="X">
            <para>Type: <c>int</c></para>
            <para>The new x-coordinate of the cursor, in physical coordinates.</para>
            </param>
            <param name="Y">
            <para>Type: <c>int</c></para>
            <para>The new y-coordinate of the cursor, in physical coordinates.</para>
            </param>
            <returns>
            <para>Type: <c>BOOL</c></para>
            <para><c>TRUE</c> if successful; otherwise <c>FALSE</c>.</para>
            </returns>
            <remarks>
            <para>For a description of the difference between logicial coordinates and physical coordinates, see PhysicalToLogicalPoint.</para>
            <para>GetLastError can be called to get more information about any error that is generated.</para>
            </remarks>
        </member>
        <member name="M:Vanara.PInvoke.User32.ShowCursor(System.Boolean)">
            <summary>Displays or hides the cursor.</summary>
            <param name="bShow">
            <para>Type: <c>BOOL</c></para>
            <para>
            If bShow is <c>TRUE</c>, the display count is incremented by one. If bShow is <c>FALSE</c>, the display count is decremented by one.
            </para>
            </param>
            <returns>
            <para>Type: <c>int</c></para>
            <para>The return value specifies the new display counter.</para>
            </returns>
            <remarks>
            <para><c>Windows 8</c>: Call GetCursorInfo to determine the cursor visibility.</para>
            <para>
            This function sets an internal display counter that determines whether the cursor should be displayed. The cursor is displayed
            only if the display count is greater than or equal to 0. If a mouse is installed, the initial display count is 0. If no mouse is
            installed, the display count is ?.
            </para>
            </remarks>
        </member>
        <member name="T:Vanara.PInvoke.User32.SafeHCURSOR">
            <summary>Provides a <see cref="T:System.Runtime.InteropServices.SafeHandle"/> to a Windows that disposes a created HCURSOR instance at disposal using DestroyCursor.</summary>
        </member>
        <member name="M:Vanara.PInvoke.User32.SafeHCURSOR.#ctor(System.IntPtr,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.HCURSOR"/> class and assigns an existing handle.</summary>
            <param name="preexistingHandle">An <see cref="T:System.IntPtr"/> object that represents the pre-existing handle to use.</param>
            <param name="ownsHandle">
            <see langword="true"/> to reliably release the handle during the finalization phase; otherwise, <see langword="false"/> (not recommended).
            </param>
        </member>
        <member name="M:Vanara.PInvoke.User32.SafeHCURSOR.op_Implicit(Vanara.PInvoke.User32.SafeHCURSOR)~Vanara.PInvoke.HCURSOR">
            <summary>Performs an implicit conversion from <see cref="T:Vanara.PInvoke.User32.SafeHCURSOR"/> to <see cref="T:Vanara.PInvoke.HCURSOR"/>.</summary>
            <param name="h">The safe handle instance.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Vanara.PInvoke.User32.SafeHCURSOR.InternalReleaseHandle">
            <inheritdoc/>
        </member>
        <member name="T:Vanara.PInvoke.User32.HitTestValues">
            <summary>Values to use a return codes when handling the WM_HCHITTEST message.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.HitTestValues.HTBORDER">
            <summary>In the border of a window that does not have a sizing border.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.HitTestValues.HTBOTTOM">
            <summary>In the lower-horizontal border of a resizable window (the user can click the mouse to resize the window vertically).</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.HitTestValues.HTBOTTOMLEFT">
            <summary>
            In the lower-left corner of a border of a resizable window (the user can click the mouse to resize the window diagonally).
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.HitTestValues.HTBOTTOMRIGHT">
            <summary>
            In the lower-right corner of a border of a resizable window (the user can click the mouse to resize the window diagonally).
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.HitTestValues.HTCAPTION">
            <summary>In a title bar.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.HitTestValues.HTCLIENT">
            <summary>In a client area.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.HitTestValues.HTCLOSE">
            <summary>In a Close button.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.HitTestValues.HTERROR">
            <summary>
            On the screen background or on a dividing line between windows (same as HTNOWHERE, except that the DefWindowProc function
            produces a system beep to indicate an error).
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.HitTestValues.HTGROWBOX">
            <summary>In a size box (same as HTSIZE).</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.HitTestValues.HTHELP">
            <summary>In a Help button.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.HitTestValues.HTHSCROLL">
            <summary>In a horizontal scroll bar.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.HitTestValues.HTLEFT">
            <summary>In the left border of a resizable window (the user can click the mouse to resize the window horizontally).</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.HitTestValues.HTMENU">
            <summary>In a menu.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.HitTestValues.HTMAXBUTTON">
            <summary>In a Maximize button.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.HitTestValues.HTMINBUTTON">
            <summary>In a Minimize button.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.HitTestValues.HTNOWHERE">
            <summary>On the screen background or on a dividing line between windows.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.HitTestValues.HTREDUCE">
            <summary>In a Minimize button.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.HitTestValues.HTRIGHT">
            <summary>In the right border of a resizable window (the user can click the mouse to resize the window horizontally).</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.HitTestValues.HTSIZE">
            <summary>In a size box (same as HTGROWBOX).</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.HitTestValues.HTSYSMENU">
            <summary>In a window menu or in a Close button in a child window.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.HitTestValues.HTTOP">
            <summary>In the upper-horizontal border of a window.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.HitTestValues.HTTOPLEFT">
            <summary>In the upper-left corner of a window border.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.HitTestValues.HTTOPRIGHT">
            <summary>In the upper-right corner of a window border.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.HitTestValues.HTTRANSPARENT">
            <summary>
            In a window currently covered by another window in the same thread (the message will be sent to underlying windows in the
            same thread until one of them returns a code that is not HTTRANSPARENT).
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.HitTestValues.HTVSCROLL">
            <summary>In the vertical scroll bar.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.HitTestValues.HTZOOM">
            <summary>In a Maximize button.</summary>
        </member>
        <member name="T:Vanara.PInvoke.User32.WINDOWPOS">
            <summary>Contains information about the size and position of a window.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WINDOWPOS.hwnd">
            <summary>A handle to the window.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WINDOWPOS.hwndInsertAfter">
            <summary>
            The position of the window in Z order (front-to-back position). This member can be a handle to the window behind which this
            window is placed, or can be one of the special values listed with the SetWindowPos function.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WINDOWPOS.x">
            <summary>The position of the left edge of the window.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WINDOWPOS.y">
            <summary>The position of the top edge of the window.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WINDOWPOS.cx">
            <summary>The window width, in pixels.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WINDOWPOS.cy">
            <summary>The window height, in pixels.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.WINDOWPOS.flags">
            <summary>The window position. This member can be one or more of the following values.</summary>
        </member>
        <member name="M:Vanara.PInvoke.User32.GetMessagePos">
            <summary>
            <para>Retrieves the cursor position for the last message retrieved by the GetMessage function.</para>
            <para>To determine the current position of the cursor, use the GetCursorPos function.</para>
            </summary>
            <returns>
            <para>Type: <c>Type: <c>DWORD</c></c></para>
            <para>
            The return value specifies the x- and y-coordinates of the cursor position. The x-coordinate is the low order <c>short</c> and
            the y-coordinate is the high-order <c>short</c>.
            </para>
            </returns>
            <remarks>
            <para>
            As noted above, the x-coordinate is in the low-order <c>short</c> of the return value; the y-coordinate is in the high-order
            <c>short</c> (both represent signed values because they can take negative values on systems with multiple monitors). If the
            return value is assigned to a variable, you can use the MAKEPOINTS macro to obtain a POINTS structure from the return value. You
            can also use the GET_X_LPARAM or GET_Y_LPARAM macro to extract the x- or y-coordinate.
            </para>
            <para>
            <c>Important</c> Do not use the LOWORD or HIWORD macros to extract the x- and y- coordinates of the cursor position because these
            macros return incorrect results on systems with multiple monitors. Systems with multiple monitors can have negative x- and y-
            coordinates, and <c>LOWORD</c> and <c>HIWORD</c> treat the coordinates as unsigned quantities.
            </para>
            </remarks>
        </member>
        <member name="M:Vanara.PInvoke.User32.PostMessage(Vanara.PInvoke.HWND,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            <para>
            Places (posts) a message in the message queue associated with the thread that created the specified window and returns without
            waiting for the thread to process the message.
            </para>
            <para>To post a message in the message queue associated with a thread, use the PostThreadMessage function.</para>
            </summary>
            <param name="hWnd">
            <para>Type: <c>HWND</c></para>
            <para>A handle to the window whose window procedure is to receive the message. The following values have special meanings.</para>
            <list type="table">
            <listheader>
            <term>Value</term>
            <term>Meaning</term>
            </listheader>
            <item>
            <term>HWND_BROADCAST ((HWND)0xffff)</term>
            <term>
            The message is posted to all top-level windows in the system, including disabled or invisible unowned windows, overlapped
            windows, and pop-up windows. The message is not posted to child windows.
            </term>
            </item>
            <item>
            <term>NULL</term>
            <term>
            The function behaves like a call to PostThreadMessage with the dwThreadId parameter set to the identifier of the current thread.
            </term>
            </item>
            </list>
            <para>
            Starting with Windows Vista, message posting is subject to UIPI. The thread of a process can post messages only to message queues
            of threads in processes of lesser or equal integrity level.
            </para>
            </param>
            <param name="Msg">
            <para>Type: <c>UINT</c></para>
            <para>The message to be posted.</para>
            <para>For lists of the system-provided messages, see System-Defined Messages.</para>
            </param>
            <param name="wParam">
            <para>Type: <c>WPARAM</c></para>
            <para>Additional message-specific information.</para>
            </param>
            <param name="lParam">
            <para>Type: <c>LPARAM</c></para>
            <para>Additional message-specific information.</para>
            </param>
            <returns>
            <para>Type: <c>Type: <c>BOOL</c></c></para>
            <para>If the function succeeds, the return value is nonzero.</para>
            <para>
            If the function fails, the return value is zero. To get extended error information, call GetLastError. <c>GetLastError</c>
            returns <c>ERROR_NOT_ENOUGH_QUOTA</c> when the limit is hit.
            </para>
            </returns>
            <remarks>
            <para>When a message is blocked by UIPI the last error, retrieved with GetLastError, is set to 5 (access denied).</para>
            <para>Messages in a message queue are retrieved by calls to the GetMessage or PeekMessage function.</para>
            <para>
            Applications that need to communicate using <c>HWND_BROADCAST</c> should use the RegisterWindowMessage function to obtain a
            unique message for inter-application communication.
            </para>
            <para>
            The system only does marshaling for system messages (those in the range 0 to (WM_USER-1)). To send other messages (those &gt;=
            <c>WM_USER</c>) to another process, you must do custom marshaling.
            </para>
            <para>
            If you send a message in the range below WM_USER to the asynchronous message functions ( <c>PostMessage</c>, SendNotifyMessage,
            and SendMessageCallback), its message parameters cannot include pointers. Otherwise, the operation will fail. The functions will
            return before the receiving thread has had a chance to process the message and the sender will free the memory before it is used.
            </para>
            <para>Do not post the WM_QUIT message using <c>PostMessage</c>; use the PostQuitMessage function.</para>
            <para>
            An accessibility application can use <c>PostMessage</c> to post WM_APPCOMMAND messages to the shell to launch applications. This
            functionality is not guaranteed to work for other types of applications.
            </para>
            <para>
            There is a limit of 10,000 posted messages per message queue. This limit should be sufficiently large. If your application
            exceeds the limit, it should be redesigned to avoid consuming so many system resources. To adjust this limit, modify the
            following registry key.
            </para>
            <para><c>HKEY_LOCAL_MACHINE</c><c>SOFTWARE</c><c>Microsoft</c><c>Windows NT</c><c>CurrentVersion</c><c>Windows</c><c>USERPostMessageLimit</c></para>
            <para>The minimum acceptable value is 4000.</para>
            <para>Examples</para>
            <para>
            The following example shows how to post a private window message using the <c>PostMessage</c> function. Assume you defined a
            private window message called <c>WM_COMPLETE</c>:
            </para>
            <para>You can post a message to the message queue associated with the thread that created the specified window as shown below:</para>
            <para>For more examples, see Initiating a Data Link.</para>
            </remarks>
        </member>
        <member name="M:Vanara.PInvoke.User32.SendMessage(Vanara.PInvoke.HWND,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            <para>
            Sends the specified message to a window or windows. The <c>SendMessage</c> function calls the window procedure for the specified
            window and does not return until the window procedure has processed the message.
            </para>
            <para>
            To send a message and return immediately, use the SendMessageCallback or SendNotifyMessage function. To post a message to a
            thread's message queue and return immediately, use the PostMessage or PostThreadMessage function.
            </para>
            </summary>
            <param name="hWnd">
            <para>Type: <c>HWND</c></para>
            <para>
            A handle to the window whose window procedure will receive the message. If this parameter is <c>HWND_BROADCAST</c>
            ((HWND)0xffff), the message is sent to all top-level windows in the system, including disabled or invisible unowned windows,
            overlapped windows, and pop-up windows; but the message is not sent to child windows.
            </para>
            <para>
            Message sending is subject to UIPI. The thread of a process can send messages only to message queues of threads in processes of
            lesser or equal integrity level.
            </para>
            </param>
            <param name="msg">
            <para>Type: <c>UINT</c></para>
            <para>The message to be sent.</para>
            <para>For lists of the system-provided messages, see System-Defined Messages.</para>
            </param>
            <param name="wParam">
            <para>Type: <c>WPARAM</c></para>
            <para>Additional message-specific information.</para>
            </param>
            <param name="lParam">
            <para>Type: <c>LPARAM</c></para>
            <para>Additional message-specific information.</para>
            </param>
            <returns>
            <para>Type: <c>LRESULT</c></para>
            <para>The return value specifies the result of the message processing; it depends on the message sent.</para>
            </returns>
            <remarks>
            <para>When a message is blocked by UIPI the last error, retrieved with GetLastError, is set to 5 (access denied).</para>
            <para>
            Applications that need to communicate using <c>HWND_BROADCAST</c> should use the RegisterWindowMessage function to obtain a
            unique message for inter-application communication.
            </para>
            <para>
            The system only does marshalling for system messages (those in the range 0 to (WM_USER-1)). To send other messages (those &gt;=
            <c>WM_USER</c>) to another process, you must do custom marshalling.
            </para>
            <para>
            If the specified window was created by the calling thread, the window procedure is called immediately as a subroutine. If the
            specified window was created by a different thread, the system switches to that thread and calls the appropriate window
            procedure. Messages sent between threads are processed only when the receiving thread executes message retrieval code. The
            sending thread is blocked until the receiving thread processes the message. However, the sending thread will process incoming
            nonqueued messages while waiting for its message to be processed. To prevent this, use SendMessageTimeout with SMTO_BLOCK set.
            For more information on nonqueued messages, see Nonqueued Messages.
            </para>
            <para>
            An accessibility application can use <c>SendMessage</c> to send WM_APPCOMMAND messages to the shell to launch applications. This
            functionality is not guaranteed to work for other types of applications.
            </para>
            <para>Examples</para>
            <para>For an example, see Displaying Keyboard Input.</para>
            </remarks>
        </member>
        <member name="M:Vanara.PInvoke.User32.SendMessage(Vanara.PInvoke.HWND,System.UInt32,System.IntPtr,System.String)">
            <summary>
            <para>
            Sends the specified message to a window or windows. The <c>SendMessage</c> function calls the window procedure for the specified
            window and does not return until the window procedure has processed the message.
            </para>
            <para>
            To send a message and return immediately, use the SendMessageCallback or SendNotifyMessage function. To post a message to a
            thread's message queue and return immediately, use the PostMessage or PostThreadMessage function.
            </para>
            </summary>
            <param name="hWnd">
            <para>Type: <c>HWND</c></para>
            <para>
            A handle to the window whose window procedure will receive the message. If this parameter is <c>HWND_BROADCAST</c>
            ((HWND)0xffff), the message is sent to all top-level windows in the system, including disabled or invisible unowned windows,
            overlapped windows, and pop-up windows; but the message is not sent to child windows.
            </para>
            <para>
            Message sending is subject to UIPI. The thread of a process can send messages only to message queues of threads in processes of
            lesser or equal integrity level.
            </para>
            </param>
            <param name="msg">
            <para>Type: <c>UINT</c></para>
            <para>The message to be sent.</para>
            <para>For lists of the system-provided messages, see System-Defined Messages.</para>
            </param>
            <param name="wParam">
            <para>Type: <c>WPARAM</c></para>
            <para>Additional message-specific information.</para>
            </param>
            <param name="lParam">
            <para>Type: <c>LPARAM</c></para>
            <para>Additional message-specific information.</para>
            </param>
            <returns>
            <para>Type: <c>LRESULT</c></para>
            <para>The return value specifies the result of the message processing; it depends on the message sent.</para>
            </returns>
            <remarks>
            <para>When a message is blocked by UIPI the last error, retrieved with GetLastError, is set to 5 (access denied).</para>
            <para>
            Applications that need to communicate using <c>HWND_BROADCAST</c> should use the RegisterWindowMessage function to obtain a
            unique message for inter-application communication.
            </para>
            <para>
            The system only does marshalling for system messages (those in the range 0 to (WM_USER-1)). To send other messages (those &gt;=
            <c>WM_USER</c>) to another process, you must do custom marshalling.
            </para>
            <para>
            If the specified window was created by the calling thread, the window procedure is called immediately as a subroutine. If the
            specified window was created by a different thread, the system switches to that thread and calls the appropriate window
            procedure. Messages sent between threads are processed only when the receiving thread executes message retrieval code. The
            sending thread is blocked until the receiving thread processes the message. However, the sending thread will process incoming
            nonqueued messages while waiting for its message to be processed. To prevent this, use SendMessageTimeout with SMTO_BLOCK set.
            For more information on nonqueued messages, see Nonqueued Messages.
            </para>
            <para>
            An accessibility application can use <c>SendMessage</c> to send WM_APPCOMMAND messages to the shell to launch applications. This
            functionality is not guaranteed to work for other types of applications.
            </para>
            <para>Examples</para>
            <para>For an example, see Displaying Keyboard Input.</para>
            </remarks>
        </member>
        <member name="M:Vanara.PInvoke.User32.SendMessage(Vanara.PInvoke.HWND,System.UInt32,System.Int32@,System.Text.StringBuilder)">
            <summary>
            <para>
            Sends the specified message to a window or windows. The <c>SendMessage</c> function calls the window procedure for the specified
            window and does not return until the window procedure has processed the message.
            </para>
            <para>
            To send a message and return immediately, use the SendMessageCallback or SendNotifyMessage function. To post a message to a
            thread's message queue and return immediately, use the PostMessage or PostThreadMessage function.
            </para>
            </summary>
            <param name="hWnd">
            <para>Type: <c>HWND</c></para>
            <para>
            A handle to the window whose window procedure will receive the message. If this parameter is <c>HWND_BROADCAST</c>
            ((HWND)0xffff), the message is sent to all top-level windows in the system, including disabled or invisible unowned windows,
            overlapped windows, and pop-up windows; but the message is not sent to child windows.
            </para>
            <para>
            Message sending is subject to UIPI. The thread of a process can send messages only to message queues of threads in processes of
            lesser or equal integrity level.
            </para>
            </param>
            <param name="msg">
            <para>Type: <c>UINT</c></para>
            <para>The message to be sent.</para>
            <para>For lists of the system-provided messages, see System-Defined Messages.</para>
            </param>
            <param name="wParam">
            <para>Type: <c>WPARAM</c></para>
            <para>Additional message-specific information.</para>
            </param>
            <param name="lParam">
            <para>Type: <c>LPARAM</c></para>
            <para>Additional message-specific information.</para>
            </param>
            <returns>
            <para>Type: <c>LRESULT</c></para>
            <para>The return value specifies the result of the message processing; it depends on the message sent.</para>
            </returns>
            <remarks>
            <para>When a message is blocked by UIPI the last error, retrieved with GetLastError, is set to 5 (access denied).</para>
            <para>
            Applications that need to communicate using <c>HWND_BROADCAST</c> should use the RegisterWindowMessage function to obtain a
            unique message for inter-application communication.
            </para>
            <para>
            The system only does marshalling for system messages (those in the range 0 to (WM_USER-1)). To send other messages (those &gt;=
            <c>WM_USER</c>) to another process, you must do custom marshalling.
            </para>
            <para>
            If the specified window was created by the calling thread, the window procedure is called immediately as a subroutine. If the
            specified window was created by a different thread, the system switches to that thread and calls the appropriate window
            procedure. Messages sent between threads are processed only when the receiving thread executes message retrieval code. The
            sending thread is blocked until the receiving thread processes the message. However, the sending thread will process incoming
            nonqueued messages while waiting for its message to be processed. To prevent this, use SendMessageTimeout with SMTO_BLOCK set.
            For more information on nonqueued messages, see Nonqueued Messages.
            </para>
            <para>
            An accessibility application can use <c>SendMessage</c> to send WM_APPCOMMAND messages to the shell to launch applications. This
            functionality is not guaranteed to work for other types of applications.
            </para>
            <para>Examples</para>
            <para>For an example, see Displaying Keyboard Input.</para>
            </remarks>
        </member>
        <member name="M:Vanara.PInvoke.User32.SendMessage(Vanara.PInvoke.HWND,System.UInt32,System.IntPtr,System.Text.StringBuilder)">
            <summary>
            <para>
            Sends the specified message to a window or windows. The <c>SendMessage</c> function calls the window procedure for the specified
            window and does not return until the window procedure has processed the message.
            </para>
            <para>
            To send a message and return immediately, use the SendMessageCallback or SendNotifyMessage function. To post a message to a
            thread's message queue and return immediately, use the PostMessage or PostThreadMessage function.
            </para>
            </summary>
            <param name="hWnd">
            <para>Type: <c>HWND</c></para>
            <para>
            A handle to the window whose window procedure will receive the message. If this parameter is <c>HWND_BROADCAST</c>
            ((HWND)0xffff), the message is sent to all top-level windows in the system, including disabled or invisible unowned windows,
            overlapped windows, and pop-up windows; but the message is not sent to child windows.
            </para>
            <para>
            Message sending is subject to UIPI. The thread of a process can send messages only to message queues of threads in processes of
            lesser or equal integrity level.
            </para>
            </param>
            <param name="msg">
            <para>Type: <c>UINT</c></para>
            <para>The message to be sent.</para>
            <para>For lists of the system-provided messages, see System-Defined Messages.</para>
            </param>
            <param name="wParam">
            <para>Type: <c>WPARAM</c></para>
            <para>Additional message-specific information.</para>
            </param>
            <param name="lParam">
            <para>Type: <c>LPARAM</c></para>
            <para>Additional message-specific information.</para>
            </param>
            <returns>
            <para>Type: <c>LRESULT</c></para>
            <para>The return value specifies the result of the message processing; it depends on the message sent.</para>
            </returns>
            <remarks>
            <para>When a message is blocked by UIPI the last error, retrieved with GetLastError, is set to 5 (access denied).</para>
            <para>
            Applications that need to communicate using <c>HWND_BROADCAST</c> should use the RegisterWindowMessage function to obtain a
            unique message for inter-application communication.
            </para>
            <para>
            The system only does marshalling for system messages (those in the range 0 to (WM_USER-1)). To send other messages (those &gt;=
            <c>WM_USER</c>) to another process, you must do custom marshalling.
            </para>
            <para>
            If the specified window was created by the calling thread, the window procedure is called immediately as a subroutine. If the
            specified window was created by a different thread, the system switches to that thread and calls the appropriate window
            procedure. Messages sent between threads are processed only when the receiving thread executes message retrieval code. The
            sending thread is blocked until the receiving thread processes the message. However, the sending thread will process incoming
            nonqueued messages while waiting for its message to be processed. To prevent this, use SendMessageTimeout with SMTO_BLOCK set.
            For more information on nonqueued messages, see Nonqueued Messages.
            </para>
            <para>
            An accessibility application can use <c>SendMessage</c> to send WM_APPCOMMAND messages to the shell to launch applications. This
            functionality is not guaranteed to work for other types of applications.
            </para>
            <para>Examples</para>
            <para>For an example, see Displaying Keyboard Input.</para>
            </remarks>
        </member>
        <member name="M:Vanara.PInvoke.User32.SendMessage``1(Vanara.PInvoke.HWND,``0,System.IntPtr,System.IntPtr)">
            <summary>
            <para>
            Sends the specified message to a window or windows. The <c>SendMessage</c> function calls the window procedure for the specified
            window and does not return until the window procedure has processed the message.
            </para>
            <para>
            To send a message and return immediately, use the SendMessageCallback or SendNotifyMessage function. To post a message to a
            thread's message queue and return immediately, use the PostMessage or PostThreadMessage function.
            </para>
            </summary>
            <typeparam name="TMsg">The type of the message. This can be any type that converts to <see cref="T:System.UInt32"/>.</typeparam>
            <param name="hWnd"><para>Type: <c>HWND</c></para>
            <para>
            A handle to the window whose window procedure will receive the message. If this parameter is <c>HWND_BROADCAST</c>
            ((HWND)0xffff), the message is sent to all top-level windows in the system, including disabled or invisible unowned windows,
            overlapped windows, and pop-up windows; but the message is not sent to child windows.
            </para>
            <para>
            Message sending is subject to UIPI. The thread of a process can send messages only to message queues of threads in processes of
            lesser or equal integrity level.
            </para></param>
            <param name="msg"><para>Type: <c>UINT</c></para>
            <para>The message to be sent.</para>
            <para>For lists of the system-provided messages, see System-Defined Messages.</para></param>
            <param name="wParam"><para>Type: <c>WPARAM</c></para>
            <para>Additional message-specific information.</para></param>
            <param name="lParam"><para>Type: <c>LPARAM</c></para>
            <para>Additional message-specific information.</para></param>
            <returns>
            <para>Type: <c>LRESULT</c></para>
            <para>The return value specifies the result of the message processing; it depends on the message sent.</para>
            </returns>
            <remarks>
            <para>When a message is blocked by UIPI the last error, retrieved with GetLastError, is set to 5 (access denied).</para>
            <para>
            Applications that need to communicate using <c>HWND_BROADCAST</c> should use the RegisterWindowMessage function to obtain a
            unique message for inter-application communication.
            </para>
            <para>
            The system only does marshalling for system messages (those in the range 0 to (WM_USER-1)). To send other messages (those &gt;=
            <c>WM_USER</c>) to another process, you must do custom marshalling.
            </para>
            <para>
            If the specified window was created by the calling thread, the window procedure is called immediately as a subroutine. If the
            specified window was created by a different thread, the system switches to that thread and calls the appropriate window
            procedure. Messages sent between threads are processed only when the receiving thread executes message retrieval code. The
            sending thread is blocked until the receiving thread processes the message. However, the sending thread will process incoming
            nonqueued messages while waiting for its message to be processed. To prevent this, use SendMessageTimeout with SMTO_BLOCK set.
            For more information on nonqueued messages, see Nonqueued Messages.
            </para>
            <para>
            An accessibility application can use <c>SendMessage</c> to send WM_APPCOMMAND messages to the shell to launch applications. This
            functionality is not guaranteed to work for other types of applications.
            </para>
            <para>Examples</para>
            <para>For an example, see Displaying Keyboard Input.</para>
            </remarks>
        </member>
        <member name="M:Vanara.PInvoke.User32.SendMessage``2(Vanara.PInvoke.HWND,``0,``1,System.IntPtr)">
            <summary>
            <para>
            Sends the specified message to a window or windows. The <c>SendMessage</c> function calls the window procedure for the specified
            window and does not return until the window procedure has processed the message.
            </para>
            <para>
            To send a message and return immediately, use the SendMessageCallback or SendNotifyMessage function. To post a message to a
            thread's message queue and return immediately, use the PostMessage or PostThreadMessage function.
            </para>
            </summary>
            <typeparam name="TMsg">The type of the message. This can be any type that converts to <see cref="T:System.UInt32"/>.</typeparam>
            <typeparam name="TWP">The type of the <paramref name="wParam"/> parameter. This can be any type that converts to <see cref="T:System.Int64" />.</typeparam>
            <param name="hWnd">
            <para>Type: <c>HWND</c></para>
            <para>
            A handle to the window whose window procedure will receive the message. If this parameter is <c>HWND_BROADCAST</c>
            ((HWND)0xffff), the message is sent to all top-level windows in the system, including disabled or invisible unowned windows,
            overlapped windows, and pop-up windows; but the message is not sent to child windows.
            </para>
            <para>
            Message sending is subject to UIPI. The thread of a process can send messages only to message queues of threads in processes of
            lesser or equal integrity level.
            </para>
            </param>
            <param name="msg">
            <para>Type: <c>UINT</c></para>
            <para>The message to be sent.</para>
            <para>For lists of the system-provided messages, see System-Defined Messages.</para>
            </param>
            <param name="wParam">
            <para>Type: <c>WPARAM</c></para>
            <para>Additional message-specific information.</para>
            </param>
            <param name="lParam">
            <para>Type: <c>LPARAM</c></para>
            <para>Additional message-specific information.</para>
            </param>
            <returns>
            <para>Type: <c>LRESULT</c></para>
            <para>The return value specifies the result of the message processing; it depends on the message sent.</para>
            </returns>
            <remarks>
            <para>When a message is blocked by UIPI the last error, retrieved with GetLastError, is set to 5 (access denied).</para>
            <para>
            Applications that need to communicate using <c>HWND_BROADCAST</c> should use the RegisterWindowMessage function to obtain a
            unique message for inter-application communication.
            </para>
            <para>
            The system only does marshalling for system messages (those in the range 0 to (WM_USER-1)). To send other messages (those &gt;=
            <c>WM_USER</c>) to another process, you must do custom marshalling.
            </para>
            <para>
            If the specified window was created by the calling thread, the window procedure is called immediately as a subroutine. If the
            specified window was created by a different thread, the system switches to that thread and calls the appropriate window
            procedure. Messages sent between threads are processed only when the receiving thread executes message retrieval code. The
            sending thread is blocked until the receiving thread processes the message. However, the sending thread will process incoming
            nonqueued messages while waiting for its message to be processed. To prevent this, use SendMessageTimeout with SMTO_BLOCK set.
            For more information on nonqueued messages, see Nonqueued Messages.
            </para>
            <para>
            An accessibility application can use <c>SendMessage</c> to send WM_APPCOMMAND messages to the shell to launch applications. This
            functionality is not guaranteed to work for other types of applications.
            </para>
            <para>Examples</para>
            <para>For an example, see Displaying Keyboard Input.</para>
            </remarks>
        </member>
        <member name="T:Vanara.PInvoke.User32.SetWindowPosFlags">
            <summary>Window sizing and positioning flags.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.SetWindowPosFlags.SWP_ASYNCWINDOWPOS">
            <summary>
            If the calling thread and the thread that owns the window are attached to different input queues, the system posts the
            request to the thread that owns the window. This prevents the calling thread from blocking its execution while other threads
            process the request.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.SetWindowPosFlags.SWP_DEFERERASE">
            <summary>Prevents generation of the WM_SYNCPAINT message.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.SetWindowPosFlags.SWP_DRAWFRAME">
            <summary>Draws a frame (defined in the window's class description) around the window.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.SetWindowPosFlags.SWP_FRAMECHANGED">
            <summary>
            Applies new frame styles set using the SetWindowLong function. Sends a WM_NCCALCSIZE message to the window, even if the
            window's size is not being changed. If this flag is not specified, WM_NCCALCSIZE is sent only when the window's size is being changed.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.SetWindowPosFlags.SWP_HIDEWINDOW">
            <summary>Hides the window.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.SetWindowPosFlags.SWP_NOACTIVATE">
            <summary>
            Does not activate the window. If this flag is not set, the window is activated and moved to the top of either the topmost or
            non-topmost group (depending on the setting of the hWndInsertAfter parameter).
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.SetWindowPosFlags.SWP_NOCOPYBITS">
            <summary>
            Discards the entire contents of the client area. If this flag is not specified, the valid contents of the client area are
            saved and copied back into the client area after the window is sized or repositioned.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.SetWindowPosFlags.SWP_NOMOVE">
            <summary>Retains the current position (ignores X and Y parameters).</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.SetWindowPosFlags.SWP_NOOWNERZORDER">
            <summary>Does not change the owner window's position in the Z order.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.SetWindowPosFlags.SWP_NOREDRAW">
            <summary>
            Does not redraw changes. If this flag is set, no repainting of any kind occurs. This applies to the client area, the
            nonclient area (including the title bar and scroll bars), and any part of the parent window uncovered as a result of the
            window being moved. When this flag is set, the application must explicitly invalidate or redraw any parts of the window and
            parent window that need redrawing.
            </summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.SetWindowPosFlags.SWP_NOREPOSITION">
            <summary>Same as the SWP_NOOWNERZORDER flag.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.SetWindowPosFlags.SWP_NOSENDCHANGING">
            <summary>Prevents the window from receiving the WM_WINDOWPOSCHANGING message.</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.SetWindowPosFlags.SWP_NOSIZE">
            <summary>Retains the current size (ignores the cx and cy parameters).</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.SetWindowPosFlags.SWP_NOZORDER">
            <summary>Retains the current Z order (ignores the hWndInsertAfter parameter).</summary>
        </member>
        <member name="F:Vanara.PInvoke.User32.SetWindowPosFlags.SWP_SHOWWINDOW">
            <summary>Displays the window.</summary>
        </member>
        <member name="M:Vanara.PInvoke.User32.AdjustWindowRect(Vanara.PInvoke.RECT@,Vanara.PInvoke.User32.WindowStyles,System.Boolean)">
            <summary>
            <para>
            Calculates the required size of the window rectangle, based on the desired client-rectangle size. The window rectangle can then
            be passed to the CreateWindow function to create a window whose client area is the desired size.
            </para>
            <para>To specify an extended window style, use the AdjustWindowRectEx function.</para>
            </summary>
            <param name="lpRect">
            <para>Type: <c>LPRECT</c></para>
            <para>
            A pointer to a RECT structure that contains the coordinates of the top-left and bottom-right corners of the desired client area.
            When the function returns, the structure contains the coordinates of the top-left and bottom-right corners of the window to
            accommodate the desired client area.
            </para>
            </param>
            <param name="dwStyle">
            <para>Type: <c>DWORD</c></para>
            <para>
            The window style of the window whose required size is to be calculated. Note that you cannot specify the <c>WS_OVERLAPPED</c> style.
            </para>
            </param>
            <param name="bMenu">
            <para>Type: <c>BOOL</c></para>
            <para>Indicates whether the window has a menu.</para>
            </param>
            <returns>
            <para>Type: <c>Type: <c>BOOL</c></c></para>
            <para>If the function succeeds, the return value is nonzero.</para>
            <para>If the function fails, the return value is zero. To get extended error information, call GetLastError.</para>
            </returns>
            <remarks>
            <para>
            A client rectangle is the smallest rectangle that completely encloses a client area. A window rectangle is the smallest rectangle
            that completely encloses the window, which includes the client area and the nonclient area.
            </para>
            <para>The <c>AdjustWindowRect</c> function does not add extra space when a menu bar wraps to two or more rows.</para>
            <para>
            The <c>AdjustWindowRect</c> function does not take the <c>WS_VSCROLL</c> or <c>WS_HSCROLL</c> styles into account. To account for
            the scroll bars, call the GetSystemMetrics function with <c>SM_CXVSCROLL</c> or <c>SM_CYHSCROLL</c>.
            </para>
            </remarks>
        </member>
        <member name="M:Vanara.PInvoke.User32.AdjustWindowRectEx(Vanara.PInvoke.RECT@,Vanara.PInvoke.User32.WindowStyles,System.Boolean,Vanara.PInvoke.User32.WindowStylesEx)">
            <summary>
            <para>
            Calculates the required size of the window rectangle, based on the desired size of the client rectangle. The window rectangle can
            then be passed to the CreateWindowEx function to create a window whose client area is the desired size.
            </para>
            </summary>
            <param name="lpRect">
            <para>Type: <c>LPRECT</c></para>
            <para>
            A pointer to a RECT structure that contains the coordinates of the top-left and bottom-right corners of the desired client area.
            When the function returns, the structure contains the coordinates of the top-left and bottom-right corners of the window to
            accommodate the desired client area.
            </para>
            </param>
            <param name="dwStyle">
            <para>Type: <c>DWORD</c></para>
            <para>
            The window style of the window whose required size is to be calculated. Note that you cannot specify the <c>WS_OVERLAPPED</c> style.
            </para>
            </param>
            <param name="bMenu">
            <para>Type: <c>BOOL</c></para>
            <para>Indicates whether the window has a menu.</para>
            </param>
            <param name="dwExStyle">
            <para>Type: <c>DWORD</c></para>
            <para>The extended window style of the window whose required size is to be calculated.</para>
            </param>
            <returns>
            <para>Type: <c>Type: <c>BOOL</c></c></para>
            <para>If the function succeeds, the return value is nonzero.</para>
            <para>If the function fails, the return value is zero. To get extended error information, call GetLastError.</para>
            </returns>
            <remarks>
            <para>
            A client rectangle is the smallest rectangle that completely encloses a client area. A window rectangle is the smallest rectangle
            that completely encloses the window, which includes the client area and the nonclient area.
            </para>
            <para>The <c>AdjustWindowRectEx</c> function does not add extra space when a menu bar wraps to two or more rows.</para>
            <para>
            The <c>AdjustWindowRectEx</c> function does not take the <c>WS_VSCROLL</c> or <c>WS_HSCROLL</c> styles into account. To account
            for the scroll bars, call the GetSystemMetrics function with <c>SM_CXVSCROLL</c> or <c>SM_CYHSCROLL</c>.
            </para>
            <para>
            This API is not DPI aware, and should not be used if the calling thread is per-monitor DPI aware. For the DPI-aware version of
            this API, see AdjustWindowsRectExForDPI. For more information on DPI awareness, see the Windows High DPI documentation.
            </para>
            </remarks>
        </member>
        <member name="M:Vanara.PInvoke.User32.DestroyWindow(Vanara.PInvoke.HWND)">
            <summary>
            <para>
            Destroys the specified window. The function sends WM_DESTROY and WM_NCDESTROY messages to the window to deactivate it and remove
            the keyboard focus from it. The function also destroys the window's menu, flushes the thread message queue, destroys timers,
            removes clipboard ownership, and breaks the clipboard viewer chain (if the window is at the top of the viewer chain).
            </para>
            <para>
            If the specified window is a parent or owner window, <c>DestroyWindow</c> automatically destroys the associated child or owned
            windows when it destroys the parent or owner window. The function first destroys child or owned windows, and then it destroys the
            parent or owner window.
            </para>
            <para><c>DestroyWindow</c> also destroys modeless dialog boxes created by the CreateDialog function.</para>
            </summary>
            <param name="hWnd">
            <para>Type: <c>HWND</c></para>
            <para>A handle to the window to be destroyed.</para>
            </param>
            <returns>
            <para>Type: <c>Type: <c>BOOL</c></c></para>
            <para>If the function succeeds, the return value is nonzero.</para>
            <para>If the function fails, the return value is zero. To get extended error information, call GetLastError.</para>
            </returns>
            <remarks>
            <para>A thread cannot use <c>DestroyWindow</c> to destroy a window created by a different thread.</para>
            <para>
            If the window being destroyed is a child window that does not have the <c>WS_EX_NOPARENTNOTIFY</c> style, a WM_PARENTNOTIFY
            message is sent to the parent.
            </para>
            <para>Examples</para>
            <para>For an example, see Destroying a Window.</para>
            </remarks>
        </member>
        <member name="M:Vanara.PInvoke.User32.GetWindowRect(Vanara.PInvoke.HWND,Vanara.PInvoke.RECT@)">
            <summary>
            Retrieves the dimensions of the bounding rectangle of the specified window. The dimensions are given in screen coordinates that
            are relative to the upper-left corner of the screen.
            </summary>
            <param name="hWnd">A handle to the window.</param>
            <param name="lpRect">
            A pointer to a RECT structure that receives the screen coordinates of the upper-left and lower-right corners of the window.
            </param>
            <returns>
            If the function succeeds, the return value is true. If the function fails, the return value is false. To get extended error
            information, call GetLastError.
            </returns>
        </member>
        <member name="M:Vanara.PInvoke.User32.IsZoomed(Vanara.PInvoke.HWND)">
            <summary>
            <para>Determines whether a window is maximized.</para>
            </summary>
            <param name="hWnd">
            <para>Type: <c>HWND</c></para>
            <para>A handle to the window to be tested.</para>
            </param>
            <returns>
            <para>Type: <c>Type: <c>BOOL</c></c></para>
            <para>If the window is zoomed, the return value is nonzero.</para>
            <para>If the window is not zoomed, the return value is zero.</para>
            </returns>
        </member>
        <member name="M:Vanara.PInvoke.User32.ReleaseCapture">
            <summary>
            Releases the mouse capture from a window in the current thread and restores normal mouse input processing. A window that has
            captured the mouse receives all mouse input, regardless of the position of the cursor, except when a mouse button is clicked
            while the cursor hot spot is in the window of another thread.
            </summary>
            <returns>
            <para>Type: <c>BOOL</c></para>
            <para>If the function succeeds, the return value is nonzero.</para>
            <para>If the function fails, the return value is zero. To get extended error information, call GetLastError.</para>
            </returns>
            <remarks>
            <para>An application calls this function after calling the SetCapture function.</para>
            <para>Examples</para>
            <para>For an example, see Drawing Lines with the Mouse.</para>
            </remarks>
        </member>
    </members>
</doc>
